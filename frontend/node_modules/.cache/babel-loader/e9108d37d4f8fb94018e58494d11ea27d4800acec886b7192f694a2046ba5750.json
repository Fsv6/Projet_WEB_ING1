{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, onMounted, computed, watch } from 'vue';\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport api from '@/services/api';\nimport defaultAvatar from '@/assets/default-avatar.png';\nimport { getPhotoUrl } from '@/utils/photo';\nexport default {\n  name: 'AdminHistory',\n  components: {\n    AppLayout\n  },\n  setup() {\n    const logs = ref([]);\n    const allUserActions = ref({}); // Stockage des actions d'aujourd'hui pour tous les utilisateurs\n    const currentPage = ref(1);\n    const totalPages = ref(1);\n    const loading = ref(false);\n    const expandedUsers = ref([]);\n    const expandedCategories = ref(new Map());\n    const searchTerm = ref('');\n    const searchTimeout = ref(null);\n    const usersPerPage = 7; // Nombre d'utilisateurs par page\n    const errorMessage = ref('');\n    const selectedCategory = ref('');\n\n    // Extraire toutes les catégories d'action possibles à partir des logs ou d'une liste statique\n    const actionCategories = ['connexion', 'deconnexion', 'creation_utilisateur', 'modification_utilisateur', 'suppression_utilisateur', 'validation_compte', 'ajout_points', 'creation_famille', 'modification_famille', 'suppression_famille', 'ajout_membre_famille', 'retrait_membre_famille', 'creation_recette', 'modification_recette', 'suppression_recette', 'notation_recette', 'commentaire_recette', 'creation_objet', 'modification_objet', 'suppression_objet', 'utilisation_objet'];\n\n    // Chargement de toutes les actions d'aujourd'hui pour référence\n    const loadAllTodayActions = async () => {\n      try {\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        const response = await api.get('/history?limit=1000'); // Demander un grand nombre pour avoir toutes les actions\n        const allLogs = response.data.histories || [];\n\n        // Compter les actions d'aujourd'hui par utilisateur\n        const actionsByUser = {};\n        allLogs.forEach(log => {\n          if (!log.user) return;\n          const actionDate = new Date(log.date);\n          const userEmail = log.user.email;\n          if (actionDate >= today) {\n            if (!actionsByUser[userEmail]) {\n              actionsByUser[userEmail] = {\n                count: 0,\n                user: log.user\n              };\n            }\n            actionsByUser[userEmail].count++;\n          }\n        });\n        allUserActions.value = actionsByUser;\n      } catch (error) {\n        console.error('Erreur lors du chargement des actions totales:', error);\n      }\n    };\n    const loadHistory = async (page = 1) => {\n      try {\n        loading.value = true;\n        errorMessage.value = '';\n        currentPage.value = page;\n        const params = new URLSearchParams();\n        params.append('page', page);\n        params.append('limit', 100); // Demander plus d'actions pour avoir assez d'utilisateurs distincts\n\n        if (searchTerm.value) {\n          params.append('search', searchTerm.value);\n        }\n\n        // Si une catégorie est sélectionnée, l'ajouter comme paramètre\n        // Bien que le filtrage des actions par catégorie soit fait côté client,\n        // informer le backend peut aider à optimiser la requête dans le futur\n        if (selectedCategory.value) {\n          params.append('action', selectedCategory.value);\n        }\n        const response = await api.get(`/history?${params.toString()}`);\n        logs.value = response.data.histories || [];\n        totalPages.value = response.data.pagination.pages;\n      } catch (error) {\n        console.error('Erreur lors du chargement de l\\'historique:', error);\n        logs.value = [];\n        errorMessage.value = \"Erreur lors du chargement de l'historique. Veuillez réessayer.\";\n      } finally {\n        loading.value = false;\n      }\n    };\n    const debounceSearch = () => {\n      if (searchTimeout.value) {\n        clearTimeout(searchTimeout.value);\n      }\n      searchTimeout.value = setTimeout(() => {\n        loadHistory(1); // Retour à la première page lors d'une recherche\n      }, 300); // Délai de 300ms pour éviter trop de requêtes\n    };\n\n    // Grouper les logs par utilisateur\n    const groupedByUser = computed(() => {\n      // Grouper les logs par utilisateur\n      const users = {};\n      logs.value.forEach(log => {\n        if (!log.user) return;\n        const email = log.user.email;\n\n        // Si une catégorie est sélectionnée et que l'action ne correspond pas, ignorer ce log\n        if (selectedCategory.value && log.action !== selectedCategory.value) return;\n        if (!users[email]) {\n          users[email] = {\n            user: log.user,\n            categories: {}\n          };\n        }\n        if (!users[email].categories[log.action]) {\n          users[email].categories[log.action] = [];\n        }\n        users[email].categories[log.action].push(log);\n      });\n\n      // Ne retourner que les utilisateurs ayant au moins une action (après filtrage)\n      return Object.values(users).filter(u => Object.keys(u.categories).length > 0);\n    });\n\n    // Nombre total de pages d'utilisateurs (7 utilisateurs par page)\n    const totalUserPages = computed(() => {\n      return Math.ceil(groupedByUser.value.length / usersPerPage);\n    });\n\n    // Utilisateurs à afficher pour la page courante (pagination côté client)\n    const displayedUsers = computed(() => {\n      const start = (currentPage.value - 1) * usersPerPage;\n      const end = start + usersPerPage;\n\n      // S'assurer que nous avons des utilisateurs avec des actions correspondant au filtre\n      const filteredUsers = groupedByUser.value.filter(userHistory => {\n        // Si aucun filtre famille n'est appliqué, afficher cet utilisateur\n        if (!selectedCategory.value) {\n          return true;\n        }\n\n        // Vérifier si l'utilisateur a des actions liées à la famille sélectionnée\n        // (les logs ont déjà été filtrés par le backend, donc si l'utilisateur apparaît,\n        // c'est qu'il a au moins une action liée à cette famille)\n        return Object.values(userHistory.categories).some(actions => actions.length > 0);\n      });\n      return filteredUsers.slice(start, end);\n    });\n    const getTotalActions = categories => {\n      return Object.values(categories).reduce((total, actions) => total + actions.length, 0);\n    };\n    const getActionsToday = userEmail => {\n      return allUserActions.value[userEmail]?.count || 0;\n    };\n    const toggleUser = userEmail => {\n      const index = expandedUsers.value.indexOf(userEmail);\n      if (index === -1) {\n        expandedUsers.value.push(userEmail);\n      } else {\n        expandedUsers.value.splice(index, 1);\n        // Fermer toutes les catégories de cet utilisateur\n        expandedCategories.value.delete(userEmail);\n      }\n    };\n    const toggleCategory = (userEmail, category) => {\n      if (!expandedCategories.value.has(userEmail)) {\n        expandedCategories.value.set(userEmail, new Set());\n      }\n      const userCategories = expandedCategories.value.get(userEmail);\n      if (userCategories.has(category)) {\n        userCategories.delete(category);\n      } else {\n        userCategories.add(category);\n      }\n    };\n    const isExpandedCategory = (userEmail, category) => {\n      return expandedCategories.value.has(userEmail) && expandedCategories.value.get(userEmail).has(category);\n    };\n    const getCategoryIcon = action => {\n      const icons = {\n        // Utilisateurs\n        'connexion': 'fas fa-sign-in-alt',\n        'deconnexion': 'fas fa-sign-out-alt',\n        'creation_utilisateur': 'fas fa-user-plus',\n        'modification_utilisateur': 'fas fa-user-edit',\n        'suppression_utilisateur': 'fas fa-user-minus',\n        'validation_compte': 'fas fa-user-check',\n        'ajout_points': 'fas fa-star',\n        // Familles\n        'creation_famille': 'fas fa-users-cog',\n        'modification_famille': 'fas fa-users-cog',\n        'suppression_famille': 'fas fa-users-slash',\n        'ajout_membre_famille': 'fas fa-user-plus',\n        'retrait_membre_famille': 'fas fa-user-minus',\n        // Recettes\n        'creation_recette': 'fas fa-utensils',\n        'modification_recette': 'fas fa-edit',\n        'suppression_recette': 'fas fa-trash-alt',\n        'notation_recette': 'fas fa-star',\n        'commentaire_recette': 'fas fa-comment',\n        // Objets/Ingrédients\n        'creation_objet': 'fas fa-plus-circle',\n        'modification_objet': 'fas fa-edit',\n        'suppression_objet': 'fas fa-trash-alt',\n        'utilisation_objet': 'fas fa-hand-pointer'\n      };\n      return icons[action] || 'fas fa-history';\n    };\n    const formatDate = date => {\n      return new Date(date).toLocaleString('fr-FR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n    const formatAction = action => {\n      const actions = {\n        // Utilisateurs\n        'connexion': 'Connexions',\n        'deconnexion': 'Déconnexions',\n        'creation_utilisateur': 'Créations d\\'utilisateurs',\n        'modification_utilisateur': 'Modifications d\\'utilisateurs',\n        'suppression_utilisateur': 'Suppressions d\\'utilisateurs',\n        'validation_compte': 'Validations de compte',\n        'ajout_points': 'Ajouts de points',\n        // Familles\n        'creation_famille': 'Créations de familles',\n        'modification_famille': 'Modifications de familles',\n        'suppression_famille': 'Suppressions de familles',\n        'ajout_membre_famille': 'Ajouts de membres',\n        'retrait_membre_famille': 'Retraits de membres',\n        // Recettes\n        'creation_recette': 'Créations de recettes',\n        'modification_recette': 'Modifications de recettes',\n        'suppression_recette': 'Suppressions de recettes',\n        'notation_recette': 'Notations de recettes',\n        'commentaire_recette': 'Commentaires de recettes',\n        // Objets/Ingrédients\n        'creation_objet': 'Créations d\\'objets',\n        'modification_objet': 'Modifications d\\'objets',\n        'suppression_objet': 'Suppressions d\\'objets',\n        'utilisation_objet': 'Utilisations d\\'objets'\n      };\n      return actions[action] || action;\n    };\n    const getActionClass = action => {\n      const actionType = action.split('_')[0];\n      const classes = {\n        'connexion': 'action-connexion',\n        'deconnexion': 'action-deconnexion',\n        'creation': 'action-creation',\n        'modification': 'action-modification',\n        'suppression': 'action-suppression',\n        'ajout': 'action-ajout',\n        'retrait': 'action-retrait',\n        'validation': 'action-validation',\n        'notation': 'action-notation',\n        'commentaire': 'action-commentaire',\n        'utilisation': 'action-utilisation'\n      };\n      return classes[actionType] || '';\n    };\n    const formatDetailKey = key => {\n      return key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');\n    };\n    const formatUserAgent = userAgent => {\n      if (!userAgent) return '';\n      return userAgent.split(' ')[0];\n    };\n    const changePage = page => {\n      if (page >= 1 && page <= totalUserPages.value) {\n        currentPage.value = page;\n\n        // Si on change de page, on ferme tous les utilisateurs développés\n        expandedUsers.value = [];\n        expandedCategories.value = new Map();\n      }\n    };\n    const clearFilter = () => {\n      selectedCategory.value = '';\n      loadHistory(1);\n    };\n    onMounted(() => {\n      loadAllTodayActions(); // Charger d'abord toutes les actions d'aujourd'hui\n      loadHistory();\n    });\n\n    // Réinitialiser la page quand les filtres changent\n    watch([selectedCategory, searchTerm], () => {\n      if (currentPage.value !== 1) {\n        currentPage.value = 1;\n      }\n\n      // Fermer tous les utilisateurs développés quand on change de filtre\n      expandedUsers.value = [];\n      expandedCategories.value = new Map();\n\n      // Recharger l'historique quand les filtres changent\n      loadHistory(1);\n    });\n    return {\n      logs,\n      allUserActions,\n      currentPage,\n      totalPages,\n      totalUserPages,\n      groupedByUser,\n      displayedUsers,\n      expandedUsers,\n      defaultAvatar,\n      formatDate,\n      formatAction,\n      getActionClass,\n      getCategoryIcon,\n      formatDetailKey,\n      formatUserAgent,\n      toggleUser,\n      toggleCategory,\n      isExpandedCategory,\n      getTotalActions,\n      getActionsToday,\n      changePage,\n      searchTerm,\n      debounceSearch,\n      loading,\n      getPhotoUrl,\n      errorMessage,\n      selectedCategory,\n      actionCategories,\n      clearFilter\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","AppLayout","api","defaultAvatar","getPhotoUrl","name","components","setup","logs","allUserActions","currentPage","totalPages","loading","expandedUsers","expandedCategories","Map","searchTerm","searchTimeout","usersPerPage","errorMessage","selectedCategory","actionCategories","loadAllTodayActions","today","Date","setHours","response","get","allLogs","data","histories","actionsByUser","forEach","log","user","actionDate","date","userEmail","email","count","value","error","console","loadHistory","page","params","URLSearchParams","append","toString","pagination","pages","debounceSearch","clearTimeout","setTimeout","groupedByUser","users","action","categories","push","Object","values","filter","u","keys","length","totalUserPages","Math","ceil","displayedUsers","start","end","filteredUsers","userHistory","some","actions","slice","getTotalActions","reduce","total","getActionsToday","toggleUser","index","indexOf","splice","delete","toggleCategory","category","has","set","Set","userCategories","add","isExpandedCategory","getCategoryIcon","icons","formatDate","toLocaleString","day","month","year","hour","minute","formatAction","getActionClass","actionType","split","classes","formatDetailKey","key","charAt","toUpperCase","replace","formatUserAgent","userAgent","changePage","clearFilter"],"sources":["C:\\Users\\benab\\Desktop\\COURS 24_25\\S2\\WEB\\V4\\Projet_WEB_ING1\\frontend\\src\\views\\AdminHistory.vue"],"sourcesContent":["<template>\n  <AppLayout>\n    <div class=\"history-container\">\n      <h1 class=\"page-title\">Historique des actions</h1>\n\n      <!-- Message d'erreur -->\n      <div v-if=\"errorMessage\" class=\"error-message\">\n        <i class=\"fas fa-exclamation-triangle\"></i> {{ errorMessage }}\n      </div>\n\n      <!-- Filtres et recherche -->\n      <div class=\"filters-container\">\n        <div class=\"search-box\">\n          <input\n              type=\"text\"\n              v-model=\"searchTerm\"\n              placeholder=\"Rechercher...\"\n              @input=\"debounceSearch\"\n          />\n          <i class=\"fas fa-search search-icon\"></i>\n        </div>\n\n        <div class=\"category-filter\">\n          <select v-model=\"selectedCategory\" @change=\"debounceSearch()\">\n            <option value=\"\">Toutes les catégories</option>\n            <option v-for=\"cat in actionCategories\" :key=\"cat\" :value=\"cat\">\n              {{ formatAction(cat) }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <!-- Indication du filtre actif -->\n      <div v-if=\"selectedCategory\" class=\"active-filter-indicator\">\n        <i class=\"fas fa-filter\"></i> Filtre actif: <strong>{{ formatAction(selectedCategory) }}</strong>\n        <button class=\"clear-filter-btn\" @click=\"clearFilter\">\n          <i class=\"fas fa-times\"></i> Effacer\n        </button>\n      </div>\n\n      <!-- Affichage du message si aucun résultat -->\n      <div v-if=\"logs.length === 0 && !loading\" class=\"no-results\">\n        <p>Aucun résultat ne correspond à votre recherche</p>\n      </div>\n\n      <!-- Message si aucun résultat après filtrage -->\n      <div v-else-if=\"groupedByUser.length === 0 && !loading\" class=\"no-results\">\n        <p>\n          <i class=\"fas fa-exclamation-circle\"></i>\n          Aucune action de type <strong>{{ formatAction(selectedCategory) }}</strong> n'a été trouvée\n        </p>\n        <button class=\"reset-filter-btn\" @click=\"clearFilter\">\n          Réinitialiser le filtre\n        </button>\n      </div>\n\n      <!-- Liste des utilisateurs -->\n      <div class=\"users-container\">\n        <transition-group name=\"user-list\" tag=\"div\" class=\"users-wrapper\">\n          <div v-for=\"(userHistory, index) in displayedUsers\" :key=\"userHistory.user.email\" class=\"user-card\">\n            <div class=\"user-header\" @click=\"toggleUser(userHistory.user.email)\">\n              <div class=\"user-info\">\n                <img :src=\"getPhotoUrl(userHistory.user.photo, userHistory.user._id)\" class=\"user-avatar\" alt=\"Avatar\">\n                <div class=\"user-details\">\n                  <h3>{{ userHistory.user.email }}</h3>\n                  <span class=\"action-count\">\n                    {{ getActionsToday(userHistory.user.email) }} action(s) aujourd'hui\n                  </span>\n                </div>\n              </div>\n              <div class=\"expand-button\" :class=\"{ 'expanded': expandedUsers.includes(userHistory.user.email) }\">\n                <i class=\"fas fa-chevron-down\"></i>\n              </div>\n            </div>\n\n            <!-- Catégories d'actions de l'utilisateur -->\n            <div v-if=\"expandedUsers.includes(userHistory.user.email)\" class=\"categories-container\">\n              <transition-group name=\"category-list\" tag=\"div\" class=\"categories-wrapper\">\n                <div v-for=\"(actions, category) in userHistory.categories\" :key=\"category\" class=\"category-section\">\n                  <div class=\"category-header\" @click=\"toggleCategory(userHistory.user.email, category)\">\n                    <div class=\"category-info\">\n                      <span :class=\"['category-icon', getActionClass(category)]\">\n                        <i :class=\"getCategoryIcon(category)\"></i>\n                      </span>\n                      <div class=\"category-details\">\n                        <h4>{{ formatAction(category) }}</h4>\n                        <span class=\"category-count\">{{ actions.length }} action(s)</span>\n                      </div>\n                    </div>\n                    <div class=\"category-meta\">\n                      <span class=\"last-update-date\">Dernière action: {{ formatDate(actions[0].date) }}</span>\n                      <div class=\"expand-button\" :class=\"{ 'expanded': isExpandedCategory(userHistory.user.email, category) }\">\n                        <i class=\"fas fa-chevron-down\"></i>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Timeline des actions de la catégorie -->\n                  <transition name=\"timeline\">\n                    <div v-if=\"isExpandedCategory(userHistory.user.email, category)\" class=\"timeline-container\">\n                      <div class=\"timeline\">\n                        <div v-for=\"action in actions\" :key=\"action._id\" class=\"timeline-item\">\n                          <div class=\"timeline-point\" :class=\"getActionClass(category)\"></div>\n                          <div class=\"timeline-content\">\n                            <div class=\"action-header\">\n                              <span class=\"action-date\">{{ formatDate(action.date) }}</span>\n                            </div>\n                            <div class=\"action-details\" v-if=\"action.details\">\n                              <div v-for=\"(value, key) in action.details\" :key=\"key\" class=\"detail-item\">\n                                <span class=\"detail-label\">{{ formatDetailKey(key) }}:</span>\n                                <span class=\"detail-value\">{{ value }}</span>\n                              </div>\n                            </div>\n                            <div class=\"action-meta\">\n                              <span class=\"meta-item\" v-if=\"action.ip\">\n                                <i class=\"fas fa-network-wired\"></i> {{ action.ip }}\n                              </span>\n                              <span class=\"meta-item\" v-if=\"action.userAgent\">\n                                <i class=\"fas fa-laptop\"></i> {{ formatUserAgent(action.userAgent) }}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </transition>\n                </div>\n              </transition-group>\n            </div>\n          </div>\n        </transition-group>\n      </div>\n\n      <!-- Pagination -->\n      <div class=\"pagination\" v-if=\"totalUserPages > 1\">\n        <button\n            :disabled=\"currentPage === 1\"\n            @click=\"changePage(currentPage - 1)\"\n            class=\"page-btn\"\n        >\n          <i class=\"fas fa-chevron-left\"></i> Précédent\n        </button>\n        <span class=\"page-info\">Page {{ currentPage }} sur {{ totalUserPages }}</span>\n        <button\n            :disabled=\"currentPage === totalUserPages\"\n            @click=\"changePage(currentPage + 1)\"\n            class=\"page-btn\"\n        >\n          Suivant <i class=\"fas fa-chevron-right\"></i>\n        </button>\n      </div>\n    </div>\n  </AppLayout>\n</template>\n\n<script>\nimport { ref, onMounted, computed, watch } from 'vue';\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport api from '@/services/api';\nimport defaultAvatar from '@/assets/default-avatar.png';\nimport { getPhotoUrl } from '@/utils/photo';\n\nexport default {\n  name: 'AdminHistory',\n  components: {\n    AppLayout\n  },\n  setup() {\n    const logs = ref([]);\n    const allUserActions = ref({}); // Stockage des actions d'aujourd'hui pour tous les utilisateurs\n    const currentPage = ref(1);\n    const totalPages = ref(1);\n    const loading = ref(false);\n    const expandedUsers = ref([]);\n    const expandedCategories = ref(new Map());\n    const searchTerm = ref('');\n    const searchTimeout = ref(null);\n    const usersPerPage = 7; // Nombre d'utilisateurs par page\n    const errorMessage = ref('');\n    const selectedCategory = ref('');\n\n    // Extraire toutes les catégories d'action possibles à partir des logs ou d'une liste statique\n    const actionCategories = [\n      'connexion', 'deconnexion', 'creation_utilisateur', 'modification_utilisateur', 'suppression_utilisateur', 'validation_compte', 'ajout_points',\n      'creation_famille', 'modification_famille', 'suppression_famille', 'ajout_membre_famille', 'retrait_membre_famille',\n      'creation_recette', 'modification_recette', 'suppression_recette', 'notation_recette', 'commentaire_recette',\n      'creation_objet', 'modification_objet', 'suppression_objet', 'utilisation_objet'\n    ];\n\n    // Chargement de toutes les actions d'aujourd'hui pour référence\n    const loadAllTodayActions = async () => {\n      try {\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        const response = await api.get('/history?limit=1000'); // Demander un grand nombre pour avoir toutes les actions\n        const allLogs = response.data.histories || [];\n\n        // Compter les actions d'aujourd'hui par utilisateur\n        const actionsByUser = {};\n\n        allLogs.forEach(log => {\n          if (!log.user) return;\n\n          const actionDate = new Date(log.date);\n          const userEmail = log.user.email;\n\n          if (actionDate >= today) {\n            if (!actionsByUser[userEmail]) {\n              actionsByUser[userEmail] = {\n                count: 0,\n                user: log.user\n              };\n            }\n            actionsByUser[userEmail].count++;\n          }\n        });\n\n        allUserActions.value = actionsByUser;\n      } catch (error) {\n        console.error('Erreur lors du chargement des actions totales:', error);\n      }\n    };\n\n    const loadHistory = async (page = 1) => {\n      try {\n        loading.value = true;\n        errorMessage.value = '';\n        currentPage.value = page;\n\n        const params = new URLSearchParams();\n        params.append('page', page);\n        params.append('limit', 100); // Demander plus d'actions pour avoir assez d'utilisateurs distincts\n\n        if (searchTerm.value) {\n          params.append('search', searchTerm.value);\n        }\n        \n        // Si une catégorie est sélectionnée, l'ajouter comme paramètre\n        // Bien que le filtrage des actions par catégorie soit fait côté client,\n        // informer le backend peut aider à optimiser la requête dans le futur\n        if (selectedCategory.value) {\n          params.append('action', selectedCategory.value);\n        }\n\n        const response = await api.get(`/history?${params.toString()}`);\n        logs.value = response.data.histories || [];\n        totalPages.value = response.data.pagination.pages;\n      } catch (error) {\n        console.error('Erreur lors du chargement de l\\'historique:', error);\n        logs.value = [];\n        errorMessage.value = \"Erreur lors du chargement de l'historique. Veuillez réessayer.\";\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const debounceSearch = () => {\n      if (searchTimeout.value) {\n        clearTimeout(searchTimeout.value);\n      }\n\n      searchTimeout.value = setTimeout(() => {\n        loadHistory(1); // Retour à la première page lors d'une recherche\n      }, 300); // Délai de 300ms pour éviter trop de requêtes\n    };\n\n    // Grouper les logs par utilisateur\n    const groupedByUser = computed(() => {\n      // Grouper les logs par utilisateur\n      const users = {};\n      logs.value.forEach(log => {\n        if (!log.user) return;\n        const email = log.user.email;\n        \n        // Si une catégorie est sélectionnée et que l'action ne correspond pas, ignorer ce log\n        if (selectedCategory.value && log.action !== selectedCategory.value) return;\n        \n        if (!users[email]) {\n          users[email] = { user: log.user, categories: {} };\n        }\n        \n        if (!users[email].categories[log.action]) {\n          users[email].categories[log.action] = [];\n        }\n        users[email].categories[log.action].push(log);\n      });\n      \n      // Ne retourner que les utilisateurs ayant au moins une action (après filtrage)\n      return Object.values(users).filter(u => Object.keys(u.categories).length > 0);\n    });\n\n    // Nombre total de pages d'utilisateurs (7 utilisateurs par page)\n    const totalUserPages = computed(() => {\n      return Math.ceil(groupedByUser.value.length / usersPerPage);\n    });\n\n    // Utilisateurs à afficher pour la page courante (pagination côté client)\n    const displayedUsers = computed(() => {\n      const start = (currentPage.value - 1) * usersPerPage;\n      const end = start + usersPerPage;\n\n      // S'assurer que nous avons des utilisateurs avec des actions correspondant au filtre\n      const filteredUsers = groupedByUser.value.filter(userHistory => {\n        // Si aucun filtre famille n'est appliqué, afficher cet utilisateur\n        if (!selectedCategory.value) {\n          return true;\n        }\n\n        // Vérifier si l'utilisateur a des actions liées à la famille sélectionnée\n        // (les logs ont déjà été filtrés par le backend, donc si l'utilisateur apparaît,\n        // c'est qu'il a au moins une action liée à cette famille)\n        return Object.values(userHistory.categories).some(actions => actions.length > 0);\n      });\n\n      return filteredUsers.slice(start, end);\n    });\n\n    const getTotalActions = (categories) => {\n      return Object.values(categories).reduce((total, actions) => total + actions.length, 0);\n    };\n\n    const getActionsToday = (userEmail) => {\n      return allUserActions.value[userEmail]?.count || 0;\n    };\n\n    const toggleUser = (userEmail) => {\n      const index = expandedUsers.value.indexOf(userEmail);\n      if (index === -1) {\n        expandedUsers.value.push(userEmail);\n      } else {\n        expandedUsers.value.splice(index, 1);\n        // Fermer toutes les catégories de cet utilisateur\n        expandedCategories.value.delete(userEmail);\n      }\n    };\n\n    const toggleCategory = (userEmail, category) => {\n      if (!expandedCategories.value.has(userEmail)) {\n        expandedCategories.value.set(userEmail, new Set());\n      }\n\n      const userCategories = expandedCategories.value.get(userEmail);\n      if (userCategories.has(category)) {\n        userCategories.delete(category);\n      } else {\n        userCategories.add(category);\n      }\n    };\n\n    const isExpandedCategory = (userEmail, category) => {\n      return expandedCategories.value.has(userEmail) &&\n          expandedCategories.value.get(userEmail).has(category);\n    };\n\n    const getCategoryIcon = (action) => {\n      const icons = {\n        // Utilisateurs\n        'connexion': 'fas fa-sign-in-alt',\n        'deconnexion': 'fas fa-sign-out-alt',\n        'creation_utilisateur': 'fas fa-user-plus',\n        'modification_utilisateur': 'fas fa-user-edit',\n        'suppression_utilisateur': 'fas fa-user-minus',\n        'validation_compte': 'fas fa-user-check',\n        'ajout_points': 'fas fa-star',\n\n        // Familles\n        'creation_famille': 'fas fa-users-cog',\n        'modification_famille': 'fas fa-users-cog',\n        'suppression_famille': 'fas fa-users-slash',\n        'ajout_membre_famille': 'fas fa-user-plus',\n        'retrait_membre_famille': 'fas fa-user-minus',\n\n        // Recettes\n        'creation_recette': 'fas fa-utensils',\n        'modification_recette': 'fas fa-edit',\n        'suppression_recette': 'fas fa-trash-alt',\n        'notation_recette': 'fas fa-star',\n        'commentaire_recette': 'fas fa-comment',\n\n        // Objets/Ingrédients\n        'creation_objet': 'fas fa-plus-circle',\n        'modification_objet': 'fas fa-edit',\n        'suppression_objet': 'fas fa-trash-alt',\n        'utilisation_objet': 'fas fa-hand-pointer'\n      };\n      return icons[action] || 'fas fa-history';\n    };\n\n    const formatDate = (date) => {\n      return new Date(date).toLocaleString('fr-FR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n\n    const formatAction = (action) => {\n      const actions = {\n        // Utilisateurs\n        'connexion': 'Connexions',\n        'deconnexion': 'Déconnexions',\n        'creation_utilisateur': 'Créations d\\'utilisateurs',\n        'modification_utilisateur': 'Modifications d\\'utilisateurs',\n        'suppression_utilisateur': 'Suppressions d\\'utilisateurs',\n        'validation_compte': 'Validations de compte',\n        'ajout_points': 'Ajouts de points',\n\n        // Familles\n        'creation_famille': 'Créations de familles',\n        'modification_famille': 'Modifications de familles',\n        'suppression_famille': 'Suppressions de familles',\n        'ajout_membre_famille': 'Ajouts de membres',\n        'retrait_membre_famille': 'Retraits de membres',\n\n        // Recettes\n        'creation_recette': 'Créations de recettes',\n        'modification_recette': 'Modifications de recettes',\n        'suppression_recette': 'Suppressions de recettes',\n        'notation_recette': 'Notations de recettes',\n        'commentaire_recette': 'Commentaires de recettes',\n\n        // Objets/Ingrédients\n        'creation_objet': 'Créations d\\'objets',\n        'modification_objet': 'Modifications d\\'objets',\n        'suppression_objet': 'Suppressions d\\'objets',\n        'utilisation_objet': 'Utilisations d\\'objets'\n      };\n      return actions[action] || action;\n    };\n\n    const getActionClass = (action) => {\n      const actionType = action.split('_')[0];\n      const classes = {\n        'connexion': 'action-connexion',\n        'deconnexion': 'action-deconnexion',\n        'creation': 'action-creation',\n        'modification': 'action-modification',\n        'suppression': 'action-suppression',\n        'ajout': 'action-ajout',\n        'retrait': 'action-retrait',\n        'validation': 'action-validation',\n        'notation': 'action-notation',\n        'commentaire': 'action-commentaire',\n        'utilisation': 'action-utilisation'\n      };\n      return classes[actionType] || '';\n    };\n\n    const formatDetailKey = (key) => {\n      return key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');\n    };\n\n    const formatUserAgent = (userAgent) => {\n      if (!userAgent) return '';\n      return userAgent.split(' ')[0];\n    };\n\n    const changePage = (page) => {\n      if (page >= 1 && page <= totalUserPages.value) {\n        currentPage.value = page;\n\n        // Si on change de page, on ferme tous les utilisateurs développés\n        expandedUsers.value = [];\n        expandedCategories.value = new Map();\n      }\n    };\n\n    const clearFilter = () => {\n      selectedCategory.value = '';\n      loadHistory(1);\n    };\n\n    onMounted(() => {\n      loadAllTodayActions(); // Charger d'abord toutes les actions d'aujourd'hui\n      loadHistory();\n    });\n\n    // Réinitialiser la page quand les filtres changent\n    watch([selectedCategory, searchTerm], () => {\n      if (currentPage.value !== 1) {\n        currentPage.value = 1;\n      }\n      \n      // Fermer tous les utilisateurs développés quand on change de filtre\n      expandedUsers.value = [];\n      expandedCategories.value = new Map();\n      \n      // Recharger l'historique quand les filtres changent\n      loadHistory(1);\n    });\n\n    return {\n      logs,\n      allUserActions,\n      currentPage,\n      totalPages,\n      totalUserPages,\n      groupedByUser,\n      displayedUsers,\n      expandedUsers,\n      defaultAvatar,\n      formatDate,\n      formatAction,\n      getActionClass,\n      getCategoryIcon,\n      formatDetailKey,\n      formatUserAgent,\n      toggleUser,\n      toggleCategory,\n      isExpandedCategory,\n      getTotalActions,\n      getActionsToday,\n      changePage,\n      searchTerm,\n      debounceSearch,\n      loading,\n      getPhotoUrl,\n      errorMessage,\n      selectedCategory,\n      actionCategories,\n      clearFilter\n    };\n  }\n};\n</script>\n\n<style scoped>\n.history-container {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-title {\n  color: #2c5038;\n  margin-bottom: 30px;\n  font-size: 2rem;\n}\n\n/* Styles pour les filtres */\n.filters-container {\n  display: flex;\n  gap: 15px;\n  margin-bottom: 20px;\n  align-items: center;\n  flex-wrap: wrap;\n  flex-direction: row;\n}\n\n.search-box {\n  position: relative;\n  flex: 1;\n  min-width: 200px;\n}\n\n.search-box input {\n  width: 80%;\n  padding: 10px 15px 10px 40px;\n  border: 1px solid #ddd;\n  border-radius: 30px;\n  font-size: 1rem;\n  outline: none;\n  transition: border-color 0.3s;\n}\n\n.search-box input:focus {\n  border-color: #2c5038;\n}\n\n.search-icon {\n  position: absolute;\n  left: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #666;\n}\n\n.category-filter {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.category-filter select {\n  padding: 8px 15px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  outline: none;\n  background-color: white;\n  font-size: 1rem;\n  min-width: 170px;\n}\n\n.users-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.user-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n\n.user-header {\n  padding: 15px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  background-color: #f8f9fa;\n}\n\n.user-header:hover {\n  background-color: #e9ecef;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.user-details h3 {\n  margin: 0;\n  font-size: 1.1rem;\n  color: #2c5038;\n}\n\n.action-count {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.categories-container {\n  padding: 15px;\n  background-color: white;\n}\n\n.category-section {\n  margin-bottom: 15px;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.category-header {\n  padding: 12px 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  background-color: #fff;\n}\n\n.category-header:hover {\n  background-color: #f8f9fa;\n}\n\n.category-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.category-icon {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 1rem;\n}\n\n.category-details h4 {\n  margin: 0;\n  font-size: 1rem;\n  color: #2c5038;\n}\n\n.category-count {\n  font-size: 0.8rem;\n  color: #666;\n}\n\n.category-meta {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.last-update-date {\n  font-size: 0.8rem;\n  color: #888;\n  font-style: italic;\n}\n\n.expand-button {\n  transition: transform 0.3s;\n}\n\n.expand-button.expanded {\n  transform: rotate(180deg);\n}\n\n.timeline-container {\n  padding: 15px;\n  background-color: #f8f9fa;\n}\n\n.timeline {\n  position: relative;\n  padding-left: 30px;\n}\n\n.timeline::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 2px;\n  background-color: #ddd;\n}\n\n.timeline-item {\n  position: relative;\n  margin-bottom: 20px;\n}\n\n.timeline-point {\n  position: absolute;\n  left: -34px;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  border: 2px solid white;\n}\n\n.timeline-content {\n  background: white;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.action-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.action-date {\n  font-size: 0.9em;\n  color: #666;\n}\n\n.action-details {\n  margin: 10px 0;\n  font-size: 0.9em;\n}\n\n.detail-item {\n  margin: 5px 0;\n}\n\n.detail-label {\n  font-weight: 500;\n  color: #666;\n}\n\n.action-meta {\n  margin-top: 10px;\n  display: flex;\n  gap: 15px;\n  font-size: 0.85em;\n  color: #666;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n/* Classes pour les différentes actions */\n.action-connexion {\n  color: #4a6fa5;\n  background-color: rgba(74, 111, 165, 0.1);\n}\n\n.action-deconnexion {\n  color: #6c757d;\n  background-color: rgba(108, 117, 125, 0.1);\n}\n\n.action-creation {\n  color: #28a745;\n  background-color: rgba(40, 167, 69, 0.1);\n}\n\n.action-modification {\n  color: #17a2b8;\n  background-color: rgba(23, 162, 184, 0.1);\n}\n\n.action-suppression {\n  color: #dc3545;\n  background-color: rgba(220, 53, 69, 0.1);\n}\n\n.action-ajout, .action-points {\n  color: #ffc107;\n  background-color: rgba(255, 193, 7, 0.1);\n}\n\n.action-retrait {\n  color: #fd7e14;\n  background-color: rgba(253, 126, 20, 0.1);\n}\n\n.action-validation {\n  color: #20c997;\n  background-color: rgba(32, 201, 151, 0.1);\n}\n\n.action-notation {\n  color: #6f42c1;\n  background-color: rgba(111, 66, 193, 0.1);\n}\n\n.action-commentaire {\n  color: #007bff;\n  background-color: rgba(0, 123, 255, 0.1);\n}\n\n.action-utilisation {\n  color: #6610f2;\n  background-color: rgba(102, 16, 242, 0.1);\n}\n\n.pagination {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.page-btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  background-color: #2c5038;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.page-btn:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n.page-info {\n  color: #666;\n}\n\n/* Animation pour l'expansion */\n.timeline-container {\n  transition: all 0.3s ease-in-out;\n}\n\n@media (max-width: 900px) {\n  .filters-container {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 10px;\n  }\n  .search-box, .category-filter {\n    width: 100%;\n    min-width: 0;\n  }\n}\n\n.no-results {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  margin: 20px 0;\n  color: #666;\n  font-size: 1.1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n}\n\n.no-results i {\n  color: #dc3545;\n  margin-right: 8px;\n}\n\n.reset-filter-btn {\n  background-color: #2c5038;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: background-color 0.2s;\n}\n\n.reset-filter-btn:hover {\n  background-color: #1e3825;\n}\n\n.filtered-indication {\n  font-size: 0.8rem;\n  font-style: italic;\n  color: #666;\n}\n\n.error-message {\n  background: #ffe4e6;\n  color: #b91c1c;\n  border: 1px solid #fca5a5;\n  padding: 12px 18px;\n  border-radius: 8px;\n  margin-bottom: 18px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 1.1rem;\n}\n\n.active-filter-indicator {\n  background-color: #e3f2fd;\n  padding: 10px 15px;\n  border-radius: 6px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  color: #2c5038;\n  font-size: 0.95rem;\n}\n\n.active-filter-indicator i {\n  margin-right: 8px;\n}\n\n.active-filter-indicator strong {\n  margin: 0 5px;\n}\n\n.clear-filter-btn {\n  margin-left: auto;\n  background-color: transparent;\n  border: none;\n  color: #dc3545;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 0.85rem;\n  padding: 5px 10px;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.clear-filter-btn:hover {\n  background-color: rgba(220, 53, 69, 0.1);\n}\n\n/* Animation pour les changements de filtres */\n.user-list-enter-active, .user-list-leave-active {\n  transition: all 0.5s ease;\n}\n.user-list-enter-from, .user-list-leave-to {\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n.category-list-enter-active, .category-list-leave-active {\n  transition: all 0.4s ease;\n}\n.category-list-enter-from, .category-list-leave-to {\n  opacity: 0;\n  transform: translateY(10px);\n}\n\n.timeline-enter-active, .timeline-leave-active {\n  transition: all 0.3s;\n  max-height: 1000px;\n}\n.timeline-enter-from, .timeline-leave-to {\n  opacity: 0;\n  max-height: 0;\n  overflow: hidden;\n}\n\n.users-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.categories-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}