{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport { ref, reactive, onMounted, watch, nextTick } from 'vue';\nimport api from '@/services/api';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport Chart from 'chart.js/auto';\nexport default {\n  name: 'AdminReportsPage',\n  components: {\n    AppLayout\n  },\n  setup() {\n    const filters = reactive({\n      period: '30',\n      includeUsers: true,\n      includeObjects: true,\n      includeFamilies: true,\n      includeActivity: true,\n      exportFormat: 'pdf'\n    });\n    const isGenerating = ref(false);\n    const reportData = ref(null);\n    const objectTypesChart = ref(null);\n    const generateReport = async () => {\n      try {\n        isGenerating.value = true;\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('Non authentifié');\n        }\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        const params = {\n          period: filters.period\n        };\n        const response = await api.get('/history/admin-report', {\n          params\n        });\n        reportData.value = {\n          users: {\n            total: response.data.usersCount || 5,\n            byLevel: response.data.usersByLevel || {\n              'débutant': 2,\n              'intermédiaire': 0,\n              'avancé': 1,\n              'expert': 2\n            },\n            new: response.data.newUsers || 1,\n            active: response.data.activeUsers || 4,\n            avgLoginsPerDay: response.data.avgLoginsPerDay || 3.5\n          },\n          objects: {\n            total: response.data.objectsCount || 8,\n            byType: response.data.objectsByType || {\n              'Four': 2,\n              'Réfrigérateur': 1,\n              'Robot': 2,\n              'Micro-ondes': 1,\n              'Mixeur': 2\n            },\n            totalUsage: response.data.totalObjectsUsage || 124,\n            avgUsagePerDay: response.data.avgObjectsUsagePerDay || 12.4,\n            mostUsed: response.data.mostUsedObject || 'Four principal'\n          },\n          families: {\n            total: response.data.familiesCount || 3,\n            avgSize: response.data.avgFamilySize || 2.7,\n            withPoints: response.data.familiesWithPoints || 2,\n            totalPoints: response.data.totalPoints || 350,\n            avgPointsPerFamily: response.data.avgPointsPerFamily || 116.7,\n            recentPoints: response.data.recentPointsDistributed || 50\n          },\n          activity: {\n            total: response.data.actionsCount || 250,\n            byType: response.data.actionsByType || {\n              'connexion': 45,\n              'utilisation_objet': 124,\n              'ajout_points': 15,\n              'creation_recette': 8,\n              'modification_utilisateur': 12,\n              'autre': 46\n            },\n            byTime: response.data.actionsByTime || {\n              'Matin (00h-08h)': 25,\n              'Journée (08h-16h)': 120,\n              'Soir (16h-00h)': 105\n            }\n          }\n        };\n      } catch (error) {\n        console.error('Erreur lors de la génération du rapport:', error);\n        alert('Erreur lors de la génération du rapport. Veuillez réessayer.');\n      } finally {\n        isGenerating.value = false;\n      }\n    };\n    const exportReport = () => {\n      if (!reportData.value) return;\n      try {\n        const timestamp = new Date().toISOString().slice(0, 10);\n        const fileName = `rapport_admin_${timestamp}`;\n        exportToPDF(fileName);\n      } catch (error) {\n        console.error('Erreur lors de l\\'exportation du rapport:', error);\n        alert('Erreur lors de l\\'exportation du rapport. Veuillez réessayer.');\n      }\n    };\n    const exportToPDF = fileName => {\n      const doc = new jsPDF();\n      doc.setFillColor(25, 42, 86);\n      doc.rect(0, 0, 210, 30, 'F');\n      doc.setTextColor(255, 255, 255);\n      doc.setFontSize(22);\n      doc.setFont('helvetica', 'bold');\n      doc.text('Smart Kitchen', 105, 15, {\n        align: 'center'\n      });\n      doc.setFontSize(14);\n      doc.setFont('helvetica', 'normal');\n      doc.text('Rapport d\\'administration', 105, 24, {\n        align: 'center'\n      });\n      doc.setTextColor(0, 0, 0);\n      doc.setFontSize(10);\n      doc.text(`Date: ${new Date().toLocaleDateString('fr-FR')}`, 20, 40);\n      doc.text(`Période analysée: ${filters.period === 'all' ? 'Tout l\\'historique' : `${filters.period} derniers jours`}`, 20, 46);\n      doc.text(`Généré par: Administration Smart Kitchen`, 20, 52);\n      let yPos = 65;\n      if (filters.includeUsers) {\n        doc.setFontSize(16);\n        doc.setFont('helvetica', 'bold');\n        doc.setTextColor(25, 42, 86);\n        doc.text('Statistiques des utilisateurs', 105, yPos, {\n          align: 'center'\n        });\n        doc.setFont('helvetica', 'normal');\n        doc.setTextColor(100, 100, 100);\n        doc.setFontSize(10);\n        doc.text('Analyse de l\\'activité et répartition des utilisateurs par niveau', 105, yPos + 6, {\n          align: 'center'\n        });\n        doc.setTextColor(0, 0, 0);\n        yPos += 15;\n        const userLevelData = Object.entries(reportData.value.users.byLevel).map(([level, count]) => {\n          const percentage = (count / reportData.value.users.total * 100).toFixed(1);\n          return [getNiceLevelName(level), count.toString(), `${percentage}%`];\n        });\n        autoTable(doc, {\n          startY: yPos,\n          head: [['Niveau', 'Nombre', 'Pourcentage']],\n          body: userLevelData,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [25, 42, 86],\n            textColor: [255, 255, 255],\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10\n          },\n          tableWidth: 140,\n          margin: {\n            left: 35,\n            right: 35\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 60\n            },\n            1: {\n              cellWidth: 40,\n              halign: 'center'\n            },\n            2: {\n              cellWidth: 40,\n              halign: 'center'\n            }\n          }\n        });\n        yPos = doc.lastAutoTable.finalY + 15;\n        const userActivityData = [['Nouveaux utilisateurs', reportData.value.users.new.toString()], ['Moyenne connexions/jour', reportData.value.users.avgLoginsPerDay.toFixed(1)]];\n        autoTable(doc, {\n          startY: yPos,\n          head: [['Métrique', 'Valeur']],\n          body: userActivityData,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [25, 42, 86],\n            textColor: [255, 255, 255],\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10\n          },\n          tableWidth: 140,\n          margin: {\n            left: 35,\n            right: 35\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 100\n            },\n            1: {\n              cellWidth: 40,\n              halign: 'center'\n            }\n          }\n        });\n        yPos = doc.lastAutoTable.finalY + 20;\n      }\n      if (filters.includeObjects) {\n        if (yPos > 200) {\n          doc.addPage();\n          doc.setFillColor(25, 42, 86);\n          doc.rect(0, 0, 210, 10, 'F');\n          doc.setTextColor(255, 255, 255);\n          doc.setFontSize(8);\n          doc.text('Smart Kitchen - Rapport d\\'administration', 105, 6, {\n            align: 'center'\n          });\n          doc.setTextColor(0, 0, 0);\n          yPos = 20;\n        }\n        doc.setFontSize(16);\n        doc.setFont('helvetica', 'bold');\n        doc.setTextColor(25, 42, 86);\n        doc.text('Statistiques des objets connectés', 105, yPos, {\n          align: 'center'\n        });\n        doc.setFont('helvetica', 'normal');\n        doc.setTextColor(100, 100, 100);\n        doc.setFontSize(10);\n        doc.text('Distribution et utilisation des appareils Smart Kitchen', 105, yPos + 6, {\n          align: 'center'\n        });\n        doc.setTextColor(0, 0, 0);\n        yPos += 15;\n\n        // Générer le diagramme circulaire\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = 300;\n        canvas.height = 300;\n        const types = Object.keys(reportData.value.objects.byType);\n        const counts = Object.values(reportData.value.objects.byType);\n        const total = counts.reduce((a, b) => a + b, 0);\n\n        // Dessiner le diagramme avec légende dans chaque part\n        let startAngle = 0;\n        const colors = ['#4CAF50', '#8BC34A', '#CDDC39', '#FFC107', '#FF9800', '#FF5722'];\n        ctx.font = 'bold 13px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        types.forEach((type, index) => {\n          const percentage = counts[index] / total * 100;\n          const angle = percentage / 100 * 2 * Math.PI;\n          const midAngle = startAngle + angle / 2;\n\n          // Dessiner la part\n          ctx.beginPath();\n          ctx.moveTo(150, 150);\n          ctx.arc(150, 150, 100, startAngle, startAngle + angle);\n          ctx.closePath();\n          ctx.fillStyle = colors[index % colors.length];\n          ctx.fill();\n          ctx.stroke();\n\n          // Placer la légende au centre de la part\n          const label = `${type} (${percentage.toFixed(1)}%)`;\n          const labelRadius = 70; // Rayon pour placer le texte\n          const x = 150 + labelRadius * Math.cos(midAngle);\n          const y = 150 + labelRadius * Math.sin(midAngle);\n          ctx.save();\n          ctx.fillStyle = '#222';\n          ctx.font = 'bold 12px Arial';\n          ctx.shadowColor = 'white';\n          ctx.shadowBlur = 2;\n          ctx.fillText(label, x, y);\n          ctx.restore();\n          startAngle += angle;\n        });\n\n        // Ajouter le diagramme au PDF\n        const imgData = canvas.toDataURL('image/png');\n        doc.addImage(imgData, 'PNG', 55, yPos, 100, 100);\n        yPos += 120;\n\n        // Ajouter le tableau des données\n        const objectsData = Object.entries(reportData.value.objects.byType).map(([type, count]) => {\n          const percentage = (count / reportData.value.objects.total * 100).toFixed(1);\n          return [type, count.toString(), `${percentage}%`];\n        });\n        autoTable(doc, {\n          startY: yPos,\n          head: [['Type', 'Nombre', 'Pourcentage']],\n          body: objectsData,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [25, 42, 86],\n            textColor: [255, 255, 255],\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10\n          },\n          tableWidth: 140,\n          margin: {\n            left: 35,\n            right: 35\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 60\n            },\n            1: {\n              cellWidth: 40,\n              halign: 'center'\n            },\n            2: {\n              cellWidth: 40,\n              halign: 'center'\n            }\n          }\n        });\n        yPos = doc.lastAutoTable.finalY + 20;\n      }\n      if (filters.includeFamilies) {\n        if (yPos > 200) {\n          doc.addPage();\n          doc.setFillColor(25, 42, 86);\n          doc.rect(0, 0, 210, 10, 'F');\n          doc.setTextColor(255, 255, 255);\n          doc.setFontSize(8);\n          doc.text('Smart Kitchen - Rapport d\\'administration', 105, 6, {\n            align: 'center'\n          });\n          doc.setTextColor(0, 0, 0);\n          yPos = 20;\n        }\n        doc.setFontSize(16);\n        doc.setFont('helvetica', 'bold');\n        doc.setTextColor(25, 42, 86);\n        doc.text('Statistiques des familles', 105, yPos, {\n          align: 'center'\n        });\n        doc.setFont('helvetica', 'normal');\n        doc.setTextColor(100, 100, 100);\n        doc.setFontSize(10);\n        doc.text('Analyse des groupes familiaux et distribution des points', 105, yPos + 6, {\n          align: 'center'\n        });\n        doc.setTextColor(0, 0, 0);\n        yPos += 15;\n        const familiesGeneralData = [['Nombre total de familles', reportData.value.families.total.toString()], ['Taille moyenne (membres)', reportData.value.families.avgSize.toFixed(2)]];\n        autoTable(doc, {\n          startY: yPos,\n          head: [['Métrique', 'Valeur']],\n          body: familiesGeneralData,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [25, 42, 86],\n            textColor: [255, 255, 255],\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10\n          },\n          tableWidth: 140,\n          margin: {\n            left: 35,\n            right: 35\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 100\n            },\n            1: {\n              cellWidth: 40,\n              halign: 'center'\n            }\n          }\n        });\n        yPos = doc.lastAutoTable.finalY + 10;\n        const pointsData = [['Total des points', reportData.value.families.totalPoints.toFixed(2)], ['Moyenne par famille', reportData.value.families.avgPointsPerFamily.toFixed(2)]];\n        autoTable(doc, {\n          startY: yPos,\n          head: [['Métrique', 'Valeur']],\n          body: pointsData,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [25, 42, 86],\n            textColor: [255, 255, 255],\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10\n          },\n          tableWidth: 140,\n          margin: {\n            left: 35,\n            right: 35\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 100\n            },\n            1: {\n              cellWidth: 40,\n              halign: 'center'\n            }\n          }\n        });\n        yPos = doc.lastAutoTable.finalY + 20;\n      }\n      if (filters.includeActivity) {\n        if (yPos > 200) {\n          doc.addPage();\n          doc.setFillColor(25, 42, 86);\n          doc.rect(0, 0, 210, 10, 'F');\n          doc.setTextColor(255, 255, 255);\n          doc.setFontSize(8);\n          doc.text('Smart Kitchen - Rapport d\\'administration', 105, 6, {\n            align: 'center'\n          });\n          doc.setTextColor(0, 0, 0);\n          yPos = 20;\n        }\n        doc.setFontSize(16);\n        doc.setFont('helvetica', 'bold');\n        doc.setTextColor(25, 42, 86);\n        doc.text('Statistiques d\\'activité', 105, yPos, {\n          align: 'center'\n        });\n        doc.setFont('helvetica', 'normal');\n        doc.setTextColor(100, 100, 100);\n        doc.setFontSize(10);\n        doc.text('Analyse des interactions et tendances d\\'utilisation', 105, yPos + 6, {\n          align: 'center'\n        });\n        doc.setTextColor(0, 0, 0);\n        yPos += 15;\n        const activityTypeData = Object.entries(reportData.value.activity.byType).map(([action, count]) => {\n          const percentage = (count / reportData.value.activity.total * 100).toFixed(1);\n          return [formatActionName(action), count.toString(), `${percentage}%`];\n        });\n        autoTable(doc, {\n          startY: yPos,\n          head: [['Type d\\'action', 'Nombre', 'Pourcentage']],\n          body: activityTypeData,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [25, 42, 86],\n            textColor: [255, 255, 255],\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10\n          },\n          tableWidth: 160,\n          margin: {\n            left: 25,\n            right: 25\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 80\n            },\n            1: {\n              cellWidth: 40,\n              halign: 'center'\n            },\n            2: {\n              cellWidth: 40,\n              halign: 'center'\n            }\n          }\n        });\n        yPos = doc.lastAutoTable.finalY + 10;\n        const timeData = Object.entries(reportData.value.activity.byTime).map(([period, count]) => {\n          const percentage = (count / reportData.value.activity.total * 100).toFixed(1);\n          return [period, count.toString(), `${percentage}%`];\n        });\n        autoTable(doc, {\n          startY: yPos,\n          head: [['Période', 'Nombre d\\'actions', 'Pourcentage']],\n          body: timeData,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [25, 42, 86],\n            textColor: [255, 255, 255],\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10\n          },\n          tableWidth: 180,\n          margin: {\n            left: 15,\n            right: 15\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 80\n            },\n            1: {\n              cellWidth: 60,\n              halign: 'center'\n            },\n            2: {\n              cellWidth: 40,\n              halign: 'center'\n            }\n          }\n        });\n        yPos = doc.lastAutoTable.finalY + 15;\n      }\n      const totalPages = doc.internal.getNumberOfPages();\n      for (let i = 1; i <= totalPages; i++) {\n        doc.setPage(i);\n        doc.setDrawColor(200, 200, 200);\n        doc.line(20, 285, 190, 285);\n        doc.setTextColor(150, 150, 150);\n        doc.setFontSize(8);\n        doc.setFont('helvetica', 'normal');\n        doc.text(`Smart Kitchen - Rapport généré le ${new Date().toLocaleDateString('fr-FR')}`, 105, 290, {\n          align: 'center'\n        });\n        doc.text(`Page ${i} / ${totalPages}`, 190, 290, {\n          align: 'right'\n        });\n      }\n      doc.save(`${fileName}.pdf`);\n    };\n    const createObjectTypesChart = () => {\n      if (!reportData.value || !objectTypesChart.value) return;\n      const ctx = objectTypesChart.value.getContext('2d');\n      const types = Object.keys(reportData.value.objects.byType);\n      const counts = Object.values(reportData.value.objects.byType);\n      new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: types,\n          datasets: [{\n            data: counts,\n            backgroundColor: ['#4CAF50', '#8BC34A', '#CDDC39', '#FFC107', '#FF9800', '#FF5722'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'right'\n            },\n            title: {\n              display: true,\n              text: 'Répartition des objets par type'\n            }\n          }\n        }\n      });\n    };\n    onMounted(() => {\n      if (reportData.value) {\n        createObjectTypesChart();\n      }\n    });\n    watch(reportData, () => {\n      nextTick(() => {\n        createObjectTypesChart();\n      });\n    });\n    const getNiceLevelName = level => {\n      const names = {\n        'débutant': 'Débutant',\n        'intermédiaire': 'Intermédiaire',\n        'avancé': 'Avancé',\n        'expert': 'Expert'\n      };\n      return names[level] || level;\n    };\n    const formatActionName = action => {\n      const actions = {\n        'connexion': 'Connexion',\n        'deconnexion': 'Déconnexion',\n        'creation_utilisateur': 'Création d\\'utilisateur',\n        'modification_utilisateur': 'Modification d\\'utilisateur',\n        'utilisation_objet': 'Utilisation d\\'objet',\n        'ajout_points': 'Ajout de points',\n        'creation_recette': 'Création de recette',\n        'autre': 'Autre action'\n      };\n      return actions[action] || action;\n    };\n    return {\n      filters,\n      isGenerating,\n      reportData,\n      generateReport,\n      exportReport,\n      getNiceLevelName,\n      formatActionName,\n      objectTypesChart\n    };\n  }\n};","map":{"version":3,"names":["AppLayout","ref","reactive","onMounted","watch","nextTick","api","jsPDF","autoTable","Chart","name","components","setup","filters","period","includeUsers","includeObjects","includeFamilies","includeActivity","exportFormat","isGenerating","reportData","objectTypesChart","generateReport","value","token","localStorage","getItem","Error","defaults","headers","common","params","response","get","users","total","data","usersCount","byLevel","usersByLevel","new","newUsers","active","activeUsers","avgLoginsPerDay","objects","objectsCount","byType","objectsByType","totalUsage","totalObjectsUsage","avgUsagePerDay","avgObjectsUsagePerDay","mostUsed","mostUsedObject","families","familiesCount","avgSize","avgFamilySize","withPoints","familiesWithPoints","totalPoints","avgPointsPerFamily","recentPoints","recentPointsDistributed","activity","actionsCount","actionsByType","byTime","actionsByTime","error","console","alert","exportReport","timestamp","Date","toISOString","slice","fileName","exportToPDF","doc","setFillColor","rect","setTextColor","setFontSize","setFont","text","align","toLocaleDateString","yPos","userLevelData","Object","entries","map","level","count","percentage","toFixed","getNiceLevelName","toString","startY","head","body","theme","headStyles","fillColor","textColor","fontStyle","styles","fontSize","tableWidth","margin","left","right","columnStyles","cellWidth","halign","lastAutoTable","finalY","userActivityData","addPage","canvas","document","createElement","ctx","getContext","width","height","types","keys","counts","values","reduce","a","b","startAngle","colors","font","textAlign","textBaseline","forEach","type","index","angle","Math","PI","midAngle","beginPath","moveTo","arc","closePath","fillStyle","length","fill","stroke","label","labelRadius","x","cos","y","sin","save","shadowColor","shadowBlur","fillText","restore","imgData","toDataURL","addImage","objectsData","familiesGeneralData","pointsData","activityTypeData","action","formatActionName","timeData","totalPages","internal","getNumberOfPages","i","setPage","setDrawColor","line","createObjectTypesChart","labels","datasets","backgroundColor","borderWidth","options","responsive","plugins","legend","position","title","display","names","actions"],"sources":["C:\\Users\\benab\\Desktop\\COURS 24_25\\S2\\WEB\\V4\\Projet_WEB_ING1\\frontend\\src\\views\\AdminReports.vue"],"sourcesContent":["<template>\r\n  <AppLayout>\r\n    <div class=\"reports-container\">\r\n      <div class=\"header\">\r\n        <h1><i class=\"fas fa-chart-bar\"></i> Rapports d'administration</h1>\r\n        <p>Générez et exportez des rapports détaillés sur l'utilisation de la plateforme.</p>\r\n      </div>\r\n\r\n      <div class=\"filters-card\">\r\n        <h2>Filtres et options</h2>\r\n        <div class=\"filters-grid\">\r\n          <div class=\"filter-group\">\r\n            <label>Période</label>\r\n            <select v-model=\"filters.period\">\r\n              <option value=\"7\">7 derniers jours</option>\r\n              <option value=\"30\">30 derniers jours</option>\r\n              <option value=\"90\">90 derniers jours</option>\r\n              <option value=\"365\">12 derniers mois</option>\r\n              <option value=\"all\">Tout l'historique</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"filter-group\">\r\n            <label>Type de données</label>\r\n            <div class=\"checkbox-group\">\r\n              <label>\r\n                <input type=\"checkbox\" v-model=\"filters.includeUsers\"> Utilisateurs\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" v-model=\"filters.includeObjects\"> Objets connectés\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" v-model=\"filters.includeFamilies\"> Familles\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" v-model=\"filters.includeActivity\"> Activités\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter-group\">\r\n            <label>Format d'exportation</label>\r\n            <select v-model=\"filters.exportFormat\">\r\n              <option value=\"pdf\">PDF</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"button-row\">\r\n          <button @click=\"generateReport\" class=\"generate-btn\" :disabled=\"isGenerating\">\r\n            <i class=\"fas fa-file-export\"></i> \r\n            {{ isGenerating ? 'Génération en cours...' : 'Générer le rapport' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Aperçu du rapport -->\r\n      <div v-if=\"isGenerating\" class=\"loading-container\">\r\n        <div class=\"spinner\"></div>\r\n        <p>Génération du rapport en cours...</p>\r\n      </div>\r\n      <div v-else-if=\"reportData\" class=\"report-preview\">\r\n        <div class=\"preview-header\">\r\n          <h2>Aperçu du rapport</h2>\r\n          <div class=\"export-actions\">\r\n            <button @click=\"exportReport\" class=\"export-btn\">\r\n              <i class=\"fas fa-file-pdf\"></i> Exporter en PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Section Utilisateurs -->\r\n        <div v-if=\"filters.includeUsers\" class=\"report-section\">\r\n          <h3>Statistiques des Utilisateurs</h3>\r\n          <div class=\"report-grid\">\r\n            <div class=\"report-item\">\r\n              <h4>Répartition par niveau</h4>\r\n              <table class=\"report-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Niveau</th>\r\n                    <th>Nombre</th>\r\n                    <th>Pourcentage</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(count, level) in reportData.users.byLevel\" :key=\"level\">\r\n                    <td>{{ getNiceLevelName(level) }}</td>\r\n                    <td>{{ count }}</td>\r\n                    <td>{{ ((count / reportData.users.total) * 100).toFixed(1) }}%</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"report-item\">\r\n              <h4>Activité des utilisateurs</h4>\r\n              <table class=\"report-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Métrique</th>\r\n                    <th>Valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Nouveaux utilisateurs</td>\r\n                    <td>{{ reportData.users.new }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Moyenne de connexions par jour</td>\r\n                    <td>{{ reportData.users.avgLoginsPerDay.toFixed(1) }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Section Objets -->\r\n        <div v-if=\"filters.includeObjects\" class=\"report-section\">\r\n          <h3>Statistiques des Objets Connectés</h3>\r\n          <div class=\"report-grid\">\r\n            <div class=\"report-item\">\r\n              <h4>Objets par type</h4>\r\n              <div class=\"chart-container\">\r\n                <canvas ref=\"objectTypesChart\"></canvas>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Section Familles -->\r\n        <div v-if=\"filters.includeFamilies\" class=\"report-section\">\r\n          <h3>Statistiques des Familles</h3>\r\n          <div class=\"report-grid\">\r\n            <div class=\"report-item\">\r\n              <h4>Informations générales</h4>\r\n              <table class=\"report-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Métrique</th>\r\n                    <th>Valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Nombre total de familles</td>\r\n                    <td>{{ reportData.families.total }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Taille moyenne (membres)</td>\r\n                    <td>{{ reportData.families.avgSize.toFixed(1) }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"report-item\">\r\n              <h4>Distribution des points</h4>\r\n              <table class=\"report-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Métrique</th>\r\n                    <th>Valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total des points</td>\r\n                    <td>{{ reportData.families.totalPoints.toFixed(2) }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Moyenne par famille</td>\r\n                    <td>{{ reportData.families.avgPointsPerFamily.toFixed(2) }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Section Activité -->\r\n        <div v-if=\"filters.includeActivity\" class=\"report-section\">\r\n          <h3>Statistiques d'Activité</h3>\r\n          <div class=\"report-grid\">\r\n            <div class=\"report-item\">\r\n              <h4>Répartition par type d'action</h4>\r\n              <table class=\"report-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Type d'action</th>\r\n                    <th>Nombre</th>\r\n                    <th>Pourcentage</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(count, action) in reportData.activity.byType\" :key=\"action\">\r\n                    <td>{{ formatActionName(action) }}</td>\r\n                    <td>{{ count }}</td>\r\n                    <td>{{ ((count / reportData.activity.total) * 100).toFixed(1) }}%</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"report-item\">\r\n              <h4>Répartition temporelle</h4>\r\n              <table class=\"report-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Période</th>\r\n                    <th>Nombre d'actions</th>\r\n                    <th>Pourcentage</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(count, period) in reportData.activity.byTime\" :key=\"period\">\r\n                    <td>{{ period }}</td>\r\n                    <td>{{ count }}</td>\r\n                    <td>{{ ((count / reportData.activity.total) * 100).toFixed(1) }}%</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </AppLayout>\r\n</template>\r\n\r\n<script>\r\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\r\nimport { ref, reactive, onMounted, watch, nextTick } from 'vue';\r\nimport api from '@/services/api';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  name: 'AdminReportsPage',\r\n  components: {\r\n    AppLayout\r\n  },\r\n  setup() {\r\n    const filters = reactive({\r\n      period: '30',\r\n      includeUsers: true,\r\n      includeObjects: true,\r\n      includeFamilies: true,\r\n      includeActivity: true,\r\n      exportFormat: 'pdf'\r\n    });\r\n\r\n    const isGenerating = ref(false);\r\n    const reportData = ref(null);\r\n    const objectTypesChart = ref(null);\r\n\r\n    const generateReport = async () => {\r\n      try {\r\n        isGenerating.value = true;\r\n        \r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          throw new Error('Non authentifié');\r\n        }\r\n        \r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        \r\n        const params = { period: filters.period };\r\n        const response = await api.get('/history/admin-report', { params });\r\n        \r\n        reportData.value = {\r\n          users: {\r\n            total: response.data.usersCount || 5,\r\n            byLevel: response.data.usersByLevel || {\r\n              'débutant': 2,\r\n              'intermédiaire': 0,\r\n              'avancé': 1,\r\n              'expert': 2\r\n            },\r\n            new: response.data.newUsers || 1,\r\n            active: response.data.activeUsers || 4,\r\n            avgLoginsPerDay: response.data.avgLoginsPerDay || 3.5\r\n          },\r\n          objects: {\r\n            total: response.data.objectsCount || 8,\r\n            byType: response.data.objectsByType || {\r\n              'Four': 2,\r\n              'Réfrigérateur': 1,\r\n              'Robot': 2,\r\n              'Micro-ondes': 1,\r\n              'Mixeur': 2\r\n            },\r\n            totalUsage: response.data.totalObjectsUsage || 124,\r\n            avgUsagePerDay: response.data.avgObjectsUsagePerDay || 12.4,\r\n            mostUsed: response.data.mostUsedObject || 'Four principal'\r\n          },\r\n          families: {\r\n            total: response.data.familiesCount || 3,\r\n            avgSize: response.data.avgFamilySize || 2.7,\r\n            withPoints: response.data.familiesWithPoints || 2,\r\n            totalPoints: response.data.totalPoints || 350,\r\n            avgPointsPerFamily: response.data.avgPointsPerFamily || 116.7,\r\n            recentPoints: response.data.recentPointsDistributed || 50\r\n          },\r\n          activity: {\r\n            total: response.data.actionsCount || 250,\r\n            byType: response.data.actionsByType || {\r\n              'connexion': 45,\r\n              'utilisation_objet': 124,\r\n              'ajout_points': 15,\r\n              'creation_recette': 8,\r\n              'modification_utilisateur': 12,\r\n              'autre': 46\r\n            },\r\n            byTime: response.data.actionsByTime || {\r\n              'Matin (00h-08h)': 25,\r\n              'Journée (08h-16h)': 120,\r\n              'Soir (16h-00h)': 105\r\n            }\r\n          }\r\n        };\r\n      } catch (error) {\r\n        console.error('Erreur lors de la génération du rapport:', error);\r\n        alert('Erreur lors de la génération du rapport. Veuillez réessayer.');\r\n      } finally {\r\n        isGenerating.value = false;\r\n      }\r\n    };\r\n\r\n    const exportReport = () => {\r\n      if (!reportData.value) return;\r\n\r\n      try {\r\n        const timestamp = new Date().toISOString().slice(0, 10);\r\n        const fileName = `rapport_admin_${timestamp}`;\r\n\r\n        exportToPDF(fileName);\r\n      } catch (error) {\r\n        console.error('Erreur lors de l\\'exportation du rapport:', error);\r\n        alert('Erreur lors de l\\'exportation du rapport. Veuillez réessayer.');\r\n      }\r\n    };\r\n\r\n    const exportToPDF = (fileName) => {\r\n      const doc = new jsPDF();\r\n      \r\n      doc.setFillColor(25, 42, 86);\r\n      doc.rect(0, 0, 210, 30, 'F');\r\n      \r\n      doc.setTextColor(255, 255, 255);\r\n      doc.setFontSize(22);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('Smart Kitchen', 105, 15, { align: 'center' });\r\n      doc.setFontSize(14);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.text('Rapport d\\'administration', 105, 24, { align: 'center' });\r\n      \r\n      doc.setTextColor(0, 0, 0);\r\n      \r\n      doc.setFontSize(10);\r\n      doc.text(`Date: ${new Date().toLocaleDateString('fr-FR')}`, 20, 40);\r\n      doc.text(`Période analysée: ${filters.period === 'all' ? 'Tout l\\'historique' : `${filters.period} derniers jours`}`, 20, 46);\r\n      doc.text(`Généré par: Administration Smart Kitchen`, 20, 52);\r\n      \r\n      let yPos = 65;\r\n      \r\n      if (filters.includeUsers) {\r\n        doc.setFontSize(16);\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.setTextColor(25, 42, 86);\r\n        doc.text('Statistiques des utilisateurs', 105, yPos, { align: 'center' });\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.setTextColor(100, 100, 100);\r\n        doc.setFontSize(10);\r\n        doc.text('Analyse de l\\'activité et répartition des utilisateurs par niveau', 105, yPos + 6, { align: 'center' });\r\n        doc.setTextColor(0, 0, 0);\r\n        \r\n        yPos += 15;\r\n        \r\n        const userLevelData = Object.entries(reportData.value.users.byLevel).map(([level, count]) => {\r\n          const percentage = ((count / reportData.value.users.total) * 100).toFixed(1);\r\n          return [getNiceLevelName(level), count.toString(), `${percentage}%`];\r\n        });\r\n        \r\n        autoTable(doc, {\r\n          startY: yPos,\r\n          head: [['Niveau', 'Nombre', 'Pourcentage']],\r\n          body: userLevelData,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: [25, 42, 86], textColor: [255, 255, 255], fontStyle: 'bold' },\r\n          styles: { fontSize: 10 },\r\n          tableWidth: 140,\r\n          margin: { left: 35, right: 35 },\r\n          columnStyles: {\r\n            0: { cellWidth: 60 },\r\n            1: { cellWidth: 40, halign: 'center' },\r\n            2: { cellWidth: 40, halign: 'center' }\r\n          }\r\n        });\r\n        \r\n        yPos = doc.lastAutoTable.finalY + 15;\r\n        \r\n        const userActivityData = [\r\n          ['Nouveaux utilisateurs', reportData.value.users.new.toString()],\r\n          ['Moyenne connexions/jour', reportData.value.users.avgLoginsPerDay.toFixed(1)]\r\n        ];\r\n        \r\n        autoTable(doc, {\r\n          startY: yPos,\r\n          head: [['Métrique', 'Valeur']],\r\n          body: userActivityData,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: [25, 42, 86], textColor: [255, 255, 255], fontStyle: 'bold' },\r\n          styles: { fontSize: 10 },\r\n          tableWidth: 140,\r\n          margin: { left: 35, right: 35 },\r\n          columnStyles: {\r\n            0: { cellWidth: 100 },\r\n            1: { cellWidth: 40, halign: 'center' }\r\n          }\r\n        });\r\n        \r\n        yPos = doc.lastAutoTable.finalY + 20;\r\n      }\r\n      \r\n      if (filters.includeObjects) {\r\n        if (yPos > 200) {\r\n          doc.addPage();\r\n          \r\n          doc.setFillColor(25, 42, 86);\r\n          doc.rect(0, 0, 210, 10, 'F');\r\n          doc.setTextColor(255, 255, 255);\r\n          doc.setFontSize(8);\r\n          doc.text('Smart Kitchen - Rapport d\\'administration', 105, 6, { align: 'center' });\r\n          doc.setTextColor(0, 0, 0);\r\n          \r\n          yPos = 20;\r\n        }\r\n        \r\n        doc.setFontSize(16);\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.setTextColor(25, 42, 86);\r\n        doc.text('Statistiques des objets connectés', 105, yPos, { align: 'center' });\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.setTextColor(100, 100, 100);\r\n        doc.setFontSize(10);\r\n        doc.text('Distribution et utilisation des appareils Smart Kitchen', 105, yPos + 6, { align: 'center' });\r\n        doc.setTextColor(0, 0, 0);\r\n        \r\n        yPos += 15;\r\n\r\n        // Générer le diagramme circulaire\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.width = 300;\r\n        canvas.height = 300;\r\n\r\n        const types = Object.keys(reportData.value.objects.byType);\r\n        const counts = Object.values(reportData.value.objects.byType);\r\n        const total = counts.reduce((a, b) => a + b, 0);\r\n\r\n        // Dessiner le diagramme avec légende dans chaque part\r\n        let startAngle = 0;\r\n        const colors = ['#4CAF50', '#8BC34A', '#CDDC39', '#FFC107', '#FF9800', '#FF5722'];\r\n        ctx.font = 'bold 13px Arial';\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        types.forEach((type, index) => {\r\n          const percentage = (counts[index] / total) * 100;\r\n          const angle = (percentage / 100) * 2 * Math.PI;\r\n          const midAngle = startAngle + angle / 2;\r\n\r\n          // Dessiner la part\r\n          ctx.beginPath();\r\n          ctx.moveTo(150, 150);\r\n          ctx.arc(150, 150, 100, startAngle, startAngle + angle);\r\n          ctx.closePath();\r\n          ctx.fillStyle = colors[index % colors.length];\r\n          ctx.fill();\r\n          ctx.stroke();\r\n\r\n          // Placer la légende au centre de la part\r\n          const label = `${type} (${percentage.toFixed(1)}%)`;\r\n          const labelRadius = 70; // Rayon pour placer le texte\r\n          const x = 150 + labelRadius * Math.cos(midAngle);\r\n          const y = 150 + labelRadius * Math.sin(midAngle);\r\n          ctx.save();\r\n          ctx.fillStyle = '#222';\r\n          ctx.font = 'bold 12px Arial';\r\n          ctx.shadowColor = 'white';\r\n          ctx.shadowBlur = 2;\r\n          ctx.fillText(label, x, y);\r\n          ctx.restore();\r\n\r\n          startAngle += angle;\r\n        });\r\n\r\n        // Ajouter le diagramme au PDF\r\n        const imgData = canvas.toDataURL('image/png');\r\n        doc.addImage(imgData, 'PNG', 55, yPos, 100, 100);\r\n        yPos += 120;\r\n        \r\n        // Ajouter le tableau des données\r\n        const objectsData = Object.entries(reportData.value.objects.byType).map(([type, count]) => {\r\n          const percentage = ((count / reportData.value.objects.total) * 100).toFixed(1);\r\n          return [type, count.toString(), `${percentage}%`];\r\n        });\r\n        \r\n        autoTable(doc, {\r\n          startY: yPos,\r\n          head: [['Type', 'Nombre', 'Pourcentage']],\r\n          body: objectsData,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: [25, 42, 86], textColor: [255, 255, 255], fontStyle: 'bold' },\r\n          styles: { fontSize: 10 },\r\n          tableWidth: 140,\r\n          margin: { left: 35, right: 35 },\r\n          columnStyles: {\r\n            0: { cellWidth: 60 },\r\n            1: { cellWidth: 40, halign: 'center' },\r\n            2: { cellWidth: 40, halign: 'center' }\r\n          }\r\n        });\r\n        \r\n        yPos = doc.lastAutoTable.finalY + 20;\r\n      }\r\n      \r\n      if (filters.includeFamilies) {\r\n        if (yPos > 200) {\r\n          doc.addPage();\r\n          \r\n          doc.setFillColor(25, 42, 86);\r\n          doc.rect(0, 0, 210, 10, 'F');\r\n          doc.setTextColor(255, 255, 255);\r\n          doc.setFontSize(8);\r\n          doc.text('Smart Kitchen - Rapport d\\'administration', 105, 6, { align: 'center' });\r\n          doc.setTextColor(0, 0, 0);\r\n          \r\n          yPos = 20;\r\n        }\r\n        \r\n        doc.setFontSize(16);\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.setTextColor(25, 42, 86);\r\n        doc.text('Statistiques des familles', 105, yPos, { align: 'center' });\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.setTextColor(100, 100, 100);\r\n        doc.setFontSize(10);\r\n        doc.text('Analyse des groupes familiaux et distribution des points', 105, yPos + 6, { align: 'center' });\r\n        doc.setTextColor(0, 0, 0);\r\n        \r\n        yPos += 15;\r\n        \r\n        const familiesGeneralData = [\r\n          ['Nombre total de familles', reportData.value.families.total.toString()],\r\n          ['Taille moyenne (membres)', reportData.value.families.avgSize.toFixed(2)]\r\n        ];\r\n        \r\n        autoTable(doc, {\r\n          startY: yPos,\r\n          head: [['Métrique', 'Valeur']],\r\n          body: familiesGeneralData,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: [25, 42, 86], textColor: [255, 255, 255], fontStyle: 'bold' },\r\n          styles: { fontSize: 10 },\r\n          tableWidth: 140,\r\n          margin: { left: 35, right: 35 },\r\n          columnStyles: {\r\n            0: { cellWidth: 100 },\r\n            1: { cellWidth: 40, halign: 'center' }\r\n          }\r\n        });\r\n        \r\n        yPos = doc.lastAutoTable.finalY + 10;\r\n        \r\n        const pointsData = [\r\n          ['Total des points', reportData.value.families.totalPoints.toFixed(2)],\r\n          ['Moyenne par famille', reportData.value.families.avgPointsPerFamily.toFixed(2)]\r\n        ];\r\n        \r\n        autoTable(doc, {\r\n          startY: yPos,\r\n          head: [['Métrique', 'Valeur']],\r\n          body: pointsData,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: [25, 42, 86], textColor: [255, 255, 255], fontStyle: 'bold' },\r\n          styles: { fontSize: 10 },\r\n          tableWidth: 140,\r\n          margin: { left: 35, right: 35 },\r\n          columnStyles: {\r\n            0: { cellWidth: 100 },\r\n            1: { cellWidth: 40, halign: 'center' }\r\n          }\r\n        });\r\n        \r\n        yPos = doc.lastAutoTable.finalY + 20;\r\n      }\r\n      \r\n      if (filters.includeActivity) {\r\n        if (yPos > 200) {\r\n          doc.addPage();\r\n          \r\n          doc.setFillColor(25, 42, 86);\r\n          doc.rect(0, 0, 210, 10, 'F');\r\n          doc.setTextColor(255, 255, 255);\r\n          doc.setFontSize(8);\r\n          doc.text('Smart Kitchen - Rapport d\\'administration', 105, 6, { align: 'center' });\r\n          doc.setTextColor(0, 0, 0);\r\n          \r\n          yPos = 20;\r\n        }\r\n        \r\n        doc.setFontSize(16);\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.setTextColor(25, 42, 86);\r\n        doc.text('Statistiques d\\'activité', 105, yPos, { align: 'center' });\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.setTextColor(100, 100, 100);\r\n        doc.setFontSize(10);\r\n        doc.text('Analyse des interactions et tendances d\\'utilisation', 105, yPos + 6, { align: 'center' });\r\n        doc.setTextColor(0, 0, 0);\r\n        \r\n        yPos += 15;\r\n        \r\n        const activityTypeData = Object.entries(reportData.value.activity.byType).map(([action, count]) => {\r\n          const percentage = ((count / reportData.value.activity.total) * 100).toFixed(1);\r\n          return [formatActionName(action), count.toString(), `${percentage}%`];\r\n        });\r\n        \r\n        autoTable(doc, {\r\n          startY: yPos,\r\n          head: [['Type d\\'action', 'Nombre', 'Pourcentage']],\r\n          body: activityTypeData,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: [25, 42, 86], textColor: [255, 255, 255], fontStyle: 'bold' },\r\n          styles: { fontSize: 10 },\r\n          tableWidth: 160,\r\n          margin: { left: 25, right: 25 },\r\n          columnStyles: {\r\n            0: { cellWidth: 80 },\r\n            1: { cellWidth: 40, halign: 'center' },\r\n            2: { cellWidth: 40, halign: 'center' }\r\n          }\r\n        });\r\n        \r\n        yPos = doc.lastAutoTable.finalY + 10;\r\n        \r\n        const timeData = Object.entries(reportData.value.activity.byTime).map(([period, count]) => {\r\n          const percentage = ((count / reportData.value.activity.total) * 100).toFixed(1);\r\n          return [period, count.toString(), `${percentage}%`];\r\n        });\r\n        \r\n        autoTable(doc, {\r\n          startY: yPos,\r\n          head: [['Période', 'Nombre d\\'actions', 'Pourcentage']],\r\n          body: timeData,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: [25, 42, 86], textColor: [255, 255, 255], fontStyle: 'bold' },\r\n          styles: { fontSize: 10 },\r\n          tableWidth: 180,\r\n          margin: { left: 15, right: 15 },\r\n          columnStyles: {\r\n            0: { cellWidth: 80 },\r\n            1: { cellWidth: 60, halign: 'center' },\r\n            2: { cellWidth: 40, halign: 'center' }\r\n          }\r\n        });\r\n        \r\n        yPos = doc.lastAutoTable.finalY + 15;\r\n      }\r\n      \r\n      const totalPages = doc.internal.getNumberOfPages();\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        doc.setPage(i);\r\n        \r\n        doc.setDrawColor(200, 200, 200);\r\n        doc.line(20, 285, 190, 285);\r\n        \r\n        doc.setTextColor(150, 150, 150);\r\n        doc.setFontSize(8);\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.text(`Smart Kitchen - Rapport généré le ${new Date().toLocaleDateString('fr-FR')}`, 105, 290, { align: 'center' });\r\n        doc.text(`Page ${i} / ${totalPages}`, 190, 290, { align: 'right' });\r\n      }\r\n      \r\n      doc.save(`${fileName}.pdf`);\r\n    };\r\n\r\n    const createObjectTypesChart = () => {\r\n      if (!reportData.value || !objectTypesChart.value) return;\r\n      \r\n      const ctx = objectTypesChart.value.getContext('2d');\r\n      const types = Object.keys(reportData.value.objects.byType);\r\n      const counts = Object.values(reportData.value.objects.byType);\r\n      \r\n      new Chart(ctx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: types,\r\n          datasets: [{\r\n            data: counts,\r\n            backgroundColor: [\r\n              '#4CAF50',\r\n              '#8BC34A',\r\n              '#CDDC39',\r\n              '#FFC107',\r\n              '#FF9800',\r\n              '#FF5722'\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'right',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Répartition des objets par type'\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n    \r\n    onMounted(() => {\r\n      if (reportData.value) {\r\n        createObjectTypesChart();\r\n      }\r\n    });\r\n    \r\n    watch(reportData, () => {\r\n      nextTick(() => {\r\n        createObjectTypesChart();\r\n      });\r\n    });\r\n\r\n    const getNiceLevelName = (level) => {\r\n      const names = {\r\n        'débutant': 'Débutant',\r\n        'intermédiaire': 'Intermédiaire',\r\n        'avancé': 'Avancé',\r\n        'expert': 'Expert'\r\n      };\r\n      return names[level] || level;\r\n    };\r\n\r\n    const formatActionName = (action) => {\r\n      const actions = {\r\n        'connexion': 'Connexion',\r\n        'deconnexion': 'Déconnexion',\r\n        'creation_utilisateur': 'Création d\\'utilisateur',\r\n        'modification_utilisateur': 'Modification d\\'utilisateur',\r\n        'utilisation_objet': 'Utilisation d\\'objet',\r\n        'ajout_points': 'Ajout de points',\r\n        'creation_recette': 'Création de recette',\r\n        'autre': 'Autre action'\r\n      };\r\n      return actions[action] || action;\r\n    };\r\n\r\n    return {\r\n      filters,\r\n      isGenerating,\r\n      reportData,\r\n      generateReport,\r\n      exportReport,\r\n      getNiceLevelName,\r\n      formatActionName,\r\n      objectTypesChart\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reports-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header h1 {\r\n  color: #2c5038;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.header p {\r\n  color: #666;\r\n  font-size: 1rem;\r\n}\r\n\r\n.filters-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filters-card h2 {\r\n  color: #2c5038;\r\n  margin-bottom: 15px;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.filters-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.filter-group label {\r\n  font-weight: 500;\r\n  margin-bottom: 8px;\r\n  color: #333;\r\n}\r\n\r\n.filter-group select {\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.checkbox-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.checkbox-group label {\r\n  font-weight: normal;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.generate-btn {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  font-size: 1rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.generate-btn:hover {\r\n  background-color: #1d3725;\r\n}\r\n\r\n.generate-btn:disabled {\r\n  background-color: #8ca596;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.loading-container {\r\n  text-align: center;\r\n  padding: 40px;\r\n}\r\n\r\n.spinner {\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #2c5038;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 20px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.report-preview {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.preview-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n}\r\n\r\n.preview-header h2 {\r\n  color: #2c5038;\r\n  margin: 0;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.export-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.export-btn {\r\n  background-color: #f0f0f0;\r\n  color: #333;\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  font-size: 0.9rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.export-btn:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.report-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.report-section h3 {\r\n  color: #2c5038;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.report-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.report-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.report-item h4 {\r\n  color: #333;\r\n  margin-bottom: 10px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.report-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.report-table th, \r\n.report-table td {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.report-table th {\r\n  background-color: #f8f9fa;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.report-table tr:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.chart-container {\r\n  height: 250px;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .report-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .preview-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n  \r\n  .filters-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}