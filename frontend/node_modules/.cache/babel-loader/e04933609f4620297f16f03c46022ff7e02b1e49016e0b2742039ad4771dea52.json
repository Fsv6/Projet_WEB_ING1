{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport { useAuthStore } from '@/stores/auth';\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport api from '@/services/api';\nimport defaultAvatar from '@/assets/default-avatar.png';\nexport default {\n  name: 'AccueilAdminPage',\n  components: {\n    AppLayout\n  },\n  setup() {\n    const auth = useAuthStore();\n    const router = useRouter();\n    const userData = ref(null);\n    const loading = ref(false);\n    const recentActions = ref([]);\n    const stats = ref({\n      usersCount: 0,\n      newUsers: 0,\n      familiesCount: 0,\n      activeWithPoints: 0,\n      actionsCount: 0,\n      todayActions: 0,\n      totalPoints: 0,\n      pointsDistributed: 0,\n      usersByLevel: {\n        'débutant': 0,\n        'intermédiaire': 0,\n        'avancé': 0,\n        'expert': 0\n      },\n      actionsByDayTime: Array(7).fill().map(() => Array(3).fill(0))\n    });\n    const loadUserData = async () => {\n      try {\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        if (!storedUser || storedUser.role !== 'admin') {\n          router.push('/login');\n          return;\n        }\n\n        // Vérifier que le token est présent\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('Token manquant');\n        }\n\n        // Configuration de l'en-tête d'autorisation\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Charger les données complètes de l'utilisateur depuis l'API\n        const response = await api.get(`/users/me`);\n        console.log('Réponse API:', response.data); // Pour le débogage\n\n        userData.value = {\n          ...response.data,\n          nom: response.data.personne?.nom || storedUser.nom,\n          prenom: response.data.personne?.prenom || storedUser.prenom,\n          email: response.data.email || storedUser.email,\n          photo_profil: response.data.photo_profil || defaultAvatar\n        };\n      } catch (error) {\n        console.error('Erreur détaillée:', error.response || error);\n        // Utiliser les données du localStorage comme fallback\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        userData.value = {\n          ...storedUser,\n          photo_profil: storedUser.photo_profil || defaultAvatar\n        };\n      }\n    };\n    const loadStats = async () => {\n      try {\n        loading.value = true;\n\n        // Charger le nombre d'utilisateurs\n        const usersResponse = await api.get('/users');\n        const users = usersResponse.data;\n        stats.value.usersCount = users.length;\n\n        // Calculer les nouveaux utilisateurs de la semaine\n        const oneWeekAgo = new Date();\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\n        // Compter les nouveaux utilisateurs (si date_creation est disponible)\n        stats.value.newUsers = users.filter(user => {\n          if (user.date_creation) {\n            return new Date(user.date_creation) > oneWeekAgo;\n          }\n          return false;\n        }).length;\n\n        // Compter les utilisateurs par niveau\n        stats.value.usersByLevel = users.reduce((acc, user) => {\n          const niveau = user.niveau || 'débutant';\n          acc[niveau] = (acc[niveau] || 0) + 1;\n          return acc;\n        }, {\n          'débutant': 0,\n          'intermédiaire': 0,\n          'avancé': 0,\n          'expert': 0\n        });\n\n        // Charger le nombre de familles\n        const familiesResponse = await api.get('/familles');\n        const families = familiesResponse.data;\n        stats.value.familiesCount = families.length;\n\n        // Calculer le nombre de familles actives avec des points\n        let familiesWithPoints = 0;\n        for (const family of families) {\n          if (family.membres && family.membres.length > 0) {\n            let hasPoints = false;\n            for (const membre of family.membres) {\n              const user = users.find(u => u._id === membre);\n              if (user && user.points > 0) {\n                hasPoints = true;\n                break;\n              }\n            }\n            if (hasPoints) {\n              familiesWithPoints++;\n            }\n          }\n        }\n        stats.value.activeWithPoints = familiesWithPoints;\n\n        // Charger les statistiques d'actions\n        const historyResponse = await api.get('/history?limit=5');\n        recentActions.value = historyResponse.data.histories;\n        stats.value.actionsCount = historyResponse.data.pagination.total;\n\n        // Calculer le nombre d'actions du jour\n        const today = new Date().toISOString().split('T')[0];\n        stats.value.todayActions = recentActions.value.filter(action => new Date(action.date).toISOString().split('T')[0] === today).length;\n\n        // Calculer le total des points dans le système\n        stats.value.totalPoints = users.reduce((sum, user) => sum + (user.points || 0), 0);\n\n        // Calculer les points distribués cette semaine\n        const pointsActions = await api.get('/history?action=ajout_points');\n        const weeklyPointsActions = pointsActions.data.histories.filter(action => new Date(action.date) > oneWeekAgo);\n        stats.value.pointsDistributed = weeklyPointsActions.reduce((sum, action) => sum + (action.details?.montant || 0), 0);\n\n        // Charger toutes les actions des 7 derniers jours pour le graphique d'actions par jour/heure\n        const allActionsResponse = await api.get('/history?limit=1000');\n        const recentActionsData = allActionsResponse.data.histories.filter(action => new Date(action.date) > oneWeekAgo);\n\n        // Initialiser le tableau pour les actions par jour et tranche horaire\n        const actionsByDayTime = Array(7).fill().map(() => Array(3).fill(0));\n\n        // Compter les actions par jour et tranche horaire\n        recentActionsData.forEach(action => {\n          const date = new Date(action.date);\n          const day = date.getDay(); // 0 = Dimanche, 1 = Lundi, etc.\n          const hour = date.getHours();\n\n          // Déterminer la tranche horaire\n          let timeSlot;\n          if (hour >= 0 && hour < 8) {\n            timeSlot = 0; // Matin (00h-08h)\n          } else if (hour >= 8 && hour < 16) {\n            timeSlot = 1; // Journée (08h-16h)\n          } else {\n            timeSlot = 2; // Soir (16h-00h)\n          }\n          actionsByDayTime[day][timeSlot]++;\n        });\n        stats.value.actionsByDayTime = actionsByDayTime;\n      } catch (error) {\n        console.error('Erreur lors du chargement des statistiques:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const refreshStats = () => {\n      loadStats();\n    };\n    onMounted(() => {\n      loadUserData();\n      loadStats();\n    });\n    const getWelcomeMessage = () => {\n      if (!userData.value) return 'Bienvenue sur Smart Kitchen';\n      const nom = userData.value.nom || '';\n      const prenom = userData.value.prenom || '';\n      return `Bienvenue ${prenom} ${nom}`.trim();\n    };\n    const logout = () => {\n      auth.clearAuth();\n      router.push('/login');\n    };\n    const formatDate = date => {\n      return new Date(date).toLocaleDateString('fr-FR', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n    const formatTimeAgo = dateString => {\n      const now = new Date();\n      const date = new Date(dateString);\n      const diffMs = now - date;\n      const diffSec = Math.floor(diffMs / 1000);\n      const diffMin = Math.floor(diffSec / 60);\n      const diffHour = Math.floor(diffMin / 60);\n      const diffDay = Math.floor(diffHour / 24);\n      if (diffDay > 0) {\n        return `il y a ${diffDay} jour${diffDay > 1 ? 's' : ''}`;\n      } else if (diffHour > 0) {\n        return `il y a ${diffHour} heure${diffHour > 1 ? 's' : ''}`;\n      } else if (diffMin > 0) {\n        return `il y a ${diffMin} minute${diffMin > 1 ? 's' : ''}`;\n      } else {\n        return 'à l\\'instant';\n      }\n    };\n    const formatActionName = action => {\n      const actions = {\n        connexion: 'Connexion',\n        deconnexion: 'Déconnexion',\n        creation_utilisateur: 'Création d\\'utilisateur',\n        modification_utilisateur: 'Modification d\\'utilisateur',\n        suppression_utilisateur: 'Suppression d\\'utilisateur',\n        validation_compte: 'Validation de compte',\n        ajout_points: 'Ajout de points',\n        creation_famille: 'Création de famille',\n        modification_famille: 'Modification de famille',\n        suppression_famille: 'Suppression de famille',\n        ajout_membre_famille: 'Ajout de membre à une famille',\n        retrait_membre_famille: 'Retrait de membre d\\'une famille',\n        creation_recette: 'Création de recette',\n        modification_recette: 'Modification de recette',\n        suppression_recette: 'Suppression de recette',\n        notation_recette: 'Notation de recette',\n        commentaire_recette: 'Commentaire sur recette',\n        creation_objet: 'Création d\\'objet',\n        modification_objet: 'Modification d\\'objet',\n        suppression_objet: 'Suppression d\\'objet',\n        utilisation_objet: 'Utilisation d\\'objet'\n      };\n      return actions[action] || action;\n    };\n    const getActionDescription = action => {\n      switch (action.action) {\n        case 'ajout_points':\n          return `${action.details.montant > 0 ? 'Ajout' : 'Retrait'} de ${Math.abs(action.details.montant)} points à ${action.details.email || 'un utilisateur'}`;\n        case 'creation_utilisateur':\n          return `Création de l'utilisateur ${action.details.email || 'inconnu'}`;\n        case 'connexion':\n          return `Connexion utilisateur ${action.details.email || 'inconnu'}`;\n        default:\n          return `Action ${action.action} effectuée`;\n      }\n    };\n    const getActionIcon = action => {\n      const icons = {\n        connexion: 'fas fa-sign-in-alt',\n        deconnexion: 'fas fa-sign-out-alt',\n        creation_utilisateur: 'fas fa-user-plus',\n        modification_utilisateur: 'fas fa-user-edit',\n        suppression_utilisateur: 'fas fa-user-minus',\n        validation_compte: 'fas fa-user-check',\n        ajout_points: 'fas fa-coins',\n        creation_famille: 'fas fa-home',\n        modification_famille: 'fas fa-edit',\n        suppression_famille: 'fas fa-trash',\n        ajout_membre_famille: 'fas fa-user-plus',\n        retrait_membre_famille: 'fas fa-user-minus',\n        creation_recette: 'fas fa-utensils',\n        modification_recette: 'fas fa-edit',\n        suppression_recette: 'fas fa-trash',\n        notation_recette: 'fas fa-star',\n        commentaire_recette: 'fas fa-comment',\n        creation_objet: 'fas fa-plus-circle',\n        modification_objet: 'fas fa-edit',\n        suppression_objet: 'fas fa-trash',\n        utilisation_objet: 'fas fa-cog'\n      };\n      return icons[action] || 'fas fa-history';\n    };\n    const getActionIconClass = action => {\n      const classes = {\n        connexion: 'action-login',\n        deconnexion: 'action-logout',\n        creation_utilisateur: 'action-create',\n        modification_utilisateur: 'action-update',\n        suppression_utilisateur: 'action-delete',\n        validation_compte: 'action-validate',\n        ajout_points: 'action-points'\n      };\n      return classes[action] || 'action-default';\n    };\n\n    // Fonctions pour les graphiques\n    const getLevelColor = level => {\n      const colors = {\n        'débutant': '#3498db',\n        'intermédiaire': '#2ecc71',\n        'avancé': '#f39c12',\n        'expert': '#9b59b6'\n      };\n      return colors[level] || '#95a5a6';\n    };\n    const getDoughnutSegmentStyle = (level, data) => {\n      const colors = {\n        'débutant': '#3498db',\n        'intermédiaire': '#2ecc71',\n        'avancé': '#f39c12',\n        'expert': '#9b59b6'\n      };\n      const total = Object.values(data).reduce((sum, val) => sum + val, 0);\n      if (total === 0) return {\n        display: 'none'\n      };\n      const levels = Object.keys(data);\n      const currentIndex = levels.indexOf(level);\n      let startAngle = 0;\n      for (let i = 0; i < currentIndex; i++) {\n        startAngle += data[levels[i]] / total * 360;\n      }\n      const angle = data[level] / total * 360;\n      return {\n        backgroundColor: colors[level],\n        transform: `rotate(${startAngle}deg)`,\n        clipPath: `polygon(50% 50%, 50% 0%, ${angle <= 180 ? '100% 0%' : '100% 0%, 100% 100%'}, ${angle <= 90 ? '50% 50%' : angle <= 180 ? '100% 100%, 50% 50%' : '0% 100%, 0% 0%, 50% 0%, 50% 50%'})`,\n        opacity: data[level] > 0 ? 1 : 0\n      };\n    };\n\n    // Fonction pour la couleur de la heatmap\n    const getHeatmapColor = value => {\n      // Échelle de couleur de bleu clair à bleu foncé\n      const maxValue = Math.max(...stats.value.actionsByDayTime.flat());\n      if (maxValue === 0) return '#f1f5fa'; // Couleur par défaut si pas de données\n\n      const intensity = Math.min(value / maxValue, 1);\n\n      // Échelle de couleur de bleu clair à vert\n      if (intensity === 0) return '#f1f5fa';\n      if (intensity < 0.2) return '#e3f2fd';\n      if (intensity < 0.4) return '#bbdefb';\n      if (intensity < 0.6) return '#90caf9';\n      if (intensity < 0.8) return '#64b5f6';\n      return '#2196f3';\n    };\n    return {\n      userData,\n      getWelcomeMessage,\n      logout,\n      defaultAvatar,\n      recentActions,\n      stats,\n      loading,\n      formatDate,\n      formatTimeAgo,\n      formatActionName,\n      getActionDescription,\n      getActionIcon,\n      getActionIconClass,\n      refreshStats,\n      getLevelColor,\n      getDoughnutSegmentStyle,\n      getHeatmapColor\n    };\n  }\n};","map":{"version":3,"names":["AppLayout","useAuthStore","ref","onMounted","useRouter","api","defaultAvatar","name","components","setup","auth","router","userData","loading","recentActions","stats","usersCount","newUsers","familiesCount","activeWithPoints","actionsCount","todayActions","totalPoints","pointsDistributed","usersByLevel","actionsByDayTime","Array","fill","map","loadUserData","storedUser","JSON","parse","localStorage","getItem","role","push","token","Error","defaults","headers","common","response","get","console","log","data","value","nom","personne","prenom","email","photo_profil","error","loadStats","usersResponse","users","length","oneWeekAgo","Date","setDate","getDate","filter","user","date_creation","reduce","acc","niveau","familiesResponse","families","familiesWithPoints","family","membres","hasPoints","membre","find","u","_id","points","historyResponse","histories","pagination","total","today","toISOString","split","action","date","sum","pointsActions","weeklyPointsActions","details","montant","allActionsResponse","recentActionsData","forEach","day","getDay","hour","getHours","timeSlot","refreshStats","getWelcomeMessage","trim","logout","clearAuth","formatDate","toLocaleDateString","weekday","year","month","formatTimeAgo","dateString","now","diffMs","diffSec","Math","floor","diffMin","diffHour","diffDay","formatActionName","actions","connexion","deconnexion","creation_utilisateur","modification_utilisateur","suppression_utilisateur","validation_compte","ajout_points","creation_famille","modification_famille","suppression_famille","ajout_membre_famille","retrait_membre_famille","creation_recette","modification_recette","suppression_recette","notation_recette","commentaire_recette","creation_objet","modification_objet","suppression_objet","utilisation_objet","getActionDescription","abs","getActionIcon","icons","getActionIconClass","classes","getLevelColor","level","colors","getDoughnutSegmentStyle","Object","values","val","display","levels","keys","currentIndex","indexOf","startAngle","i","angle","backgroundColor","transform","clipPath","opacity","getHeatmapColor","maxValue","max","flat","intensity","min"],"sources":["C:\\Users\\benab\\Desktop\\COURS 24_25\\S2\\WEB\\V4\\Projet_WEB_ING1\\frontend\\src\\views\\AccueilAdmin.vue"],"sourcesContent":["<template>\r\n  <AppLayout>\r\n    <div class=\"accueil-container\">\r\n      <div class=\"main-content\">\r\n        <div class=\"welcome-card\">\r\n          <h1>{{ getWelcomeMessage() }}</h1>\r\n          <div class=\"user-info\" v-if=\"userData\">\r\n            <div class=\"user-profile\">\r\n\r\n              <div class=\"user-details\">\r\n                <div class=\"date-info\">\r\n                  <i class=\"fas fa-calendar-alt\"></i> {{ formatDate(new Date()) }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"actions\">\r\n              <button @click=\"logout\" class=\"logout-btn\">\r\n                <i class=\"fas fa-sign-out-alt\"></i>\r\n                Se déconnecter\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Actions rapides -->\r\n        <div class=\"quick-actions\">\r\n          <div class=\"section-header\">\r\n            <h2><i class=\"fas fa-bolt\"></i> Actions rapides</h2>\r\n          </div>\r\n          <div class=\"actions-grid\">\r\n            <router-link to=\"/admin/users?newUser=true\" class=\"action-button\">\r\n              <i class=\"fas fa-user-plus\"></i>\r\n              <span>Nouvel utilisateur</span>\r\n            </router-link>\r\n            <router-link to=\"/admin/families?newFamily=true\" class=\"action-button\">\r\n              <i class=\"fas fa-plus-circle\"></i>\r\n              <span>Nouvelle famille</span>\r\n            </router-link>\r\n            <router-link to=\"/admin/user-points\" class=\"action-button\">\r\n              <i class=\"fas fa-coins\"></i>\r\n              <span>Gérer les points</span>\r\n            </router-link>\r\n            <button @click=\"refreshStats\" class=\"action-button\">\r\n              <i class=\"fas fa-sync-alt\"></i>\r\n              <span>Actualiser</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Statistiques générales -->\r\n        <div class=\"dashboard-stats\">\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-icon user-icon\">\r\n              <i class=\"fas fa-users\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <h3>Utilisateurs</h3>\r\n              <div class=\"stat-number\">{{ stats.usersCount || '...' }}</div>\r\n              <div class=\"stat-info\">\r\n                <span class=\"stat-highlight\">{{ stats.newUsers || 0 }}</span> nouveaux cette semaine\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-icon family-icon\">\r\n              <i class=\"fas fa-home\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <h3>Familles</h3>\r\n              <div class=\"stat-number\">{{ stats.familiesCount || '...' }}</div>\r\n              <div class=\"stat-info\">\r\n                <span class=\"stat-highlight\">{{ stats.activeWithPoints || 0 }}</span> actives avec points\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-icon action-icon\">\r\n              <i class=\"fas fa-history\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <h3>Actions</h3>\r\n              <div class=\"stat-number\">{{ stats.actionsCount || '...' }}</div>\r\n              <div class=\"stat-info\">\r\n                <span class=\"stat-highlight\">{{ stats.todayActions || 0 }}</span> aujourd'hui\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-icon points-icon\">\r\n              <i class=\"fas fa-star\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <h3>Points</h3>\r\n              <div class=\"stat-number\">{{ stats.totalPoints || '...' }}</div>\r\n              <div class=\"stat-info\">\r\n                <span v-if=\"stats.pointsDistributed > 0\" class=\"stat-positive\">+{{ stats.pointsDistributed }}</span>\r\n                <span v-else class=\"stat-negative\">{{ stats.pointsDistributed }}</span>\r\n                cette semaine\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Activité récente (remplacée par des graphiques) -->\r\n        <div class=\"chart-section\">\r\n          <div class=\"section-header\">\r\n            <h2><i class=\"fas fa-chart-line\"></i> Statistiques & Activité</h2>\r\n            <router-link to=\"/admin/history\" class=\"view-all-link\">\r\n              Voir l'historique <i class=\"fas fa-arrow-right\"></i>\r\n            </router-link>\r\n          </div>\r\n\r\n          <div v-if=\"loading\" class=\"loading-indicator\">\r\n            <i class=\"fas fa-spinner fa-spin\"></i> Chargement des données...\r\n          </div>\r\n          <div v-else class=\"charts-container\">\r\n            <!-- Graphique des utilisateurs par niveau (amélioré) -->\r\n            <div class=\"chart-wrapper\">\r\n              <h3>Distribution des utilisateurs par niveau</h3>\r\n              <div class=\"doughnut-chart\">\r\n                <div class=\"doughnut-segments\">\r\n                  <div v-for=\"(count, level) in stats.usersByLevel\" :key=\"level\"\r\n                       class=\"doughnut-segment\"\r\n                       :style=\"getDoughnutSegmentStyle(level, stats.usersByLevel)\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"chart-center\">\r\n                  <span>{{ stats.usersCount }}</span>\r\n                  <small>utilisateurs</small>\r\n                </div>\r\n              </div>\r\n              <div class=\"chart-legend\">\r\n                <div v-for=\"(count, level) in stats.usersByLevel\" :key=\"level\" class=\"legend-item\">\r\n                  <span class=\"color-badge\" :style=\"{ backgroundColor: getLevelColor(level) }\"></span>\r\n                  <span>{{ level }}: {{ count }} ({{ ((count / stats.usersCount) * 100).toFixed(1) }}%)</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Graphique: Actions par jour et tranche horaire -->\r\n            <div class=\"chart-wrapper\">\r\n              <h3>Nombre d'actions/utilisations (7 jours)</h3>\r\n              <div class=\"heatmap-chart\">\r\n                <div class=\"heatmap-y-axis\">\r\n                  <div class=\"heatmap-y-label\">Matin<br/>(00h-08h)</div>\r\n                  <div class=\"heatmap-y-label\">Journée<br/>(08h-16h)</div>\r\n                  <div class=\"heatmap-y-label\">Soir<br/>(16h-00h)</div>\r\n                </div>\r\n                <div class=\"heatmap-grid\">\r\n                  <div v-for=\"(day, dayIndex) in ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam']\" :key=\"dayIndex\" class=\"heatmap-day-column\">\r\n                    <div class=\"heatmap-x-label\">{{ day }}</div>\r\n                    <div v-for=\"(timeSlot, slotIndex) in ['morning', 'afternoon', 'evening']\" :key=\"`${dayIndex}-${slotIndex}`\"\r\n                         class=\"heatmap-cell\"\r\n                         :style=\"{ backgroundColor: getHeatmapColor(stats.actionsByDayTime[dayIndex]?.[slotIndex] || 0) }\">\r\n                      <span class=\"heatmap-value\">{{ stats.actionsByDayTime[dayIndex]?.[slotIndex] || 0 }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Menu administration -->\r\n        \r\n      </div>\r\n    </div>\r\n  </AppLayout>\r\n</template>\r\n\r\n<script>\r\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\r\nimport { useAuthStore } from '@/stores/auth';\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport api from '@/services/api';\r\nimport defaultAvatar from '@/assets/default-avatar.png';\r\n\r\nexport default {\r\n  name: 'AccueilAdminPage',\r\n  components: {\r\n    AppLayout\r\n  },\r\n  setup() {\r\n    const auth = useAuthStore();\r\n    const router = useRouter();\r\n    const userData = ref(null);\r\n    const loading = ref(false);\r\n    const recentActions = ref([]);\r\n    const stats = ref({\r\n      usersCount: 0,\r\n      newUsers: 0,\r\n      familiesCount: 0,\r\n      activeWithPoints: 0,\r\n      actionsCount: 0,\r\n      todayActions: 0,\r\n      totalPoints: 0,\r\n      pointsDistributed: 0,\r\n      usersByLevel: {\r\n        'débutant': 0,\r\n        'intermédiaire': 0,\r\n        'avancé': 0,\r\n        'expert': 0\r\n      },\r\n      actionsByDayTime: Array(7).fill().map(() => Array(3).fill(0))\r\n    });\r\n\r\n    const loadUserData = async () => {\r\n      try {\r\n        const storedUser = JSON.parse(localStorage.getItem('user'));\r\n        if (!storedUser || storedUser.role !== 'admin') {\r\n          router.push('/login');\r\n          return;\r\n        }\r\n\r\n        // Vérifier que le token est présent\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          throw new Error('Token manquant');\r\n        }\r\n\r\n        // Configuration de l'en-tête d'autorisation\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n        // Charger les données complètes de l'utilisateur depuis l'API\r\n        const response = await api.get(`/users/me`);\r\n        console.log('Réponse API:', response.data); // Pour le débogage\r\n\r\n        userData.value = {\r\n          ...response.data,\r\n          nom: response.data.personne?.nom || storedUser.nom,\r\n          prenom: response.data.personne?.prenom || storedUser.prenom,\r\n          email: response.data.email || storedUser.email,\r\n          photo_profil: response.data.photo_profil || defaultAvatar\r\n        };\r\n      } catch (error) {\r\n        console.error('Erreur détaillée:', error.response || error);\r\n        // Utiliser les données du localStorage comme fallback\r\n        const storedUser = JSON.parse(localStorage.getItem('user'));\r\n        userData.value = {\r\n          ...storedUser,\r\n          photo_profil: storedUser.photo_profil || defaultAvatar\r\n        };\r\n      }\r\n    };\r\n\r\n    const loadStats = async () => {\r\n      try {\r\n        loading.value = true;\r\n\r\n        // Charger le nombre d'utilisateurs\r\n        const usersResponse = await api.get('/users');\r\n        const users = usersResponse.data;\r\n        stats.value.usersCount = users.length;\r\n\r\n        // Calculer les nouveaux utilisateurs de la semaine\r\n        const oneWeekAgo = new Date();\r\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n        // Compter les nouveaux utilisateurs (si date_creation est disponible)\r\n        stats.value.newUsers = users.filter(user => {\r\n          if (user.date_creation) {\r\n            return new Date(user.date_creation) > oneWeekAgo;\r\n          }\r\n          return false;\r\n        }).length;\r\n\r\n        // Compter les utilisateurs par niveau\r\n        stats.value.usersByLevel = users.reduce((acc, user) => {\r\n          const niveau = user.niveau || 'débutant';\r\n          acc[niveau] = (acc[niveau] || 0) + 1;\r\n          return acc;\r\n        }, {\r\n          'débutant': 0,\r\n          'intermédiaire': 0,\r\n          'avancé': 0,\r\n          'expert': 0\r\n        });\r\n\r\n        // Charger le nombre de familles\r\n        const familiesResponse = await api.get('/familles');\r\n        const families = familiesResponse.data;\r\n        stats.value.familiesCount = families.length;\r\n\r\n        // Calculer le nombre de familles actives avec des points\r\n        let familiesWithPoints = 0;\r\n        for (const family of families) {\r\n          if (family.membres && family.membres.length > 0) {\r\n            let hasPoints = false;\r\n            for (const membre of family.membres) {\r\n              const user = users.find(u => u._id === membre);\r\n              if (user && user.points > 0) {\r\n                hasPoints = true;\r\n                break;\r\n              }\r\n            }\r\n            if (hasPoints) {\r\n              familiesWithPoints++;\r\n            }\r\n          }\r\n        }\r\n        stats.value.activeWithPoints = familiesWithPoints;\r\n\r\n        // Charger les statistiques d'actions\r\n        const historyResponse = await api.get('/history?limit=5');\r\n        recentActions.value = historyResponse.data.histories;\r\n        stats.value.actionsCount = historyResponse.data.pagination.total;\r\n\r\n        // Calculer le nombre d'actions du jour\r\n        const today = new Date().toISOString().split('T')[0];\r\n        stats.value.todayActions = recentActions.value.filter(action =>\r\n            new Date(action.date).toISOString().split('T')[0] === today\r\n        ).length;\r\n\r\n        // Calculer le total des points dans le système\r\n        stats.value.totalPoints = users.reduce((sum, user) => sum + (user.points || 0), 0);\r\n\r\n        // Calculer les points distribués cette semaine\r\n        const pointsActions = await api.get('/history?action=ajout_points');\r\n        const weeklyPointsActions = pointsActions.data.histories.filter(action =>\r\n            new Date(action.date) > oneWeekAgo\r\n        );\r\n        stats.value.pointsDistributed = weeklyPointsActions.reduce((sum, action) =>\r\n            sum + (action.details?.montant || 0), 0\r\n        );\r\n\r\n        // Charger toutes les actions des 7 derniers jours pour le graphique d'actions par jour/heure\r\n        const allActionsResponse = await api.get('/history?limit=1000');\r\n        const recentActionsData = allActionsResponse.data.histories.filter(action =>\r\n            new Date(action.date) > oneWeekAgo\r\n        );\r\n\r\n        // Initialiser le tableau pour les actions par jour et tranche horaire\r\n        const actionsByDayTime = Array(7).fill().map(() => Array(3).fill(0));\r\n\r\n        // Compter les actions par jour et tranche horaire\r\n        recentActionsData.forEach(action => {\r\n          const date = new Date(action.date);\r\n          const day = date.getDay(); // 0 = Dimanche, 1 = Lundi, etc.\r\n          const hour = date.getHours();\r\n\r\n          // Déterminer la tranche horaire\r\n          let timeSlot;\r\n          if (hour >= 0 && hour < 8) {\r\n            timeSlot = 0; // Matin (00h-08h)\r\n          } else if (hour >= 8 && hour < 16) {\r\n            timeSlot = 1; // Journée (08h-16h)\r\n          } else {\r\n            timeSlot = 2; // Soir (16h-00h)\r\n          }\r\n\r\n          actionsByDayTime[day][timeSlot]++;\r\n        });\r\n\r\n        stats.value.actionsByDayTime = actionsByDayTime;\r\n\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des statistiques:', error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    const refreshStats = () => {\r\n      loadStats();\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadUserData();\r\n      loadStats();\r\n    });\r\n\r\n    const getWelcomeMessage = () => {\r\n      if (!userData.value) return 'Bienvenue sur Smart Kitchen';\r\n      const nom = userData.value.nom || '';\r\n      const prenom = userData.value.prenom || '';\r\n      return `Bienvenue ${prenom} ${nom}`.trim();\r\n    };\r\n\r\n    const logout = () => {\r\n      auth.clearAuth();\r\n      router.push('/login');\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n      return new Date(date).toLocaleDateString('fr-FR', {\r\n        weekday: 'long',\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      });\r\n    };\r\n\r\n    const formatTimeAgo = (dateString) => {\r\n      const now = new Date();\r\n      const date = new Date(dateString);\r\n      const diffMs = now - date;\r\n      const diffSec = Math.floor(diffMs / 1000);\r\n      const diffMin = Math.floor(diffSec / 60);\r\n      const diffHour = Math.floor(diffMin / 60);\r\n      const diffDay = Math.floor(diffHour / 24);\r\n\r\n      if (diffDay > 0) {\r\n        return `il y a ${diffDay} jour${diffDay > 1 ? 's' : ''}`;\r\n      } else if (diffHour > 0) {\r\n        return `il y a ${diffHour} heure${diffHour > 1 ? 's' : ''}`;\r\n      } else if (diffMin > 0) {\r\n        return `il y a ${diffMin} minute${diffMin > 1 ? 's' : ''}`;\r\n      } else {\r\n        return 'à l\\'instant';\r\n      }\r\n    };\r\n\r\n    const formatActionName = (action) => {\r\n      const actions = {\r\n        connexion: 'Connexion',\r\n        deconnexion: 'Déconnexion',\r\n        creation_utilisateur: 'Création d\\'utilisateur',\r\n        modification_utilisateur: 'Modification d\\'utilisateur',\r\n        suppression_utilisateur: 'Suppression d\\'utilisateur',\r\n        validation_compte: 'Validation de compte',\r\n        ajout_points: 'Ajout de points',\r\n        creation_famille: 'Création de famille',\r\n        modification_famille: 'Modification de famille',\r\n        suppression_famille: 'Suppression de famille',\r\n        ajout_membre_famille: 'Ajout de membre à une famille',\r\n        retrait_membre_famille: 'Retrait de membre d\\'une famille',\r\n        creation_recette: 'Création de recette',\r\n        modification_recette: 'Modification de recette',\r\n        suppression_recette: 'Suppression de recette',\r\n        notation_recette: 'Notation de recette',\r\n        commentaire_recette: 'Commentaire sur recette',\r\n        creation_objet: 'Création d\\'objet',\r\n        modification_objet: 'Modification d\\'objet',\r\n        suppression_objet: 'Suppression d\\'objet',\r\n        utilisation_objet: 'Utilisation d\\'objet'\r\n      };\r\n      return actions[action] || action;\r\n    };\r\n\r\n    const getActionDescription = (action) => {\r\n      switch (action.action) {\r\n        case 'ajout_points':\r\n          return `${action.details.montant > 0 ? 'Ajout' : 'Retrait'} de ${Math.abs(action.details.montant)} points à ${action.details.email || 'un utilisateur'}`;\r\n        case 'creation_utilisateur':\r\n          return `Création de l'utilisateur ${action.details.email || 'inconnu'}`;\r\n        case 'connexion':\r\n          return `Connexion utilisateur ${action.details.email || 'inconnu'}`;\r\n        default:\r\n          return `Action ${action.action} effectuée`;\r\n      }\r\n    };\r\n\r\n    const getActionIcon = (action) => {\r\n      const icons = {\r\n        connexion: 'fas fa-sign-in-alt',\r\n        deconnexion: 'fas fa-sign-out-alt',\r\n        creation_utilisateur: 'fas fa-user-plus',\r\n        modification_utilisateur: 'fas fa-user-edit',\r\n        suppression_utilisateur: 'fas fa-user-minus',\r\n        validation_compte: 'fas fa-user-check',\r\n        ajout_points: 'fas fa-coins',\r\n        creation_famille: 'fas fa-home',\r\n        modification_famille: 'fas fa-edit',\r\n        suppression_famille: 'fas fa-trash',\r\n        ajout_membre_famille: 'fas fa-user-plus',\r\n        retrait_membre_famille: 'fas fa-user-minus',\r\n        creation_recette: 'fas fa-utensils',\r\n        modification_recette: 'fas fa-edit',\r\n        suppression_recette: 'fas fa-trash',\r\n        notation_recette: 'fas fa-star',\r\n        commentaire_recette: 'fas fa-comment',\r\n        creation_objet: 'fas fa-plus-circle',\r\n        modification_objet: 'fas fa-edit',\r\n        suppression_objet: 'fas fa-trash',\r\n        utilisation_objet: 'fas fa-cog'\r\n      };\r\n      return icons[action] || 'fas fa-history';\r\n    };\r\n\r\n    const getActionIconClass = (action) => {\r\n      const classes = {\r\n        connexion: 'action-login',\r\n        deconnexion: 'action-logout',\r\n        creation_utilisateur: 'action-create',\r\n        modification_utilisateur: 'action-update',\r\n        suppression_utilisateur: 'action-delete',\r\n        validation_compte: 'action-validate',\r\n        ajout_points: 'action-points'\r\n      };\r\n      return classes[action] || 'action-default';\r\n    };\r\n\r\n    // Fonctions pour les graphiques\r\n    const getLevelColor = (level) => {\r\n      const colors = {\r\n        'débutant': '#3498db',\r\n        'intermédiaire': '#2ecc71',\r\n        'avancé': '#f39c12',\r\n        'expert': '#9b59b6'\r\n      };\r\n      return colors[level] || '#95a5a6';\r\n    };\r\n\r\n    const getDoughnutSegmentStyle = (level, data) => {\r\n      const colors = {\r\n        'débutant': '#3498db',\r\n        'intermédiaire': '#2ecc71',\r\n        'avancé': '#f39c12',\r\n        'expert': '#9b59b6'\r\n      };\r\n\r\n      const total = Object.values(data).reduce((sum, val) => sum + val, 0);\r\n      if (total === 0) return { display: 'none' };\r\n\r\n      const levels = Object.keys(data);\r\n      const currentIndex = levels.indexOf(level);\r\n\r\n      let startAngle = 0;\r\n      for (let i = 0; i < currentIndex; i++) {\r\n        startAngle += (data[levels[i]] / total) * 360;\r\n      }\r\n\r\n      const angle = (data[level] / total) * 360;\r\n\r\n      return {\r\n        backgroundColor: colors[level],\r\n        transform: `rotate(${startAngle}deg)`,\r\n        clipPath: `polygon(50% 50%, 50% 0%, ${angle <= 180 ? '100% 0%' : '100% 0%, 100% 100%'}, ${angle <= 90 ? '50% 50%' : angle <= 180 ? '100% 100%, 50% 50%' : '0% 100%, 0% 0%, 50% 0%, 50% 50%'})`,\r\n        opacity: data[level] > 0 ? 1 : 0\r\n      };\r\n    };\r\n\r\n    // Fonction pour la couleur de la heatmap\r\n    const getHeatmapColor = (value) => {\r\n      // Échelle de couleur de bleu clair à bleu foncé\r\n      const maxValue = Math.max(...stats.value.actionsByDayTime.flat());\r\n      if (maxValue === 0) return '#f1f5fa'; // Couleur par défaut si pas de données\r\n\r\n      const intensity = Math.min(value / maxValue, 1);\r\n\r\n      // Échelle de couleur de bleu clair à vert\r\n      if (intensity === 0) return '#f1f5fa';\r\n      if (intensity < 0.2) return '#e3f2fd';\r\n      if (intensity < 0.4) return '#bbdefb';\r\n      if (intensity < 0.6) return '#90caf9';\r\n      if (intensity < 0.8) return '#64b5f6';\r\n      return '#2196f3';\r\n    };\r\n\r\n    return {\r\n      userData,\r\n      getWelcomeMessage,\r\n      logout,\r\n      defaultAvatar,\r\n      recentActions,\r\n      stats,\r\n      loading,\r\n      formatDate,\r\n      formatTimeAgo,\r\n      formatActionName,\r\n      getActionDescription,\r\n      getActionIcon,\r\n      getActionIconClass,\r\n      refreshStats,\r\n      getLevelColor,\r\n      getDoughnutSegmentStyle,\r\n      getHeatmapColor\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.accueil-container {\r\n  padding: 12px;\r\n}\r\n\r\n.main-content {\r\n  flex: 1;\r\n}\r\n\r\n.welcome-card {\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 12px;\r\n}\r\n\r\nh1 {\r\n  color: #2c5038;\r\n  margin-bottom: 15px;\r\n  font-size: 1.6rem;\r\n}\r\n\r\n.user-profile {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.profile-image-container {\r\n  position: relative;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  border: 2px solid #2c5038;\r\n  margin-right: 15px;\r\n}\r\n\r\n.profile-pic {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.user-details {\r\n  flex: 1;\r\n}\r\n\r\n.date-info {\r\n  color: #666;\r\n  font-size: 0.85rem;\r\n}\r\n\r\nh2 {\r\n  color: #2c5038;\r\n  margin: 0 0 12px 0;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.actions {\r\n  text-align: right;\r\n}\r\n\r\n.logout-btn {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  padding: 6px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  transition: background-color 0.3s;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n}\r\n\r\n.logout-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n/* Statistiques */\r\n.dashboard-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\r\n  gap: 12px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.stat-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 10px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.stat-icon i {\r\n  font-size: 1.3rem;\r\n  color: white;\r\n}\r\n\r\n.user-icon {\r\n  background-color: #3498db;\r\n}\r\n\r\n.family-icon {\r\n  background-color: #2ecc71;\r\n}\r\n\r\n.action-icon {\r\n  background-color: #9b59b6;\r\n}\r\n\r\n.points-icon {\r\n  background-color: #f39c12;\r\n}\r\n\r\n.stat-content {\r\n  flex: 1;\r\n}\r\n\r\n.stat-content h3 {\r\n  margin: 0 0 3px 0;\r\n  font-size: 0.85rem;\r\n  color: #666;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.stat-info {\r\n  font-size: 0.75rem;\r\n  color: #777;\r\n}\r\n\r\n.stat-highlight {\r\n  font-weight: bold;\r\n  color: #2c5038;\r\n}\r\n\r\n.stat-positive {\r\n  color: #2ecc71;\r\n  font-weight: bold;\r\n}\r\n\r\n.stat-negative {\r\n  color: #e74c3c;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Activité récente remplacée par des graphiques */\r\n.chart-section {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.charts-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(230px, 1fr));\r\n  gap: 12px;\r\n}\r\n\r\n.chart-wrapper {\r\n  background-color: #f8f9fa;\r\n  border-radius: 6px;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.chart-wrapper h3 {\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  font-size: 0.85rem;\r\n  color: #333;\r\n}\r\n\r\n/* Pie Chart Styles */\r\n.pie-chart {\r\n  position: relative;\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n  background-color: #eee;\r\n  margin: 0 auto 20px;\r\n  overflow: hidden;\r\n}\r\n\r\n.pie-segment {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform-origin: 50% 50%;\r\n}\r\n\r\n.segment-label {\r\n  display: none;\r\n}\r\n\r\n.chart-center {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.chart-center span {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.chart-center small {\r\n  font-size: 0.7rem;\r\n  color: #666;\r\n}\r\n\r\n.chart-legend {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin-top: 8px;\r\n  gap: 8px;\r\n}\r\n\r\n.legend-item {\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.color-badge {\r\n  display: inline-block;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 3px;\r\n  margin-right: 5px;\r\n}\r\n\r\n/* Bar Chart Styles */\r\n.bar-chart {\r\n  height: 200px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  padding: 10px 5px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  box-shadow: inset 0 0 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.bar-column {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  height: 100%;\r\n  padding: 0 5px;\r\n}\r\n\r\n.bar-value {\r\n  width: 100%;\r\n  background-color: #2ecc71;\r\n  border-radius: 4px 4px 0 0;\r\n  position: relative;\r\n  min-height: 5px; /* pour les valeurs très petites */\r\n  transition: height 0.5s;\r\n}\r\n\r\n.bar-tooltip {\r\n  position: absolute;\r\n  top: -25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: #333;\r\n  color: white;\r\n  padding: 2px 6px;\r\n  border-radius: 3px;\r\n  font-size: 0.7rem;\r\n  opacity: 0;\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.bar-value:hover .bar-tooltip {\r\n  opacity: 1;\r\n}\r\n\r\n.bar-label {\r\n  font-size: 0.7rem;\r\n  color: #666;\r\n  margin-top: 5px;\r\n}\r\n\r\n/* Actions rapides */\r\n.quick-actions {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.view-all-link {\r\n  color: #2c5038;\r\n  font-size: 0.8rem;\r\n  text-decoration: none;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.actions-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\r\n  gap: 10px;\r\n}\r\n\r\n.action-button {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: #333;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #e9ecef;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.action-button i {\r\n  font-size: 1.1rem;\r\n  color: #2c5038;\r\n}\r\n\r\n.action-button span {\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Menu navigation */\r\n.admin-menu {\r\n  margin-top: 12px;\r\n}\r\n\r\n.admin-menu h2 {\r\n  color: #2c5038;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.menu-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\r\n  gap: 12px;\r\n}\r\n\r\n.menu-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  gap: 10px;\r\n  text-decoration: none;\r\n  color: #333;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.menu-card:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.menu-card i {\r\n  font-size: 1.5rem;\r\n  color: #2c5038;\r\n}\r\n\r\n.menu-card span {\r\n  font-size: 0.9rem;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Responsive */\r\n@media screen and (max-width: 768px) {\r\n  .accueil-container {\r\n    padding: 10px;\r\n  }\r\n\r\n  .dashboard-stats {\r\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  }\r\n\r\n  .actions-grid {\r\n    grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .accueil-container {\r\n    padding: 8px;\r\n  }\r\n\r\n  .dashboard-stats {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  .welcome-card {\r\n    padding: 12px;\r\n  }\r\n\r\n  .user-profile {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .profile-image-container {\r\n    margin-right: 0;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .activity-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n}\r\n\r\n/* Graphiques améliorés */\r\n.doughnut-chart {\r\n  position: relative;\r\n  width: 130px;\r\n  height: 130px;\r\n  margin: 0 auto 10px;\r\n}\r\n\r\n.doughnut-segments {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\n\r\n.doughnut-segment {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  transform-origin: center;\r\n}\r\n\r\n.enhanced-bar-chart {\r\n  position: relative;\r\n  height: 200px;\r\n  display: flex;\r\n  padding: 10px 0 20px 30px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  box-shadow: inset 0 0 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.chart-axis-y {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 5px 0;\r\n}\r\n\r\n.axis-label {\r\n  font-size: 0.7rem;\r\n  color: #666;\r\n  text-align: right;\r\n  padding-right: 5px;\r\n}\r\n\r\n.bars-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.trend-line {\r\n  position: absolute;\r\n  bottom: 30px;\r\n  left: 30px;\r\n  right: 10px;\r\n  height: 150px;\r\n  background: linear-gradient(to top, rgba(46, 204, 113, 0.1), rgba(46, 204, 113, 0.3));\r\n  border-top: 2px dashed rgba(46, 204, 113, 0.6);\r\n  pointer-events: none;\r\n}\r\n\r\n/* Nouveau graphique de tendance */\r\n.trend-chart {\r\n  height: 150px;\r\n  position: relative;\r\n  padding: 8px 5px 25px 5px;\r\n}\r\n\r\n.trend-line-container {\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.trend-point {\r\n  position: absolute;\r\n  width: 6px;\r\n  height: 6px;\r\n  margin-left: -3px;\r\n  margin-bottom: -3px;\r\n  background-color: #2ecc71;\r\n  border-radius: 50%;\r\n  z-index: 2;\r\n}\r\n\r\n.trend-tooltip {\r\n  position: absolute;\r\n  bottom: 15px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: #333;\r\n  color: white;\r\n  padding: 2px 6px;\r\n  border-radius: 3px;\r\n  font-size: 0.7rem;\r\n  white-space: nowrap;\r\n  opacity: 0;\r\n  transition: opacity 0.3s;\r\n  pointer-events: none;\r\n}\r\n\r\n.trend-point:hover .trend-tooltip {\r\n  opacity: 1;\r\n}\r\n\r\n.trend-path {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.trend-x-axis {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 20px;\r\n}\r\n\r\n.trend-hour-label {\r\n  position: absolute;\r\n  transform: translateX(-50%);\r\n  font-size: 0.65rem;\r\n  color: #666;\r\n}\r\n\r\n/* Graphique de barres horizontales */\r\n.horizontal-bar-chart {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.horizontal-bar-row {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.horizontal-bar-label {\r\n  width: 100px;\r\n  font-size: 0.8rem;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding-right: 10px;\r\n}\r\n\r\n.horizontal-bar-container {\r\n  flex: 1;\r\n  height: 20px;\r\n  background-color: #f1f1f1;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n}\r\n\r\n.horizontal-bar {\r\n  height: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 3px;\r\n  transition: width 0.5s;\r\n}\r\n\r\n.horizontal-bar-value {\r\n  position: absolute;\r\n  right: 5px;\r\n  color: white;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  text-shadow: 0 0 2px rgba(0,0,0,0.5);\r\n}\r\n\r\n/* Styles pour le message d'absence de données */\r\n.no-data-message {\r\n  text-align: center;\r\n  color: #95a5a6;\r\n  font-style: italic;\r\n  padding: 20px;\r\n}\r\n\r\n/* Heatmap styles */\r\n.heatmap-chart {\r\n  display: flex;\r\n  height: 130px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.heatmap-y-axis {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding-right: 6px;\r\n  width: 60px;\r\n}\r\n\r\n.heatmap-y-label {\r\n  height: 36px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.6rem;\r\n  color: #666;\r\n  text-align: right;\r\n}\r\n\r\n.heatmap-grid {\r\n  display: flex;\r\n  flex: 1;\r\n  gap: 3px;\r\n}\r\n\r\n.heatmap-day-column {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.heatmap-x-label {\r\n  text-align: center;\r\n  font-size: 0.6rem;\r\n  color: #666;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.heatmap-cell {\r\n  flex: 1;\r\n  margin: 1px 0;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  cursor: default;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.heatmap-cell:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.heatmap-value {\r\n  font-size: 0.65rem;\r\n  font-weight: bold;\r\n  color: rgb(85, 81, 81);\r\n  text-shadow: 0 0 1px rgba(0,0,0,0.5);\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}