{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport api from '@/services/api';\nimport defaultAvatar from '@/assets/default-avatar.png';\nimport { getPhotoUrl } from '@/utils/photo';\nimport UserHistoryModal from '@/components/UserHistoryModal.vue';\nexport default {\n  name: 'AdminUsers',\n  components: {\n    AppLayout,\n    UserHistoryModal\n  },\n  setup() {\n    const users = ref([]);\n    const familles = ref([]);\n    const searchQuery = ref('');\n    const showModal = ref(false);\n    const showFamilleModal = ref(false);\n    const editingUser = ref(null);\n    const form = ref({\n      nom: '',\n      prenom: '',\n      genre: 'Non spécifié',\n      codeFamille: '',\n      login: '',\n      password: '',\n      role: 'simple',\n      niveau: 'débutant'\n    });\n    const familleForm = ref({\n      codeFamille: '',\n      nom: '',\n      description: ''\n    });\n    const formMessage = ref('');\n    const formSuccess = ref(false);\n    const showHistoryModal = ref(false);\n    const selectedUser = ref(null);\n    const loading = ref(false);\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n\n    // Nouvelles variables pour la gestion des points\n    const showPointsHistoryModal = ref(false);\n    const showPointsAdjustModal = ref(false);\n    const pointsHistory = ref([]);\n    const pointsForm = ref({\n      amount: null,\n      reason: ''\n    });\n\n    // Ajout des variables pour gérer le changement de niveau\n    const showLevelChangeModal = ref(false);\n    const levelChangeData = ref({\n      niveauChanged: false,\n      roleChanged: false,\n      niveauAvant: '',\n      niveauApres: '',\n      roleAvant: '',\n      roleApres: ''\n    });\n    const loadFamilles = async () => {\n      try {\n        const response = await api.get('/familles');\n        familles.value = response.data;\n      } catch (error) {\n        console.error('Erreur lors du chargement des familles:', error);\n      }\n    };\n    const loadUsers = async () => {\n      try {\n        isLoading.value = true;\n        errorMessage.value = '';\n        const response = await api.get('/users');\n        console.log('Données brutes des utilisateurs:', response.data);\n\n        // Fonction pour analyser la structure d'un utilisateur\n        const analyzeUserStructure = user => {\n          const hasPersonne = !!user.personne;\n          const hasDirectProps = !!(user.nom || user.prenom);\n          const personneStructure = hasPersonne ? Object.keys(user.personne).join(', ') : 'absent';\n          console.log(`Utilisateur ${user._id || 'sans ID'}: ` + `Objet personne: ${hasPersonne ? 'présent' : 'absent'}, ` + `Props directes: ${hasDirectProps ? 'présentes' : 'absentes'}, ` + `Structure personne: ${personneStructure}, ` + `Rôle: ${user.role || 'non défini'}`);\n        };\n\n        // Analyser la structure de chaque utilisateur\n        if (response.data && response.data.length > 0) {\n          console.log('--- Analyse de la structure des utilisateurs ---');\n          response.data.forEach(analyzeUserStructure);\n          console.log('-----------------------------------------------');\n        }\n        users.value = response.data.map(user => {\n          // Vérification détaillée des données\n          console.log('Structure utilisateur:', user);\n          return {\n            _id: user._id,\n            nom: user.personne?.nom || user.nom || 'Non défini',\n            prenom: user.personne?.prenom || user.prenom || 'Non défini',\n            login: user.login || 'Non défini',\n            role: user.role || 'simple',\n            niveau: user.niveau || 'débutant',\n            photo: user.photo || null,\n            points: user.points || 0,\n            genre: user.personne?.genre || user.genre || 'Non spécifié',\n            famille: user.famille\n          };\n        });\n        console.log('Utilisateurs chargés et transformés:', users.value);\n      } catch (error) {\n        console.error('Erreur lors du chargement des utilisateurs:', error);\n        errorMessage.value = \"Erreur lors du chargement des utilisateurs. Veuillez rafraîchir la page.\";\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    const filteredUsers = computed(() => {\n      if (!searchQuery.value) return users.value;\n      const query = searchQuery.value.toLowerCase();\n      return users.value.filter(user => user.login?.toLowerCase().includes(query) || user.nom?.toLowerCase().includes(query) || user.prenom?.toLowerCase().includes(query) || user.famille?.codeFamille?.toLowerCase().includes(query));\n    });\n    const handleImageError = event => {\n      event.target.src = defaultAvatar;\n    };\n    const getRoleBadgeClass = role => {\n      return `role-badge role-${role}`;\n    };\n    const editUser = user => {\n      editingUser.value = user;\n      form.value = {\n        nom: user.nom || '',\n        prenom: user.prenom || '',\n        codeFamille: user.famille?.codeFamille || '',\n        login: user.login,\n        role: user.role,\n        niveau: user.niveau,\n        genre: user.genre || 'Non spécifié',\n        password: ''\n      };\n      formMessage.value = '';\n      showModal.value = true;\n    };\n    const openAddUserModal = () => {\n      editingUser.value = null;\n      showModal.value = true;\n      form.value = {\n        nom: '',\n        prenom: '',\n        genre: 'Non spécifié',\n        codeFamille: '',\n        login: '',\n        password: '',\n        role: 'simple',\n        niveau: 'débutant'\n      };\n      formMessage.value = '';\n    };\n    const openAddFamilleModal = () => {\n      showFamilleModal.value = true;\n      familleForm.value = {\n        codeFamille: '',\n        nom: '',\n        description: ''\n      };\n    };\n    const closeFamilleModal = () => {\n      showFamilleModal.value = false;\n    };\n    const saveFamille = async () => {\n      try {\n        await api.post('/familles', familleForm.value);\n        await loadFamilles();\n        closeFamilleModal();\n      } catch (error) {\n        console.error('Erreur lors de la création de la famille:', error);\n      }\n    };\n    const deleteMessage = ref('');\n    const deleteSuccess = ref(false);\n    const closeModal = () => {\n      showModal.value = false;\n      editingUser.value = null;\n    };\n    const confirmDelete = async user => {\n      if (confirm(`Êtes-vous sûr de vouloir supprimer l'utilisateur ${user.login} ?`)) {\n        try {\n          await api.delete(`/users/${user._id}`);\n          deleteMessage.value = 'Utilisateur supprimé avec succès !';\n          deleteSuccess.value = true;\n          await loadUsers();\n          setTimeout(() => {\n            deleteMessage.value = '';\n          }, 2000);\n        } catch (error) {\n          deleteMessage.value = error.response?.data?.message || \"Erreur lors de la suppression de l'utilisateur.\";\n          deleteSuccess.value = false;\n        }\n      }\n    };\n    const saveUser = async () => {\n      try {\n        formMessage.value = '';\n        if (!form.value.password && !editingUser.value) {\n          formMessage.value = 'Le mot de passe est requis pour un nouvel utilisateur';\n          formSuccess.value = false;\n          return;\n        }\n        const userData = {\n          nom: form.value.nom.trim(),\n          prenom: form.value.prenom.trim(),\n          codeFamille: form.value.codeFamille,\n          login: form.value.login.trim(),\n          role: form.value.role,\n          niveau: form.value.niveau,\n          personne: {\n            nom: form.value.nom.trim(),\n            prenom: form.value.prenom.trim(),\n            genre: form.value.genre\n          }\n        };\n        if (!editingUser.value) {\n          userData.password = form.value.password;\n        }\n        let response;\n        if (editingUser.value) {\n          response = await api.put(`/users/${editingUser.value._id}`, userData);\n        } else {\n          response = await api.post('/users', userData);\n        }\n        if (response.data) {\n          formMessage.value = editingUser.value ? 'Utilisateur modifié avec succès !' : 'Utilisateur ajouté avec succès !';\n          formSuccess.value = true;\n          await loadUsers();\n          setTimeout(() => closeModal(), 1500);\n        }\n      } catch (err) {\n        let errorMessage = editingUser.value ? 'Erreur lors de la modification de l\\'utilisateur' : 'Erreur lors de la création de l\\'utilisateur';\n        if (err.response?.status === 404) {\n          errorMessage = 'Erreur de connexion au serveur. Vérifiez que le serveur backend est démarré.';\n        } else if (err.response?.status === 403) {\n          errorMessage = 'Vous n\\'avez pas les droits nécessaires.';\n        } else if (err.response?.data?.message) {\n          errorMessage = err.response.data.message;\n        }\n        formMessage.value = errorMessage;\n        formSuccess.value = false;\n      }\n    };\n    const showHistory = user => {\n      selectedUser.value = user;\n      showHistoryModal.value = true;\n    };\n    const closeHistoryModal = () => {\n      showHistoryModal.value = false;\n    };\n\n    // Nouvelle fonction pour afficher l'historique des points\n    const fetchPointsHistory = async userId => {\n      try {\n        loading.value = true;\n        const response = await api.get(`/history?search=${userId}`);\n        // Filtrer pour ne garder que les actions liées aux points\n        pointsHistory.value = response.data.histories.filter(entry => entry.action === 'ajout_points' && entry.details.userId === userId);\n      } catch (error) {\n        console.error('Erreur lors du chargement de l\\'historique des points:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Fonctions pour gérer l'affichage de l'historique des points\n    const viewPointsHistory = async user => {\n      selectedUser.value = user;\n      await fetchPointsHistory(user._id);\n      showPointsHistoryModal.value = true;\n    };\n    const closePointsHistoryModal = () => {\n      showPointsHistoryModal.value = false;\n      pointsHistory.value = [];\n    };\n\n    // Fonctions pour gérer l'ajustement des points\n    const adjustPoints = user => {\n      selectedUser.value = user;\n      pointsForm.value = {\n        amount: null,\n        reason: ''\n      };\n      showPointsAdjustModal.value = true;\n    };\n    const closePointsAdjustModal = () => {\n      showPointsAdjustModal.value = false;\n    };\n    const savePointsAdjustment = async () => {\n      if (!pointsForm.value.amount) return;\n      try {\n        loading.value = true;\n        const response = await api.post(`/users/${selectedUser.value._id}/points`, {\n          amount: parseFloat(pointsForm.value.amount),\n          reason: pointsForm.value.reason\n        });\n\n        // Mettre à jour les points de l'utilisateur dans la liste\n        const userIndex = users.value.findIndex(u => u._id === selectedUser.value._id);\n        if (userIndex !== -1) {\n          const oldNiveau = users.value[userIndex].niveau;\n          const oldRole = users.value[userIndex].role;\n\n          // Mettre à jour les points\n          users.value[userIndex].points = response.data.points;\n          selectedUser.value.points = response.data.points;\n\n          // Vérifier s'il y a eu changement de niveau ou de rôle\n          if (response.data.niveauChanged || response.data.roleChanged) {\n            // Mettre à jour le niveau et le rôle\n            users.value[userIndex].niveau = response.data.niveau;\n            users.value[userIndex].role = response.data.role;\n            selectedUser.value.niveau = response.data.niveau;\n            selectedUser.value.role = response.data.role;\n\n            // Préparer les données pour le modal de notification\n            levelChangeData.value = {\n              niveauChanged: response.data.niveauChanged,\n              roleChanged: response.data.roleChanged,\n              niveauAvant: oldNiveau,\n              niveauApres: response.data.niveau,\n              roleAvant: oldRole,\n              roleApres: response.data.role\n            };\n\n            // Fermer le modal d'ajustement et afficher celui de notification\n            showPointsAdjustModal.value = false;\n            showLevelChangeModal.value = true;\n          } else {\n            // Rafraîchir l'historique des points et afficher\n            await fetchPointsHistory(selectedUser.value._id);\n            showPointsAdjustModal.value = false;\n            showPointsHistoryModal.value = true;\n          }\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajustement des points:', error);\n        alert('Une erreur est survenue lors de l\\'ajustement des points.');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Fonctions d'aide pour l'affichage\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleString('fr-FR');\n    };\n    const formatAction = action => {\n      const actions = {\n        'ajout_points': 'Ajustement de points',\n        'upgrade_niveau': 'Changement de niveau'\n      };\n      return actions[action] || action;\n    };\n    const formatPointsChange = amount => {\n      if (amount > 0) return `+${amount}`;\n      return amount;\n    };\n    const getPointsClass = amount => {\n      if (amount > 0) return 'points-positive';\n      if (amount < 0) return 'points-negative';\n      return '';\n    };\n\n    // Fonction pour déterminer si un changement de niveau est une progression ou une régression\n    const isLevelUpgrade = (before, after) => {\n      const niveauxOrder = {\n        'débutant': 1,\n        'intermédiaire': 2,\n        'avancé': 3,\n        'expert': 4\n      };\n      return niveauxOrder[after] > niveauxOrder[before];\n    };\n\n    // Fonction pour déterminer si un changement de rôle est une progression ou une régression\n    const isRoleUpgrade = (before, after) => {\n      const rolesOrder = {\n        'visiteur': 1,\n        'simple': 2,\n        'complexe': 3,\n        'admin': 4\n      };\n      return rolesOrder[after] > rolesOrder[before];\n    };\n\n    // Fonction pour fermer le modal de changement de niveau\n    const closeLevelChangeModal = () => {\n      showLevelChangeModal.value = false;\n    };\n    onMounted(() => {\n      loadUsers();\n      loadFamilles();\n    });\n    return {\n      users,\n      familles,\n      searchQuery,\n      filteredUsers,\n      showModal,\n      showFamilleModal,\n      editingUser,\n      defaultAvatar,\n      getPhotoUrl,\n      handleImageError,\n      editUser,\n      openAddUserModal,\n      openAddFamilleModal,\n      closeModal,\n      closeFamilleModal,\n      confirmDelete,\n      saveUser,\n      saveFamille,\n      getRoleBadgeClass,\n      form,\n      familleForm,\n      formMessage,\n      formSuccess,\n      showHistoryModal,\n      selectedUser,\n      showHistory,\n      closeHistoryModal,\n      // Nouvelles variables pour les points\n      showPointsHistoryModal,\n      showPointsAdjustModal,\n      pointsHistory,\n      pointsForm,\n      loading,\n      // Nouvelles variables pour le changement de niveau\n      showLevelChangeModal,\n      levelChangeData,\n      closeLevelChangeModal,\n      // Nouvelles fonctions pour la comparaison\n      isLevelUpgrade,\n      isRoleUpgrade,\n      // Fonctions pour les points\n      viewPointsHistory,\n      closePointsHistoryModal,\n      adjustPoints,\n      closePointsAdjustModal,\n      savePointsAdjustment,\n      formatDate,\n      formatAction,\n      formatPointsChange,\n      getPointsClass,\n      // Nouvelles variables pour le chargement\n      isLoading,\n      errorMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","AppLayout","api","defaultAvatar","getPhotoUrl","UserHistoryModal","name","components","setup","users","familles","searchQuery","showModal","showFamilleModal","editingUser","form","nom","prenom","genre","codeFamille","login","password","role","niveau","familleForm","description","formMessage","formSuccess","showHistoryModal","selectedUser","loading","isLoading","errorMessage","showPointsHistoryModal","showPointsAdjustModal","pointsHistory","pointsForm","amount","reason","showLevelChangeModal","levelChangeData","niveauChanged","roleChanged","niveauAvant","niveauApres","roleAvant","roleApres","loadFamilles","response","get","value","data","error","console","loadUsers","log","analyzeUserStructure","user","hasPersonne","personne","hasDirectProps","personneStructure","Object","keys","join","_id","length","forEach","map","photo","points","famille","filteredUsers","query","toLowerCase","filter","includes","handleImageError","event","target","src","getRoleBadgeClass","editUser","openAddUserModal","openAddFamilleModal","closeFamilleModal","saveFamille","post","deleteMessage","deleteSuccess","closeModal","confirmDelete","confirm","delete","setTimeout","message","saveUser","userData","trim","put","err","status","showHistory","closeHistoryModal","fetchPointsHistory","userId","histories","entry","action","details","viewPointsHistory","closePointsHistoryModal","adjustPoints","closePointsAdjustModal","savePointsAdjustment","parseFloat","userIndex","findIndex","u","oldNiveau","oldRole","alert","formatDate","dateString","Date","toLocaleString","formatAction","actions","formatPointsChange","getPointsClass","isLevelUpgrade","before","after","niveauxOrder","isRoleUpgrade","rolesOrder","closeLevelChangeModal"],"sources":["C:\\Users\\benab\\Desktop\\COURS 24_25\\S2\\WEB\\V4\\Projet_WEB_ING1\\frontend\\src\\views\\AdminUsers.vue"],"sourcesContent":["<template>\n  <AppLayout>\n    <div class=\"admin-users-container\">\n      <h1 class=\"page-title\">Gestion des utilisateurs</h1>\n\n      <!-- Message d'erreur pour le chargement des utilisateurs -->\n      <div v-if=\"errorMessage\" class=\"error-msg\">\n        <i class=\"fas fa-exclamation-triangle\"></i> {{ errorMessage }}\n      </div>\n\n      <div class=\"actions-bar\">\n        <div class=\"search-box\">\n          <input\n              type=\"text\"\n              v-model=\"searchQuery\"\n              placeholder=\"Rechercher...\"\n              class=\"search-input\"\n          />\n        </div>\n        <button @click=\"openAddUserModal\" class=\"add-user-btn\">\n          Ajouter un utilisateur\n        </button>\n      </div>\n      <div v-if=\"deleteMessage\" :class=\"{'success-msg': deleteSuccess, 'error-msg': !deleteSuccess}\">\n        {{ deleteMessage }}\n      </div>\n\n      <!-- Indicateur de chargement -->\n      <div v-if=\"isLoading\" class=\"loading-container\">\n        <div class=\"loading-spinner\">\n          <i class=\"fas fa-spinner fa-spin\"></i>\n        </div>\n        <p>Chargement des utilisateurs...</p>\n      </div>\n\n      <div v-else-if=\"users.length === 0\" class=\"no-users\">\n        <i class=\"fas fa-users-slash\"></i>\n        <p>Aucun utilisateur trouvé</p>\n      </div>\n\n      <div v-else-if=\"filteredUsers.length > 0\" class=\"users-table\">\n        <table class=\"users-data-table\">\n          <thead>\n          <tr>\n            <th>Photo</th>\n            <th>Nom</th>\n            <th>Prénom</th>\n            <th>Famille</th>\n            <th>Login</th>\n            <th>Rôle/Niveau</th>\n            <th>Points</th>\n            <th>Actions</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"user in filteredUsers\" :key=\"user._id\">\n            <td>\n              <img\n                  :src=\"getPhotoUrl(user.photo, user._id)\"\n                  :alt=\"user.login\"\n                  class=\"user-avatar\"\n                  @error=\"handleImageError\"\n              />\n            </td>\n            <td>{{ user.nom }}</td>\n            <td>{{ user.prenom }}</td>\n            <td>{{ user.famille?.codeFamille || '-' }}</td>\n            <td>{{ user.login }}</td>\n            <td>\n              <span :class=\"getRoleBadgeClass(user.role)\">\n                {{ user.role }}\n              </span>\n              <span class=\"niveau-badge\">/{{ user.niveau }}</span>\n            </td>\n            <td class=\"points-cell\">\n              <span class=\"points-badge\">{{ user.points || 0 }}</span>\n              <button @click=\"adjustPoints(user)\" class=\"points-adjust-btn\" title=\"Ajuster les points\">\n                <i class=\"fas fa-plus-circle\"></i>\n              </button>\n            </td>\n            <td class=\"actions-cell\">\n              <button @click=\"editUser(user)\" class=\"action-btn edit\" title=\"Modifier\">\n                <i class=\"fas fa-edit\"></i>\n                <span class=\"tooltip\">Modifier</span>\n              </button>\n              <button @click=\"confirmDelete(user)\" class=\"action-btn delete\" title=\"Supprimer\">\n                <i class=\"fas fa-trash\"></i>\n                <span class=\"tooltip\">Supprimer</span>\n              </button>\n              <button @click=\"showHistory(user)\" class=\"action-btn history\" title=\"Voir historique\">\n                <i class=\"fas fa-history\"></i>\n              </button>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div v-else class=\"no-results\">\n        <i class=\"fas fa-search\"></i>\n        <p>Aucun résultat ne correspond à votre recherche</p>\n      </div>\n\n    </div>\n\n    <!-- Modal pour éditer/ajouter un utilisateur -->\n    <div v-if=\"showModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h2>{{ editingUser ? 'Modifier' : 'Ajouter' }} un utilisateur</h2>\n        <form @submit.prevent=\"saveUser\">\n          <div class=\"form-row\">\n            <label>Nom :</label>\n            <input v-model=\"form.nom\" type=\"text\" required />\n          </div>\n          <div class=\"form-row\">\n            <label>Prénom :</label>\n            <input v-model=\"form.prenom\" type=\"text\" required />\n          </div>\n          <div class=\"form-row\">\n            <label>Genre :</label>\n            <select v-model=\"form.genre\" required>\n              <option value=\"Homme\">Homme</option>\n              <option value=\"Femme\">Femme</option>\n              <option value=\"Non spécifié\">Non spécifié</option>\n            </select>\n          </div>\n          <div class=\"form-row\">\n            <label>Famille :</label>\n            <select v-model=\"form.codeFamille\" required>\n              <option value=\"\">Sélectionner une famille</option>\n              <option v-for=\"famille in familles\" :key=\"famille._id\" :value=\"famille.codeFamille\">\n                {{ famille.codeFamille }}\n              </option>\n            </select>\n            <button type=\"button\" @click=\"openAddFamilleModal\" class=\"add-famille-btn\">\n              <i class=\"fas fa-plus\"></i> Nouvelle famille\n            </button>\n          </div>\n          <div class=\"form-row\">\n            <label>Login :</label>\n            <input v-model=\"form.login\" type=\"text\" required />\n          </div>\n          <div class=\"form-row\">\n            <label>Rôle :</label>\n            <select v-model=\"form.role\" required>\n              <option value=\"simple\">Simple</option>\n              <option value=\"complexe\">Complexe</option>\n              <option value=\"admin\">Admin</option>\n            </select>\n          </div>\n          <div class=\"form-row\" v-if=\"!editingUser\">\n            <label>Mot de passe :</label>\n            <input v-model=\"form.password\" type=\"password\" required />\n          </div>\n          <div class=\"form-row\">\n            <label>Niveau :</label>\n            <select v-model=\"form.niveau\" required>\n              <option value=\"débutant\">Débutant</option>\n              <option value=\"intermédiaire\">Intermédiaire</option>\n              <option value=\"avancé\">Avancé</option>\n              <option value=\"expert\">Expert</option>\n            </select>\n          </div>\n          <div class=\"modal-actions\">\n            <button type=\"submit\" class=\"save-btn\">Enregistrer</button>\n            <button type=\"button\" @click=\"closeModal\" class=\"cancel-btn\">Annuler</button>\n          </div>\n        </form>\n        <div v-if=\"formMessage\" :class=\"{'success-msg': formSuccess, 'error-msg': !formSuccess}\">{{ formMessage }}</div>\n      </div>\n    </div>\n\n    <!-- Modal pour ajouter une famille -->\n    <div v-if=\"showFamilleModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h2>Ajouter une famille</h2>\n        <form @submit.prevent=\"saveFamille\">\n          <div class=\"form-row\">\n            <label>Code Famille :</label>\n            <input v-model=\"familleForm.codeFamille\" type=\"text\" required />\n          </div>\n          <div class=\"form-row\">\n            <label>Nom de la famille :</label>\n            <input v-model=\"familleForm.nom\" type=\"text\" required placeholder=\"Ex: Famille Dupont\" />\n          </div>\n          <div class=\"form-row\">\n            <label>Description :</label>\n            <textarea v-model=\"familleForm.description\" placeholder=\"Description de la famille (optionnelle)\"></textarea>\n          </div>\n          <div class=\"modal-actions\">\n            <button type=\"submit\" class=\"save-btn\">Enregistrer</button>\n            <button type=\"button\" @click=\"closeFamilleModal\" class=\"cancel-btn\">Annuler</button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <UserHistoryModal\n        :show=\"showHistoryModal\"\n        :user=\"selectedUser\"\n        @close=\"closeHistoryModal\"\n    />\n\n    <!-- Modal pour l'historique des points -->\n    <div v-if=\"showPointsHistoryModal\" class=\"modal\">\n      <div class=\"modal-content points-history-modal\">\n        <div class=\"modal-header\">\n          <h2>Historique des points - {{ selectedUser?.login }}</h2>\n          <button class=\"close-btn\" @click=\"closePointsHistoryModal\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"user-points-summary\">\n            <p class=\"total-points\">\n              Points actuels: <span class=\"points-value\">{{ selectedUser?.points || 0 }}</span>\n            </p>\n          </div>\n\n          <div class=\"points-history-list\">\n            <div v-if=\"pointsHistory.length === 0\" class=\"no-history\">\n              Aucun historique de points disponible\n            </div>\n            <div v-else class=\"points-history-table\">\n              <table>\n                <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Action</th>\n                  <th>Montant</th>\n                  <th>Avant</th>\n                  <th>Après</th>\n                  <th>Raison</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr v-for=\"(entry, index) in pointsHistory\" :key=\"index\">\n                  <td>{{ formatDate(entry.date) }}</td>\n                  <td>{{ formatAction(entry.action) }}</td>\n                  <td :class=\"getPointsClass(entry.details.montant)\">\n                    {{ formatPointsChange(entry.details.montant) }}\n                  </td>\n                  <td>{{ entry.details.pointsAvant }}</td>\n                  <td>{{ entry.details.pointsApres }}</td>\n                  <td>{{ entry.details.raison }}</td>\n                </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal pour ajuster les points -->\n    <div v-if=\"showPointsAdjustModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h2>Ajuster les points - {{ selectedUser?.login }}</h2>\n          <button class=\"close-btn\" @click=\"closePointsAdjustModal\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"points-info\">\n            <p>Points actuels: <strong>{{ selectedUser?.points || 0 }}</strong></p>\n            <p>Niveau actuel: <strong>{{ selectedUser?.niveau }}</strong></p>\n            <p>Rôle actuel: <strong>{{ selectedUser?.role }}</strong></p>\n          </div>\n          <form @submit.prevent=\"savePointsAdjustment\">\n            <div class=\"form-row\">\n              <label>Montant des points:</label>\n              <input\n                  type=\"number\"\n                  v-model=\"pointsForm.amount\"\n                  step=\"0.5\"\n                  placeholder=\"Entrez un nombre positif ou négatif\"\n                  required\n              />\n            </div>\n            <div class=\"form-row\">\n              <label>Raison:</label>\n              <input\n                  type=\"text\"\n                  v-model=\"pointsForm.reason\"\n                  placeholder=\"Ex: Participation à un événement\"\n              />\n            </div>\n            <div class=\"modal-actions\">\n              <button type=\"submit\" class=\"save-btn\" :disabled=\"loading\">\n                <span v-if=\"loading\">Traitement...</span>\n                <span v-else>Confirmer</span>\n              </button>\n              <button type=\"button\" @click=\"closePointsAdjustModal\" class=\"cancel-btn\">Annuler</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal de notification pour changement de niveau/rôle -->\n    <div v-if=\"showLevelChangeModal\" class=\"modal\">\n      <div class=\"modal-content level-change-modal\">\n        <div class=\"modal-header\">\n          <h2>Évolution de l'utilisateur</h2>\n          <button class=\"close-btn\" @click=\"closeLevelChangeModal\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"level-change-content\">\n            <div class=\"user-info-header\">\n              <span class=\"user-login\">{{ selectedUser?.login }}</span>\n            </div>\n\n            <div v-if=\"levelChangeData.niveauChanged\" class=\"change-item\">\n              <div class=\"change-label\">Changement de niveau</div>\n              <div class=\"change-details\">\n                <div class=\"before-change\">\n                  <span class=\"label\">Avant:</span>\n                  <span class=\"value\">{{ levelChangeData.niveauAvant }}</span>\n                </div>\n                <div class=\"after-change\">\n                  <span class=\"label\">Après:</span>\n                  <span class=\"value highlight\">{{ levelChangeData.niveauApres }}</span>\n                </div>\n              </div>\n            </div>\n\n            <div v-if=\"levelChangeData.roleChanged\" class=\"change-item\">\n              <div class=\"change-label\">Changement de rôle</div>\n              <div class=\"change-details\">\n                <div class=\"before-change\">\n                  <span class=\"label\">Avant:</span>\n                  <span class=\"value\">{{ levelChangeData.roleAvant }}</span>\n                </div>\n                <div class=\"after-change\">\n                  <span class=\"label\">Après:</span>\n                  <span class=\"value highlight\">{{ levelChangeData.roleApres }}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"points-summary\">\n              <div class=\"points-label\">Points actuels:</div>\n              <div class=\"points-value\">{{ selectedUser?.points }}</div>\n            </div>\n\n            <div class=\"congratulations-message\">\n              <p v-if=\"levelChangeData.niveauChanged || levelChangeData.roleChanged\">\n                <template v-if=\"isLevelUpgrade(levelChangeData.niveauAvant, levelChangeData.niveauApres) || isRoleUpgrade(levelChangeData.roleAvant, levelChangeData.roleApres)\">\n                  🎉 Félicitations ! L'utilisateur a progressé !\n                </template>\n                <template v-else>\n                  ⚠️ Attention ! L'utilisateur a régressé suite à la perte de points.\n                </template>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn primary\" @click=\"closeLevelChangeModal\">Fermer</button>\n        </div>\n      </div>\n    </div>\n  </AppLayout>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport api from '@/services/api';\nimport defaultAvatar from '@/assets/default-avatar.png';\nimport { getPhotoUrl } from '@/utils/photo';\nimport UserHistoryModal from '@/components/UserHistoryModal.vue';\n\nexport default {\n  name: 'AdminUsers',\n  components: {\n    AppLayout,\n    UserHistoryModal\n  },\n  setup() {\n    const users = ref([]);\n    const familles = ref([]);\n    const searchQuery = ref('');\n    const showModal = ref(false);\n    const showFamilleModal = ref(false);\n    const editingUser = ref(null);\n    const form = ref({\n      nom: '',\n      prenom: '',\n      genre: 'Non spécifié',\n      codeFamille: '',\n      login: '',\n      password: '',\n      role: 'simple',\n      niveau: 'débutant'\n    });\n    const familleForm = ref({\n      codeFamille: '',\n      nom: '',\n      description: ''\n    });\n    const formMessage = ref('');\n    const formSuccess = ref(false);\n    const showHistoryModal = ref(false);\n    const selectedUser = ref(null);\n    const loading = ref(false);\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n\n    // Nouvelles variables pour la gestion des points\n    const showPointsHistoryModal = ref(false);\n    const showPointsAdjustModal = ref(false);\n    const pointsHistory = ref([]);\n    const pointsForm = ref({\n      amount: null,\n      reason: ''\n    });\n\n    // Ajout des variables pour gérer le changement de niveau\n    const showLevelChangeModal = ref(false);\n    const levelChangeData = ref({\n      niveauChanged: false,\n      roleChanged: false,\n      niveauAvant: '',\n      niveauApres: '',\n      roleAvant: '',\n      roleApres: ''\n    });\n\n    const loadFamilles = async () => {\n      try {\n        const response = await api.get('/familles');\n        familles.value = response.data;\n      } catch (error) {\n        console.error('Erreur lors du chargement des familles:', error);\n      }\n    };\n\n    const loadUsers = async () => {\n      try {\n        isLoading.value = true;\n        errorMessage.value = '';\n        \n        const response = await api.get('/users');\n        console.log('Données brutes des utilisateurs:', response.data);\n        \n        // Fonction pour analyser la structure d'un utilisateur\n        const analyzeUserStructure = (user) => {\n          const hasPersonne = !!user.personne;\n          const hasDirectProps = !!(user.nom || user.prenom);\n          const personneStructure = hasPersonne ? Object.keys(user.personne).join(', ') : 'absent';\n          \n          console.log(`Utilisateur ${user._id || 'sans ID'}: ` +\n            `Objet personne: ${hasPersonne ? 'présent' : 'absent'}, ` +\n            `Props directes: ${hasDirectProps ? 'présentes' : 'absentes'}, ` +\n            `Structure personne: ${personneStructure}, ` +\n            `Rôle: ${user.role || 'non défini'}`);\n        };\n        \n        // Analyser la structure de chaque utilisateur\n        if (response.data && response.data.length > 0) {\n          console.log('--- Analyse de la structure des utilisateurs ---');\n          response.data.forEach(analyzeUserStructure);\n          console.log('-----------------------------------------------');\n        }\n        \n        users.value = response.data.map(user => {\n          // Vérification détaillée des données\n          console.log('Structure utilisateur:', user);\n          \n          return {\n            _id: user._id,\n            nom: user.personne?.nom || user.nom || 'Non défini',\n            prenom: user.personne?.prenom || user.prenom || 'Non défini',\n            login: user.login || 'Non défini',\n            role: user.role || 'simple',\n            niveau: user.niveau || 'débutant',\n            photo: user.photo || null,\n            points: user.points || 0,\n            genre: user.personne?.genre || user.genre || 'Non spécifié',\n            famille: user.famille\n          };\n        });\n        console.log('Utilisateurs chargés et transformés:', users.value);\n      } catch (error) {\n        console.error('Erreur lors du chargement des utilisateurs:', error);\n        errorMessage.value = \"Erreur lors du chargement des utilisateurs. Veuillez rafraîchir la page.\";\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    const filteredUsers = computed(() => {\n      if (!searchQuery.value) return users.value;\n      const query = searchQuery.value.toLowerCase();\n      return users.value.filter(user =>\n          user.login?.toLowerCase().includes(query) ||\n          user.nom?.toLowerCase().includes(query) ||\n          user.prenom?.toLowerCase().includes(query) ||\n          user.famille?.codeFamille?.toLowerCase().includes(query)\n      );\n    });\n\n    const handleImageError = (event) => {\n      event.target.src = defaultAvatar;\n    };\n\n    const getRoleBadgeClass = (role) => {\n      return `role-badge role-${role}`;\n    };\n\n    const editUser = (user) => {\n      editingUser.value = user;\n      form.value = {\n        nom: user.nom || '',\n        prenom: user.prenom || '',\n        codeFamille: user.famille?.codeFamille || '',\n        login: user.login,\n        role: user.role,\n        niveau: user.niveau,\n        genre: user.genre || 'Non spécifié',\n        password: ''\n      };\n      formMessage.value = '';\n      showModal.value = true;\n    };\n\n    const openAddUserModal = () => {\n      editingUser.value = null;\n      showModal.value = true;\n      form.value = {\n        nom: '',\n        prenom: '',\n        genre: 'Non spécifié',\n        codeFamille: '',\n        login: '',\n        password: '',\n        role: 'simple',\n        niveau: 'débutant'\n      };\n      formMessage.value = '';\n    };\n\n    const openAddFamilleModal = () => {\n      showFamilleModal.value = true;\n      familleForm.value = {\n        codeFamille: '',\n        nom: '',\n        description: ''\n      };\n    };\n\n    const closeFamilleModal = () => {\n      showFamilleModal.value = false;\n    };\n\n    const saveFamille = async () => {\n      try {\n        await api.post('/familles', familleForm.value);\n        await loadFamilles();\n        closeFamilleModal();\n      } catch (error) {\n        console.error('Erreur lors de la création de la famille:', error);\n      }\n    };\n\n    const deleteMessage = ref('');\n    const deleteSuccess = ref(false);\n\n    const closeModal = () => {\n      showModal.value = false;\n      editingUser.value = null;\n    };\n\n    const confirmDelete = async (user) => {\n      if (confirm(`Êtes-vous sûr de vouloir supprimer l'utilisateur ${user.login} ?`)) {\n        try {\n          await api.delete(`/users/${user._id}`);\n          deleteMessage.value = 'Utilisateur supprimé avec succès !';\n          deleteSuccess.value = true;\n          await loadUsers();\n          setTimeout(() => {\n            deleteMessage.value = '';\n          }, 2000);\n        } catch (error) {\n          deleteMessage.value = error.response?.data?.message || \"Erreur lors de la suppression de l'utilisateur.\";\n          deleteSuccess.value = false;\n        }\n      }\n    };\n\n    const saveUser = async () => {\n      try {\n        formMessage.value = '';\n\n        if (!form.value.password && !editingUser.value) {\n          formMessage.value = 'Le mot de passe est requis pour un nouvel utilisateur';\n          formSuccess.value = false;\n          return;\n        }\n\n        const userData = {\n          nom: form.value.nom.trim(),\n          prenom: form.value.prenom.trim(),\n          codeFamille: form.value.codeFamille,\n          login: form.value.login.trim(),\n          role: form.value.role,\n          niveau: form.value.niveau,\n          personne: {\n            nom: form.value.nom.trim(),\n            prenom: form.value.prenom.trim(),\n            genre: form.value.genre\n          }\n        };\n\n        if (!editingUser.value) {\n          userData.password = form.value.password;\n        }\n\n        let response;\n        if (editingUser.value) {\n          response = await api.put(`/users/${editingUser.value._id}`, userData);\n        } else {\n          response = await api.post('/users', userData);\n        }\n\n        if (response.data) {\n          formMessage.value = editingUser.value ?\n              'Utilisateur modifié avec succès !' :\n              'Utilisateur ajouté avec succès !';\n          formSuccess.value = true;\n          await loadUsers();\n          setTimeout(() => closeModal(), 1500);\n        }\n      } catch (err) {\n        let errorMessage = editingUser.value ?\n            'Erreur lors de la modification de l\\'utilisateur' :\n            'Erreur lors de la création de l\\'utilisateur';\n\n        if (err.response?.status === 404) {\n          errorMessage = 'Erreur de connexion au serveur. Vérifiez que le serveur backend est démarré.';\n        } else if (err.response?.status === 403) {\n          errorMessage = 'Vous n\\'avez pas les droits nécessaires.';\n        } else if (err.response?.data?.message) {\n          errorMessage = err.response.data.message;\n        }\n\n        formMessage.value = errorMessage;\n        formSuccess.value = false;\n      }\n    };\n\n    const showHistory = (user) => {\n      selectedUser.value = user;\n      showHistoryModal.value = true;\n    };\n\n    const closeHistoryModal = () => {\n      showHistoryModal.value = false;\n    };\n\n    // Nouvelle fonction pour afficher l'historique des points\n    const fetchPointsHistory = async (userId) => {\n      try {\n        loading.value = true;\n        const response = await api.get(`/history?search=${userId}`);\n        // Filtrer pour ne garder que les actions liées aux points\n        pointsHistory.value = response.data.histories.filter(\n            entry => entry.action === 'ajout_points' &&\n                entry.details.userId === userId\n        );\n      } catch (error) {\n        console.error('Erreur lors du chargement de l\\'historique des points:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Fonctions pour gérer l'affichage de l'historique des points\n    const viewPointsHistory = async (user) => {\n      selectedUser.value = user;\n      await fetchPointsHistory(user._id);\n      showPointsHistoryModal.value = true;\n    };\n\n    const closePointsHistoryModal = () => {\n      showPointsHistoryModal.value = false;\n      pointsHistory.value = [];\n    };\n\n    // Fonctions pour gérer l'ajustement des points\n    const adjustPoints = (user) => {\n      selectedUser.value = user;\n      pointsForm.value = {\n        amount: null,\n        reason: ''\n      };\n      showPointsAdjustModal.value = true;\n    };\n\n    const closePointsAdjustModal = () => {\n      showPointsAdjustModal.value = false;\n    };\n\n    const savePointsAdjustment = async () => {\n      if (!pointsForm.value.amount) return;\n\n      try {\n        loading.value = true;\n\n        const response = await api.post(`/users/${selectedUser.value._id}/points`, {\n          amount: parseFloat(pointsForm.value.amount),\n          reason: pointsForm.value.reason\n        });\n\n        // Mettre à jour les points de l'utilisateur dans la liste\n        const userIndex = users.value.findIndex(u => u._id === selectedUser.value._id);\n        if (userIndex !== -1) {\n          const oldNiveau = users.value[userIndex].niveau;\n          const oldRole = users.value[userIndex].role;\n\n          // Mettre à jour les points\n          users.value[userIndex].points = response.data.points;\n          selectedUser.value.points = response.data.points;\n\n          // Vérifier s'il y a eu changement de niveau ou de rôle\n          if (response.data.niveauChanged || response.data.roleChanged) {\n            // Mettre à jour le niveau et le rôle\n            users.value[userIndex].niveau = response.data.niveau;\n            users.value[userIndex].role = response.data.role;\n            selectedUser.value.niveau = response.data.niveau;\n            selectedUser.value.role = response.data.role;\n\n            // Préparer les données pour le modal de notification\n            levelChangeData.value = {\n              niveauChanged: response.data.niveauChanged,\n              roleChanged: response.data.roleChanged,\n              niveauAvant: oldNiveau,\n              niveauApres: response.data.niveau,\n              roleAvant: oldRole,\n              roleApres: response.data.role\n            };\n\n            // Fermer le modal d'ajustement et afficher celui de notification\n            showPointsAdjustModal.value = false;\n            showLevelChangeModal.value = true;\n          } else {\n            // Rafraîchir l'historique des points et afficher\n            await fetchPointsHistory(selectedUser.value._id);\n            showPointsAdjustModal.value = false;\n            showPointsHistoryModal.value = true;\n          }\n        }\n\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajustement des points:', error);\n        alert('Une erreur est survenue lors de l\\'ajustement des points.');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Fonctions d'aide pour l'affichage\n    const formatDate = (dateString) => {\n      return new Date(dateString).toLocaleString('fr-FR');\n    };\n\n    const formatAction = (action) => {\n      const actions = {\n        'ajout_points': 'Ajustement de points',\n        'upgrade_niveau': 'Changement de niveau'\n      };\n      return actions[action] || action;\n    };\n\n    const formatPointsChange = (amount) => {\n      if (amount > 0) return `+${amount}`;\n      return amount;\n    };\n\n    const getPointsClass = (amount) => {\n      if (amount > 0) return 'points-positive';\n      if (amount < 0) return 'points-negative';\n      return '';\n    };\n\n    // Fonction pour déterminer si un changement de niveau est une progression ou une régression\n    const isLevelUpgrade = (before, after) => {\n      const niveauxOrder = {\n        'débutant': 1,\n        'intermédiaire': 2,\n        'avancé': 3,\n        'expert': 4\n      };\n      return niveauxOrder[after] > niveauxOrder[before];\n    };\n\n    // Fonction pour déterminer si un changement de rôle est une progression ou une régression\n    const isRoleUpgrade = (before, after) => {\n      const rolesOrder = {\n        'visiteur': 1,\n        'simple': 2,\n        'complexe': 3,\n        'admin': 4\n      };\n      return rolesOrder[after] > rolesOrder[before];\n    };\n\n    // Fonction pour fermer le modal de changement de niveau\n    const closeLevelChangeModal = () => {\n      showLevelChangeModal.value = false;\n    };\n\n    onMounted(() => {\n      loadUsers();\n      loadFamilles();\n    });\n\n    return {\n      users,\n      familles,\n      searchQuery,\n      filteredUsers,\n      showModal,\n      showFamilleModal,\n      editingUser,\n      defaultAvatar,\n      getPhotoUrl,\n      handleImageError,\n      editUser,\n      openAddUserModal,\n      openAddFamilleModal,\n      closeModal,\n      closeFamilleModal,\n      confirmDelete,\n      saveUser,\n      saveFamille,\n      getRoleBadgeClass,\n      form,\n      familleForm,\n      formMessage,\n      formSuccess,\n      showHistoryModal,\n      selectedUser,\n      showHistory,\n      closeHistoryModal,\n\n      // Nouvelles variables pour les points\n      showPointsHistoryModal,\n      showPointsAdjustModal,\n      pointsHistory,\n      pointsForm,\n      loading,\n\n      // Nouvelles variables pour le changement de niveau\n      showLevelChangeModal,\n      levelChangeData,\n      closeLevelChangeModal,\n\n      // Nouvelles fonctions pour la comparaison\n      isLevelUpgrade,\n      isRoleUpgrade,\n\n      // Fonctions pour les points\n      viewPointsHistory,\n      closePointsHistoryModal,\n      adjustPoints,\n      closePointsAdjustModal,\n      savePointsAdjustment,\n      formatDate,\n      formatAction,\n      formatPointsChange,\n      getPointsClass,\n\n      // Nouvelles variables pour le chargement\n      isLoading,\n      errorMessage\n    };\n  }\n};\n</script>\n\n<style scoped>\n.admin-users-container {\n  padding: 15px;\n}\n\n.page-title {\n  color: #2c5038;\n  margin-bottom: 20px;\n  font-size: 1.8rem;\n}\n\n.actions-bar {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  padding: 10px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  align-items: center;\n  position: sticky;\n  top: 0;\n  z-index: 20;\n}\n\n.search-box {\n  flex: 1;\n  max-width: 400px;\n  position: relative;\n}\n\n.search-input {\n  padding: 8px 12px 8px 35px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  width: 100%;\n  font-size: 0.95rem;\n}\n\n.search-box::before {\n  content: '\\f002';\n  font-family: 'Font Awesome 5 Free';\n  font-weight: 900;\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #2c5038;\n  opacity: 0.7;\n}\n\n.add-user-btn {\n  background-color: #2c5038;\n  color: white;\n  padding: 8px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.95rem;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  transition: all 0.2s ease;\n}\n\n.add-user-btn:hover {\n  background-color: #1e3725;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.add-user-btn::before {\n  content: '\\f067';\n  font-family: 'Font Awesome 5 Free';\n  font-weight: 900;\n}\n\n.users-table {\n  width: 100%;\n  overflow-x: auto;\n  margin-top: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n}\n\n.users-data-table {\n  width: 100%;\n  border-collapse: collapse;\n  table-layout: auto;\n}\n\n.users-table th, .users-table td {\n  padding: 12px 15px;\n  text-align: left;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.users-table th {\n  background-color: #f8fafc;\n  font-weight: 600;\n  color: #2c5038;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  padding: 12px 8px;\n  text-transform: uppercase;\n  font-size: 0.85rem;\n  letter-spacing: 0.5px;\n}\n\n.users-table tbody tr {\n  transition: background-color 0.2s ease;\n}\n\n.users-table tbody tr:hover {\n  background-color: #f1f5f9;\n}\n\n.users-table tbody tr:nth-child(even) {\n  background-color: #fafbfc;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid #4a7c59;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: block;\n  margin: 0 auto;\n}\n\n/* Styles optimisés pour les colonnes */\n.users-data-table th, .users-data-table td {\n  padding: 12px 8px;\n  vertical-align: middle;\n}\n\n.users-data-table th:first-child, .users-data-table td:first-child {\n  width: 60px;\n  text-align: center;\n}\n\n.users-data-table th:nth-child(2), .users-data-table td:nth-child(2),\n.users-data-table th:nth-child(3), .users-data-table td:nth-child(3),\n.users-data-table th:nth-child(4), .users-data-table td:nth-child(4),\n.users-data-table th:nth-child(5), .users-data-table td:nth-child(5) {\n  min-width: 100px;\n  max-width: 150px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* Style pour la colonne des points */\n.users-data-table th:nth-child(7), .users-data-table td:nth-child(7) {\n  width: 110px;\n  text-align: center;\n}\n\n/* Style des badges de rôle */\n.role-badge {\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  text-transform: capitalize;\n  display: inline-block;\n}\n\n.role-admin {\n  background-color: #fee2e2;\n  color: #b91c1c;\n}\n\n.role-simple {\n  background-color: #e0f2fe;\n  color: #0369a1;\n}\n\n.role-complexe {\n  background-color: #dcfce7;\n  color: #166534;\n}\n\n.role-visiteur {\n  background-color: #fef3c7;\n  color: #92400e;\n}\n\n/* Messages de succès et d'erreur */\n.success-msg, .error-msg {\n  padding: 10px 15px;\n  margin: 10px 0;\n  border-radius: 5px;\n  font-weight: 500;\n}\n\n.success-msg {\n  background-color: #dcfce7;\n  color: #166534;\n  border: 1px solid #86efac;\n}\n\n.error-msg {\n  background-color: #fee2e2;\n  color: #b91c1c;\n  border: 1px solid #fca5a5;\n}\n\n/* Colonne d'actions */\n.actions-cell {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 6px;\n  padding: 4px;\n  min-width: 120px;\n}\n\n.users-data-table th:last-child {\n  text-align: center;\n  width: 130px;\n}\n\n.action-btn {\n  width: 32px;\n  height: 32px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.action-btn i {\n  font-size: 1rem;\n}\n\n.action-btn.edit {\n  background-color: #2c5038;\n  color: white;\n}\n\n.action-btn.delete {\n  background-color: #dc3545;\n  color: white;\n}\n\n.action-btn.history {\n  background-color: #4a7c59;\n  color: white;\n}\n\n.action-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.action-btn .tooltip {\n  position: absolute;\n  bottom: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.3s ease;\n  white-space: nowrap;\n  z-index: 1000;\n}\n\n.action-btn:hover .tooltip {\n  opacity: 1;\n  visibility: visible;\n  bottom: -35px;\n}\n\n/* Ajout d'une petite flèche au tooltip */\n.action-btn .tooltip::before {\n  content: '';\n  position: absolute;\n  top: -4px;\n  left: 50%;\n  transform: translateX(-50%);\n  border-width: 0 4px 4px 4px;\n  border-style: solid;\n  border-color: transparent transparent #333 transparent;\n}\n\n/* Style pour la colonne Actions dans le header */\nth:last-child {\n  text-align: center !important;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 400px;\n}\n\n.modal-actions {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.save-btn {\n  background-color: #4CAF50;\n  color: white;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn {\n  background-color: #9e9e9e;\n  color: white;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.form-row {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 12px;\n}\n.form-row label {\n  font-weight: 500;\n  margin-bottom: 4px;\n  color: #2c5038;\n}\n.form-row input, .form-row select {\n  padding: 7px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n.avatar-homme {\n  border: 3px solid #007bff; /* Bleu */\n  padding: 2px;\n}\n\n.avatar-femme {\n  border: 3px solid #ff9800; /* Orange */\n  padding: 2px;\n}\n\n.avatar-neutre {\n  border: 3px solid #ccc; /* Gris */\n  padding: 2px;\n}\n\n.btn-history {\n  background-color: #2c5038;\n  color: white;\n  border: none;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  transition: background-color 0.3s;\n  font-size: 0.85rem;\n}\n\n.btn-history:hover {\n  background-color: #1a3022;\n}\n\n.btn-history i {\n  font-size: 0.85rem;\n}\n\n.actions {\n  display: flex;\n  gap: 10px;\n}\n\n.add-famille-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 5px;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.add-famille-btn i {\n  font-size: 0.9rem;\n}\n\n.add-famille-btn:hover {\n  background-color: #45a049;\n}\n\n.points-cell {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n}\n\n.points-badge {\n  background-color: #2c5038;\n  color: white;\n  padding: 4px 10px;\n  border-radius: 12px;\n  font-weight: bold;\n  font-size: 0.9rem;\n  min-width: 36px;\n  text-align: center;\n}\n\n.points-adjust-btn {\n  background: none;\n  border: none;\n  color: #2c5038;\n  cursor: pointer;\n  font-size: 1.1rem;\n  padding: 2px;\n  opacity: 0.7;\n  transition: opacity 0.3s;\n}\n\n.points-adjust-btn:hover {\n  opacity: 1;\n}\n\n.points-history-modal {\n  max-width: 800px;\n  width: 90%;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  background-color: #2c5038;\n  color: white;\n  border-radius: 8px 8px 0 0;\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-size: 1.3rem;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.2rem;\n  cursor: pointer;\n}\n\n.user-points-summary {\n  background-color: #f8f9fa;\n  padding: 15px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n}\n\n.total-points {\n  font-size: 1.1rem;\n  margin: 0;\n}\n\n.points-value {\n  font-weight: bold;\n  color: #2c5038;\n}\n\n.points-history-table {\n  width: 100%;\n  overflow-x: auto;\n}\n\n.points-history-table table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.points-history-table th,\n.points-history-table td {\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n  text-align: left;\n}\n\n.points-history-table th {\n  background-color: #f8f9fa;\n  font-weight: bold;\n  color: #333;\n}\n\n.points-positive {\n  color: green;\n  font-weight: bold;\n}\n\n.points-negative {\n  color: red;\n  font-weight: bold;\n}\n\n.no-history {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n  font-style: italic;\n}\n\n.level-change-modal {\n  max-width: 400px;\n  width: 90%;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  background-color: #2c5038;\n  color: white;\n  border-radius: 8px 8px 0 0;\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-size: 1.3rem;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.2rem;\n  cursor: pointer;\n}\n\n.level-change-content {\n  padding: 20px;\n}\n\n.user-info-header {\n  margin-bottom: 20px;\n}\n\n.user-login {\n  font-size: 1.2rem;\n  font-weight: bold;\n}\n\n.change-item {\n  margin-bottom: 10px;\n}\n\n.change-label {\n  font-weight: bold;\n}\n\n.change-details {\n  margin-top: 5px;\n}\n\n.before-change {\n  margin-right: 10px;\n}\n\n.after-change {\n  font-weight: bold;\n}\n\n.highlight {\n  font-weight: bold;\n  color: #2c5038;\n}\n\n.points-summary {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.points-label {\n  font-weight: bold;\n}\n\n.congratulations-message {\n  text-align: center;\n  margin-top: 10px;\n}\n\n.modal-footer {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.btn {\n  background-color: #2c5038;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn:hover {\n  background-color: #1a3022;\n}\n\n.primary {\n  background-color: #4CAF50;\n}\n\n.primary:hover {\n  background-color: #45a049;\n}\n\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 0;\n  color: #4a7c59;\n}\n\n.loading-spinner {\n  font-size: 2rem;\n  margin-bottom: 15px;\n}\n\n.no-users {\n  text-align: center;\n  padding: 30px;\n  background-color: #f8fafc;\n  border-radius: 8px;\n  color: #64748b;\n}\n\n.no-users i {\n  font-size: 2.5rem;\n  margin-bottom: 15px;\n  opacity: 0.6;\n}\n\n.no-results {\n  text-align: center;\n  padding: 30px;\n  background-color: #f8fafc;\n  border-radius: 8px;\n  color: #64748b;\n}\n\n.no-results i {\n  font-size: 2.5rem;\n  margin-bottom: 15px;\n  opacity: 0.6;\n}\n\n.niveau-badge {\n  font-size: 0.85em;\n  color: #64748b;\n  margin-left: 4px;\n  font-weight: 500;\n}\n\n.action-btn.history {\n  background-color: #e0e7ef;\n  color: #2c5038;\n  border: none;\n  width: 28px;\n  height: 28px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background 0.2s;\n}\n\n.action-btn.history:hover {\n  background-color: #cbd5e1;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}