{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"validation-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.message), 1 /* TEXT */), $data.validationRéussie ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToLogin && $options.goToLogin(...args)),\n    class: \"btn-retour\"\n  }, \" Retour à la page de connexion \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","message","validationRéussie","key","onClick","_cache","args","$options","goToLogin","_createCommentVNode"],"sources":["C:\\Users\\benab\\Desktop\\COURS 24_25\\S2\\WEB\\V4\\Projet_WEB_ING1\\frontend\\src\\views\\ValidationInscription.vue"],"sourcesContent":["<template>\r\n  <div class=\"validation-container\">\r\n    <h1>{{ message }}</h1>\r\n\r\n    <button\r\n        v-if=\"validationRéussie\"\r\n        @click=\"goToLogin\"\r\n        class=\"btn-retour\"\r\n    >\r\n      Retour à la page de connexion\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/authService';\r\n\r\nexport default {\r\n  name: 'ValidationView',\r\n  data() {\r\n    return {\r\n      message: 'Validation en cours...',\r\n      validationRéussie: false\r\n    };\r\n  },\r\n  async mounted() {\r\n    const token = this.$route.query.token;\r\n\r\n    if (!token) {\r\n      this.message = \"Lien de validation invalide ou manquant.\";\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await authService.validate(token);\r\n      this.message = response.message;\r\n      this.validationRéussie = true;\r\n    } catch (err) {\r\n      this.message = err.response?.data?.message || \"Erreur pendant la validation du compte.\";\r\n    }\r\n  },\r\n  methods: {\r\n    goToLogin() {\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.validation-container {\r\n  text-align: center;\r\n  margin-top: 100px;\r\n}\r\n\r\n.btn-retour {\r\n  margin-top: 20px;\r\n  padding: 12px 24px;\r\n  background-color: #2e7d32;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-retour:hover {\r\n  background-color: #1b5e20;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAsB;;uBAAjCC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAAsB,YAAAC,gBAAA,CAAfC,KAAA,CAAAC,OAAO,kBAGJD,KAAA,CAAAE,iBAAiB,I,cAD3BN,mBAAA,CAMS;IAVbO,GAAA;IAMSC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IACjBX,KAAK,EAAC;KACT,iCAED,KAVJc,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}