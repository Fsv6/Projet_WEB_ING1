{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport api from '@/services/api';\nimport Chart from 'chart.js/auto';\nexport default {\n  __name: 'ObjectActivityView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const object = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n    const stats = ref({});\n    const history = ref([]);\n    const users = ref([]);\n    const selectedUser = ref('');\n    const selectedPeriod = ref('7');\n    const usageChart = ref(null);\n    const dayChart = ref(null);\n    const hourChart = ref(null);\n    const filteredHistory = computed(() => {\n      let filtered = history.value;\n      if (selectedUser.value) {\n        filtered = filtered.filter(entry => entry.utilisateur._id === selectedUser.value);\n      }\n      return filtered;\n    });\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleString('fr-FR');\n    };\n    const loadData = async () => {\n      try {\n        const [objectRes, statsRes, historyRes, usersRes] = await Promise.all([api.get(`/objets/${route.params.id}`), api.get(`/objets/${route.params.id}/stats`), api.get(`/objets/${route.params.id}/history`), api.get('/users')]);\n        object.value = objectRes.data;\n        stats.value = statsRes.data;\n        history.value = historyRes.data;\n        users.value = usersRes.data;\n\n        // Initialiser les graphiques\n        initCharts();\n      } catch (err) {\n        error.value = 'Erreur lors du chargement des donn√©es';\n        console.error(err);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const initCharts = () => {\n      // Graphique d'utilisation par membre\n      new Chart(usageChart.value, {\n        type: 'bar',\n        data: {\n          labels: stats.value.usageParMembre.map(m => m.nom),\n          datasets: [{\n            label: 'Nombre d\\'utilisations',\n            data: stats.value.usageParMembre.map(m => m.count),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n\n      // Graphique d'utilisation par jour\n      new Chart(dayChart.value, {\n        type: 'line',\n        data: {\n          labels: ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'],\n          datasets: [{\n            label: 'Utilisations',\n            data: stats.value.usageParJour,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }]\n        },\n        options: {\n          responsive: true\n        }\n      });\n\n      // Graphique d'utilisation par heure\n      new Chart(hourChart.value, {\n        type: 'bar',\n        data: {\n          labels: Array.from({\n            length: 24\n          }, (_, i) => `${i}h`),\n          datasets: [{\n            label: 'Utilisations',\n            data: stats.value.usageParHeure,\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n    onMounted(() => {\n      loadData();\n    });\n    const __returned__ = {\n      route,\n      object,\n      loading,\n      error,\n      stats,\n      history,\n      users,\n      selectedUser,\n      selectedPeriod,\n      usageChart,\n      dayChart,\n      hourChart,\n      filteredHistory,\n      formatDate,\n      loadData,\n      initCharts,\n      ref,\n      onMounted,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      AppLayout,\n      get api() {\n        return api;\n      },\n      get Chart() {\n        return Chart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRoute","AppLayout","api","Chart","route","object","loading","error","stats","history","users","selectedUser","selectedPeriod","usageChart","dayChart","hourChart","filteredHistory","filtered","value","filter","entry","utilisateur","_id","formatDate","dateString","Date","toLocaleString","loadData","objectRes","statsRes","historyRes","usersRes","Promise","all","get","params","id","data","initCharts","err","console","type","labels","usageParMembre","map","m","nom","datasets","label","count","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero","usageParJour","fill","tension","Array","from","length","_","i","usageParHeure"],"sources":["C:/Users/benab/Desktop/COURS 24_25/S2/WEB/V4/Projet_WEB_ING1/frontend/src/views/ObjectActivityView.vue"],"sourcesContent":["<template>\r\n  <AppLayout>\r\n    <div class=\"object-activity-page\">\r\n      <div class=\"header\">\r\n        <router-link to=\"/manage/objects\">\r\n          <button class=\"btn-retour\">‚Üê Retour √† la gestion des objets</button>\r\n        </router-link>\r\n        <h1>üìä Activit√© de l'objet : {{ object?.nom }}</h1>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        <div class=\"spinner\"></div>\r\n        <p>Chargement des donn√©es...</p>\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"error\">\r\n        <p>{{ error }}</p>\r\n      </div>\r\n\r\n      <div v-else class=\"activity-content\">\r\n        <!-- Vue d'ensemble -->\r\n        <div class=\"overview-section\">\r\n          <h2>Vue d'ensemble</h2>\r\n          <div class=\"stats-grid\">\r\n            <div class=\"stat-card\">\r\n              <h3>Utilisations totales</h3>\r\n              <p class=\"stat-value\">{{ stats.totalUtilisations }}</p>\r\n            </div>\r\n            <div class=\"stat-card\">\r\n              <h3>Utilisateurs uniques</h3>\r\n              <p class=\"stat-value\">{{ stats.utilisateursUniques }}</p>\r\n            </div>\r\n            <div class=\"stat-card\">\r\n              <h3>Temps d'utilisation moyen</h3>\r\n              <p class=\"stat-value\">{{ stats.tempsMoyen }} min</p>\r\n            </div>\r\n            <div class=\"stat-card\">\r\n              <h3>Derni√®re utilisation</h3>\r\n              <p class=\"stat-value\">{{ formatDate(stats.derniereUtilisation) }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Graphiques -->\r\n        <div class=\"charts-section\">\r\n          <div class=\"chart-container\">\r\n            <h3>Utilisation par membre de la famille</h3>\r\n            <canvas ref=\"usageChart\"></canvas>\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <h3>Utilisation par jour de la semaine</h3>\r\n            <canvas ref=\"dayChart\"></canvas>\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <h3>Utilisation par heure de la journ√©e</h3>\r\n            <canvas ref=\"hourChart\"></canvas>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Historique d√©taill√© -->\r\n        <div class=\"history-section\">\r\n          <h2>Historique d√©taill√©</h2>\r\n          <div class=\"filters\">\r\n            <select v-model=\"selectedUser\" @change=\"filterHistory\">\r\n              <option value=\"\">Tous les utilisateurs</option>\r\n              <option v-for=\"user in users\" :key=\"user._id\" :value=\"user._id\">\r\n                {{ user.prenom }} {{ user.nom }}\r\n              </option>\r\n            </select>\r\n            <select v-model=\"selectedPeriod\" @change=\"filterHistory\">\r\n              <option value=\"7\">7 derniers jours</option>\r\n              <option value=\"30\">30 derniers jours</option>\r\n              <option value=\"90\">90 derniers jours</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"history-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Utilisateur</th>\r\n                  <th>Dur√©e</th>\r\n                  <th>Mode</th>\r\n                  <th>Temp√©rature</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"entry in filteredHistory\" :key=\"entry._id\">\r\n                  <td>{{ formatDate(entry.date) }}</td>\r\n                  <td>{{ entry.utilisateur.prenom }} {{ entry.utilisateur.nom }}</td>\r\n                  <td>{{ entry.duree }} min</td>\r\n                  <td>{{ entry.mode || '-' }}</td>\r\n                  <td>{{ entry.temperature || '-' }}¬∞C</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </AppLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport AppLayout from '@/layout/AppLayoutGlobal.vue'\r\nimport api from '@/services/api'\r\nimport Chart from 'chart.js/auto'\r\n\r\nconst route = useRoute()\r\nconst object = ref(null)\r\nconst loading = ref(true)\r\nconst error = ref(null)\r\nconst stats = ref({})\r\nconst history = ref([])\r\nconst users = ref([])\r\nconst selectedUser = ref('')\r\nconst selectedPeriod = ref('7')\r\nconst usageChart = ref(null)\r\nconst dayChart = ref(null)\r\nconst hourChart = ref(null)\r\n\r\nconst filteredHistory = computed(() => {\r\n  let filtered = history.value\r\n  if (selectedUser.value) {\r\n    filtered = filtered.filter(entry => entry.utilisateur._id === selectedUser.value)\r\n  }\r\n  return filtered\r\n})\r\n\r\nconst formatDate = (dateString) => {\r\n  return new Date(dateString).toLocaleString('fr-FR')\r\n}\r\n\r\nconst loadData = async () => {\r\n  try {\r\n    const [objectRes, statsRes, historyRes, usersRes] = await Promise.all([\r\n      api.get(`/objets/${route.params.id}`),\r\n      api.get(`/objets/${route.params.id}/stats`),\r\n      api.get(`/objets/${route.params.id}/history`),\r\n      api.get('/users')\r\n    ])\r\n\r\n    object.value = objectRes.data\r\n    stats.value = statsRes.data\r\n    history.value = historyRes.data\r\n    users.value = usersRes.data\r\n\r\n    // Initialiser les graphiques\r\n    initCharts()\r\n  } catch (err) {\r\n    error.value = 'Erreur lors du chargement des donn√©es'\r\n    console.error(err)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst initCharts = () => {\r\n  // Graphique d'utilisation par membre\r\n  new Chart(usageChart.value, {\r\n    type: 'bar',\r\n    data: {\r\n      labels: stats.value.usageParMembre.map(m => m.nom),\r\n      datasets: [{\r\n        label: 'Nombre d\\'utilisations',\r\n        data: stats.value.usageParMembre.map(m => m.count),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 1\r\n      }]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  // Graphique d'utilisation par jour\r\n  new Chart(dayChart.value, {\r\n    type: 'line',\r\n    data: {\r\n      labels: ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'],\r\n      datasets: [{\r\n        label: 'Utilisations',\r\n        data: stats.value.usageParJour,\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.1\r\n      }]\r\n    },\r\n    options: {\r\n      responsive: true\r\n    }\r\n  })\r\n\r\n  // Graphique d'utilisation par heure\r\n  new Chart(hourChart.value, {\r\n    type: 'bar',\r\n    data: {\r\n      labels: Array.from({length: 24}, (_, i) => `${i}h`),\r\n      datasets: [{\r\n        label: 'Utilisations',\r\n        data: stats.value.usageParHeure,\r\n        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n        borderColor: 'rgba(153, 102, 255, 1)',\r\n        borderWidth: 1\r\n      }]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  loadData()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.object-activity-page {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.header {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.btn-retour {\r\n  background-color: #f0f0f0;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 40px;\r\n}\r\n\r\n.spinner {\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 20px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.error {\r\n  color: #dc3545;\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.overview-section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  text-align: center;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #2c5038;\r\n  margin-top: 10px;\r\n}\r\n\r\n.charts-section {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.chart-container {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.history-section {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filters select {\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.history-table {\r\n  overflow-x: auto;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 12px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nth {\r\n  background-color: #f8f9fa;\r\n  font-weight: 600;\r\n}\r\n\r\ntr:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}