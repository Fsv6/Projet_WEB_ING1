{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport api from '@/services/api';\nimport defaultAvatar from '@/assets/default-avatar.png';\nimport { getPhotoUrl } from '@/utils/photo';\nimport UserHistoryModal from '@/components/UserHistoryModal.vue';\nexport default {\n  name: 'AdminUsers',\n  components: {\n    AppLayout,\n    UserHistoryModal\n  },\n  setup() {\n    const users = ref([]);\n    const familles = ref([]);\n    const searchQuery = ref('');\n    const showModal = ref(false);\n    const showFamilleModal = ref(false);\n    const editingUser = ref(null);\n    const form = ref({\n      nom: '',\n      prenom: '',\n      genre: 'Non spécifié',\n      codeFamille: '',\n      login: '',\n      password: '',\n      role: 'simple',\n      niveau: 'débutant'\n    });\n    const familleForm = ref({\n      codeFamille: '',\n      nom: '',\n      description: ''\n    });\n    const formMessage = ref('');\n    const formSuccess = ref(false);\n    const showHistoryModal = ref(false);\n    const selectedUser = ref(null);\n    const loading = ref(false);\n\n    // Nouvelles variables pour la gestion des points\n    const showPointsHistoryModal = ref(false);\n    const showPointsAdjustModal = ref(false);\n    const pointsHistory = ref([]);\n    const pointsForm = ref({\n      amount: null,\n      reason: ''\n    });\n\n    // Ajout des variables pour gérer le changement de niveau\n    const showLevelChangeModal = ref(false);\n    const levelChangeData = ref({\n      niveauChanged: false,\n      roleChanged: false,\n      niveauAvant: '',\n      niveauApres: '',\n      roleAvant: '',\n      roleApres: ''\n    });\n    const loadFamilles = async () => {\n      try {\n        const response = await api.get('/familles');\n        familles.value = response.data;\n      } catch (error) {\n        console.error('Erreur lors du chargement des familles:', error);\n      }\n    };\n    const loadUsers = async () => {\n      try {\n        const response = await api.get('/users');\n        users.value = response.data.map(user => ({\n          _id: user._id,\n          nom: user.personne?.nom || 'Non défini',\n          prenom: user.personne?.prenom || 'Non défini',\n          login: user.login || 'Non défini',\n          role: user.role || 'simple',\n          niveau: user.niveau || 'débutant',\n          photo: user.photo || null,\n          points: user.points || 0,\n          genre: user.personne?.genre || 'Non spécifié',\n          famille: user.famille\n        }));\n        console.log('Utilisateurs chargés :', users.value);\n      } catch (error) {\n        console.error('Erreur lors du chargement des utilisateurs:', error);\n      }\n    };\n    const filteredUsers = computed(() => {\n      if (!searchQuery.value) return users.value;\n      const query = searchQuery.value.toLowerCase();\n      return users.value.filter(user => user.login?.toLowerCase().includes(query) || user.nom?.toLowerCase().includes(query) || user.prenom?.toLowerCase().includes(query) || user.famille?.codeFamille?.toLowerCase().includes(query));\n    });\n    const handleImageError = event => {\n      event.target.src = defaultAvatar;\n    };\n    const getRoleBadgeClass = role => {\n      return `role-badge role-${role}`;\n    };\n    const editUser = user => {\n      editingUser.value = user;\n      form.value = {\n        nom: user.nom,\n        prenom: user.prenom,\n        codeFamille: user.famille?.codeFamille || '',\n        login: user.login,\n        role: user.role,\n        niveau: user.niveau,\n        genre: user.genre || 'Non spécifié',\n        password: ''\n      };\n      formMessage.value = '';\n      showModal.value = true;\n    };\n    const openAddUserModal = () => {\n      editingUser.value = null;\n      showModal.value = true;\n      form.value = {\n        nom: '',\n        prenom: '',\n        genre: 'Non spécifié',\n        codeFamille: '',\n        login: '',\n        password: '',\n        role: 'simple',\n        niveau: 'débutant'\n      };\n      formMessage.value = '';\n    };\n    const openAddFamilleModal = () => {\n      showFamilleModal.value = true;\n      familleForm.value = {\n        codeFamille: '',\n        nom: '',\n        description: ''\n      };\n    };\n    const closeFamilleModal = () => {\n      showFamilleModal.value = false;\n    };\n    const saveFamille = async () => {\n      try {\n        await api.post('/familles', familleForm.value);\n        await loadFamilles();\n        closeFamilleModal();\n      } catch (error) {\n        console.error('Erreur lors de la création de la famille:', error);\n      }\n    };\n    const deleteMessage = ref('');\n    const deleteSuccess = ref(false);\n    const closeModal = () => {\n      showModal.value = false;\n      editingUser.value = null;\n    };\n    const confirmDelete = async user => {\n      if (confirm(`Êtes-vous sûr de vouloir supprimer l'utilisateur ${user.login} ?`)) {\n        try {\n          await api.delete(`/users/${user._id}`);\n          deleteMessage.value = 'Utilisateur supprimé avec succès !';\n          deleteSuccess.value = true;\n          await loadUsers();\n          setTimeout(() => {\n            deleteMessage.value = '';\n          }, 2000);\n        } catch (error) {\n          deleteMessage.value = error.response?.data?.message || \"Erreur lors de la suppression de l'utilisateur.\";\n          deleteSuccess.value = false;\n        }\n      }\n    };\n    const saveUser = async () => {\n      try {\n        formMessage.value = '';\n        if (!form.value.password && !editingUser.value) {\n          formMessage.value = 'Le mot de passe est requis pour un nouvel utilisateur';\n          formSuccess.value = false;\n          return;\n        }\n        const userData = {\n          nom: form.value.nom.trim(),\n          prenom: form.value.prenom.trim(),\n          codeFamille: form.value.codeFamille,\n          login: form.value.login.trim(),\n          role: form.value.role,\n          niveau: form.value.niveau,\n          personne: {\n            nom: form.value.nom.trim(),\n            prenom: form.value.prenom.trim(),\n            genre: form.value.genre\n          }\n        };\n        if (!editingUser.value) {\n          userData.password = form.value.password;\n        }\n        let response;\n        if (editingUser.value) {\n          response = await api.put(`/users/${editingUser.value._id}`, userData);\n        } else {\n          response = await api.post('/users', userData);\n        }\n        if (response.data) {\n          formMessage.value = editingUser.value ? 'Utilisateur modifié avec succès !' : 'Utilisateur ajouté avec succès !';\n          formSuccess.value = true;\n          await loadUsers();\n          setTimeout(() => closeModal(), 1500);\n        }\n      } catch (err) {\n        let errorMessage = editingUser.value ? 'Erreur lors de la modification de l\\'utilisateur' : 'Erreur lors de la création de l\\'utilisateur';\n        if (err.response?.status === 404) {\n          errorMessage = 'Erreur de connexion au serveur. Vérifiez que le serveur backend est démarré.';\n        } else if (err.response?.status === 403) {\n          errorMessage = 'Vous n\\'avez pas les droits nécessaires.';\n        } else if (err.response?.data?.message) {\n          errorMessage = err.response.data.message;\n        }\n        formMessage.value = errorMessage;\n        formSuccess.value = false;\n      }\n    };\n    const showHistory = user => {\n      selectedUser.value = user;\n      showHistoryModal.value = true;\n    };\n    const closeHistoryModal = () => {\n      showHistoryModal.value = false;\n    };\n\n    // Nouvelle fonction pour afficher l'historique des points\n    const fetchPointsHistory = async userId => {\n      try {\n        loading.value = true;\n        const response = await api.get(`/history?search=${userId}`);\n        // Filtrer pour ne garder que les actions liées aux points\n        pointsHistory.value = response.data.histories.filter(entry => entry.action === 'ajout_points' && entry.details.userId === userId);\n      } catch (error) {\n        console.error('Erreur lors du chargement de l\\'historique des points:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Fonctions pour gérer l'affichage de l'historique des points\n    const viewPointsHistory = async user => {\n      selectedUser.value = user;\n      await fetchPointsHistory(user._id);\n      showPointsHistoryModal.value = true;\n    };\n    const closePointsHistoryModal = () => {\n      showPointsHistoryModal.value = false;\n      pointsHistory.value = [];\n    };\n\n    // Fonctions pour gérer l'ajustement des points\n    const adjustPoints = user => {\n      selectedUser.value = user;\n      pointsForm.value = {\n        amount: null,\n        reason: ''\n      };\n      showPointsAdjustModal.value = true;\n    };\n    const closePointsAdjustModal = () => {\n      showPointsAdjustModal.value = false;\n    };\n    const savePointsAdjustment = async () => {\n      if (!pointsForm.value.amount) return;\n      try {\n        loading.value = true;\n        const response = await api.post(`/users/${selectedUser.value._id}/points`, {\n          amount: parseFloat(pointsForm.value.amount),\n          reason: pointsForm.value.reason\n        });\n\n        // Mettre à jour les points de l'utilisateur dans la liste\n        const userIndex = users.value.findIndex(u => u._id === selectedUser.value._id);\n        if (userIndex !== -1) {\n          const oldNiveau = users.value[userIndex].niveau;\n          const oldRole = users.value[userIndex].role;\n\n          // Mettre à jour les points\n          users.value[userIndex].points = response.data.points;\n          selectedUser.value.points = response.data.points;\n\n          // Vérifier s'il y a eu changement de niveau ou de rôle\n          if (response.data.niveauChanged || response.data.roleChanged) {\n            // Mettre à jour le niveau et le rôle\n            users.value[userIndex].niveau = response.data.niveau;\n            users.value[userIndex].role = response.data.role;\n            selectedUser.value.niveau = response.data.niveau;\n            selectedUser.value.role = response.data.role;\n\n            // Préparer les données pour le modal de notification\n            levelChangeData.value = {\n              niveauChanged: response.data.niveauChanged,\n              roleChanged: response.data.roleChanged,\n              niveauAvant: oldNiveau,\n              niveauApres: response.data.niveau,\n              roleAvant: oldRole,\n              roleApres: response.data.role\n            };\n\n            // Fermer le modal d'ajustement et afficher celui de notification\n            showPointsAdjustModal.value = false;\n            showLevelChangeModal.value = true;\n          } else {\n            // Rafraîchir l'historique des points et afficher\n            await fetchPointsHistory(selectedUser.value._id);\n            showPointsAdjustModal.value = false;\n            showPointsHistoryModal.value = true;\n          }\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajustement des points:', error);\n        alert('Une erreur est survenue lors de l\\'ajustement des points.');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Fonctions d'aide pour l'affichage\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleString('fr-FR');\n    };\n    const formatAction = action => {\n      const actions = {\n        'ajout_points': 'Ajustement de points',\n        'upgrade_niveau': 'Changement de niveau'\n      };\n      return actions[action] || action;\n    };\n    const formatPointsChange = amount => {\n      if (amount > 0) return `+${amount}`;\n      return amount;\n    };\n    const getPointsClass = amount => {\n      if (amount > 0) return 'points-positive';\n      if (amount < 0) return 'points-negative';\n      return '';\n    };\n\n    // Fonction pour déterminer si un changement de niveau est une progression ou une régression\n    const isLevelUpgrade = (before, after) => {\n      const niveauxOrder = {\n        'débutant': 1,\n        'intermédiaire': 2,\n        'avancé': 3,\n        'expert': 4\n      };\n      return niveauxOrder[after] > niveauxOrder[before];\n    };\n\n    // Fonction pour déterminer si un changement de rôle est une progression ou une régression\n    const isRoleUpgrade = (before, after) => {\n      const rolesOrder = {\n        'visiteur': 1,\n        'simple': 2,\n        'complexe': 3,\n        'admin': 4\n      };\n      return rolesOrder[after] > rolesOrder[before];\n    };\n\n    // Fonction pour fermer le modal de changement de niveau\n    const closeLevelChangeModal = () => {\n      showLevelChangeModal.value = false;\n    };\n    onMounted(() => {\n      loadUsers();\n      loadFamilles();\n    });\n    return {\n      users,\n      familles,\n      searchQuery,\n      filteredUsers,\n      showModal,\n      showFamilleModal,\n      editingUser,\n      defaultAvatar,\n      getPhotoUrl,\n      handleImageError,\n      editUser,\n      openAddUserModal,\n      openAddFamilleModal,\n      closeModal,\n      closeFamilleModal,\n      confirmDelete,\n      saveUser,\n      saveFamille,\n      getRoleBadgeClass,\n      form,\n      familleForm,\n      formMessage,\n      formSuccess,\n      showHistoryModal,\n      selectedUser,\n      showHistory,\n      closeHistoryModal,\n      // Nouvelles variables pour les points\n      showPointsHistoryModal,\n      showPointsAdjustModal,\n      pointsHistory,\n      pointsForm,\n      loading,\n      // Nouvelles variables pour le changement de niveau\n      showLevelChangeModal,\n      levelChangeData,\n      closeLevelChangeModal,\n      // Nouvelles fonctions pour la comparaison\n      isLevelUpgrade,\n      isRoleUpgrade,\n      // Fonctions pour les points\n      viewPointsHistory,\n      closePointsHistoryModal,\n      adjustPoints,\n      closePointsAdjustModal,\n      savePointsAdjustment,\n      formatDate,\n      formatAction,\n      formatPointsChange,\n      getPointsClass\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","AppLayout","api","defaultAvatar","getPhotoUrl","UserHistoryModal","name","components","setup","users","familles","searchQuery","showModal","showFamilleModal","editingUser","form","nom","prenom","genre","codeFamille","login","password","role","niveau","familleForm","description","formMessage","formSuccess","showHistoryModal","selectedUser","loading","showPointsHistoryModal","showPointsAdjustModal","pointsHistory","pointsForm","amount","reason","showLevelChangeModal","levelChangeData","niveauChanged","roleChanged","niveauAvant","niveauApres","roleAvant","roleApres","loadFamilles","response","get","value","data","error","console","loadUsers","map","user","_id","personne","photo","points","famille","log","filteredUsers","query","toLowerCase","filter","includes","handleImageError","event","target","src","getRoleBadgeClass","editUser","openAddUserModal","openAddFamilleModal","closeFamilleModal","saveFamille","post","deleteMessage","deleteSuccess","closeModal","confirmDelete","confirm","delete","setTimeout","message","saveUser","userData","trim","put","err","errorMessage","status","showHistory","closeHistoryModal","fetchPointsHistory","userId","histories","entry","action","details","viewPointsHistory","closePointsHistoryModal","adjustPoints","closePointsAdjustModal","savePointsAdjustment","parseFloat","userIndex","findIndex","u","oldNiveau","oldRole","alert","formatDate","dateString","Date","toLocaleString","formatAction","actions","formatPointsChange","getPointsClass","isLevelUpgrade","before","after","niveauxOrder","isRoleUpgrade","rolesOrder","closeLevelChangeModal"],"sources":["C:\\Users\\benab\\Desktop\\COURS 24_25\\S2\\WEB\\V4\\Projet_WEB_ING1\\frontend\\src\\views\\AdminUsers.vue"],"sourcesContent":["<template>\r\n  <AppLayout>\r\n    <div class=\"admin-users-container\">\r\n      <h1 class=\"page-title\">Gestion des utilisateurs</h1>\r\n\r\n      <div class=\"actions-bar\">\r\n        <div class=\"search-box\">\r\n          <input\r\n              type=\"text\"\r\n              v-model=\"searchQuery\"\r\n              placeholder=\"Rechercher...\"\r\n              class=\"search-input\"\r\n          />\r\n        </div>\r\n        <button @click=\"openAddUserModal\" class=\"add-user-btn\">\r\n          Ajouter un utilisateur\r\n        </button>\r\n      </div>\r\n      <div v-if=\"deleteMessage\" :class=\"{'success-msg': deleteSuccess, 'error-msg': !deleteSuccess}\">\r\n        {{ deleteMessage }}\r\n      </div>\r\n\r\n      <div class=\"users-table\">\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>Photo</th>\r\n            <th>Nom</th>\r\n            <th>Prénom</th>\r\n            <th>Famille</th>\r\n            <th>Login</th>\r\n            <th>Rôle</th>\r\n            <th>Niveau</th>\r\n            <th>Points</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"user in filteredUsers\" :key=\"user._id\">\r\n            <td>\r\n              <img\r\n                  :src=\"getPhotoUrl(user.photo, user._id)\"\r\n                  :alt=\"user.login\"\r\n                  class=\"user-avatar\"\r\n                  @error=\"handleImageError\"\r\n              />\r\n            </td>\r\n            <td>{{ user.nom }}</td>\r\n            <td>{{ user.prenom }}</td>\r\n            <td>{{ user.famille?.codeFamille || '-' }}</td>\r\n            <td>{{ user.login }}</td>\r\n            <td>\r\n                <span :class=\"getRoleBadgeClass(user.role)\">\r\n                  {{ user.role }}\r\n                </span>\r\n            </td>\r\n            <td>{{ user.niveau }}</td>\r\n            <td class=\"points-cell\">\r\n              <span class=\"points-badge\">{{ user.points || 0 }}</span>\r\n              <button @click=\"adjustPoints(user)\" class=\"points-adjust-btn\" title=\"Ajuster les points\">\r\n                <i class=\"fas fa-plus-circle\"></i>\r\n              </button>\r\n            </td>\r\n            <td class=\"actions-cell\">\r\n              <button @click=\"editUser(user)\" class=\"action-btn edit\" title=\"Modifier\">\r\n                <i class=\"fas fa-edit\"></i>\r\n                <span class=\"tooltip\">Modifier</span>\r\n              </button>\r\n              <button @click=\"confirmDelete(user)\" class=\"action-btn delete\" title=\"Supprimer\">\r\n                <i class=\"fas fa-trash\"></i>\r\n                <span class=\"tooltip\">Supprimer</span>\r\n              </button>\r\n              <button @click=\"showHistory(user)\" class=\"btn btn-history\">\r\n                <i class=\"fas fa-history\"></i> Voir historique\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal pour éditer/ajouter un utilisateur -->\r\n    <div v-if=\"showModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>{{ editingUser ? 'Modifier' : 'Ajouter' }} un utilisateur</h2>\r\n        <form @submit.prevent=\"saveUser\">\r\n          <div class=\"form-row\">\r\n            <label>Nom :</label>\r\n            <input v-model=\"form.nom\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Prénom :</label>\r\n            <input v-model=\"form.prenom\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Genre :</label>\r\n            <select v-model=\"form.genre\" required>\r\n              <option value=\"Homme\">Homme</option>\r\n              <option value=\"Femme\">Femme</option>\r\n              <option value=\"Non spécifié\">Non spécifié</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Famille :</label>\r\n            <select v-model=\"form.codeFamille\" required>\r\n              <option value=\"\">Sélectionner une famille</option>\r\n              <option v-for=\"famille in familles\" :key=\"famille._id\" :value=\"famille.codeFamille\">\r\n                {{ famille.codeFamille }}\r\n              </option>\r\n            </select>\r\n            <button type=\"button\" @click=\"openAddFamilleModal\" class=\"add-famille-btn\">\r\n              <i class=\"fas fa-plus\"></i> Nouvelle famille\r\n            </button>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Login :</label>\r\n            <input v-model=\"form.login\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Rôle :</label>\r\n            <select v-model=\"form.role\" required>\r\n              <option value=\"simple\">Simple</option>\r\n              <option value=\"admin\">Admin</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-row\" v-if=\"!editingUser\">\r\n            <label>Mot de passe :</label>\r\n            <input v-model=\"form.password\" type=\"password\" required />\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Niveau :</label>\r\n            <select v-model=\"form.niveau\" required>\r\n              <option value=\"débutant\">Débutant</option>\r\n              <option value=\"intermédiaire\">Intermédiaire</option>\r\n              <option value=\"avancé\">Avancé</option>\r\n              <option value=\"expert\">Expert</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"modal-actions\">\r\n            <button type=\"submit\" class=\"save-btn\">Enregistrer</button>\r\n            <button type=\"button\" @click=\"closeModal\" class=\"cancel-btn\">Annuler</button>\r\n          </div>\r\n        </form>\r\n        <div v-if=\"formMessage\" :class=\"{'success-msg': formSuccess, 'error-msg': !formSuccess}\">{{ formMessage }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal pour ajouter une famille -->\r\n    <div v-if=\"showFamilleModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>Ajouter une famille</h2>\r\n        <form @submit.prevent=\"saveFamille\">\r\n          <div class=\"form-row\">\r\n            <label>Code Famille :</label>\r\n            <input v-model=\"familleForm.codeFamille\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Nom de la famille :</label>\r\n            <input v-model=\"familleForm.nom\" type=\"text\" required placeholder=\"Ex: Famille Dupont\" />\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Description :</label>\r\n            <textarea v-model=\"familleForm.description\" placeholder=\"Description de la famille (optionnelle)\"></textarea>\r\n          </div>\r\n          <div class=\"modal-actions\">\r\n            <button type=\"submit\" class=\"save-btn\">Enregistrer</button>\r\n            <button type=\"button\" @click=\"closeFamilleModal\" class=\"cancel-btn\">Annuler</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <UserHistoryModal\r\n        :show=\"showHistoryModal\"\r\n        :user=\"selectedUser\"\r\n        @close=\"closeHistoryModal\"\r\n    />\r\n\r\n    <!-- Modal pour l'historique des points -->\r\n    <div v-if=\"showPointsHistoryModal\" class=\"modal\">\r\n      <div class=\"modal-content points-history-modal\">\r\n        <div class=\"modal-header\">\r\n          <h2>Historique des points - {{ selectedUser?.login }}</h2>\r\n          <button class=\"close-btn\" @click=\"closePointsHistoryModal\">\r\n            <i class=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"user-points-summary\">\r\n            <p class=\"total-points\">\r\n              Points actuels: <span class=\"points-value\">{{ selectedUser?.points || 0 }}</span>\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"points-history-list\">\r\n            <div v-if=\"pointsHistory.length === 0\" class=\"no-history\">\r\n              Aucun historique de points disponible\r\n            </div>\r\n            <div v-else class=\"points-history-table\">\r\n              <table>\r\n                <thead>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Action</th>\r\n                  <th>Montant</th>\r\n                  <th>Avant</th>\r\n                  <th>Après</th>\r\n                  <th>Raison</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr v-for=\"(entry, index) in pointsHistory\" :key=\"index\">\r\n                  <td>{{ formatDate(entry.date) }}</td>\r\n                  <td>{{ formatAction(entry.action) }}</td>\r\n                  <td :class=\"getPointsClass(entry.details.montant)\">\r\n                    {{ formatPointsChange(entry.details.montant) }}\r\n                  </td>\r\n                  <td>{{ entry.details.pointsAvant }}</td>\r\n                  <td>{{ entry.details.pointsApres }}</td>\r\n                  <td>{{ entry.details.raison }}</td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal pour ajuster les points -->\r\n    <div v-if=\"showPointsAdjustModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h2>Ajuster les points - {{ selectedUser?.login }}</h2>\r\n          <button class=\"close-btn\" @click=\"closePointsAdjustModal\">\r\n            <i class=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"points-info\">\r\n            <p>Points actuels: <strong>{{ selectedUser?.points || 0 }}</strong></p>\r\n            <p>Niveau actuel: <strong>{{ selectedUser?.niveau }}</strong></p>\r\n            <p>Rôle actuel: <strong>{{ selectedUser?.role }}</strong></p>\r\n          </div>\r\n          <form @submit.prevent=\"savePointsAdjustment\">\r\n            <div class=\"form-row\">\r\n              <label>Montant des points:</label>\r\n              <input\r\n                  type=\"number\"\r\n                  v-model=\"pointsForm.amount\"\r\n                  step=\"0.5\"\r\n                  placeholder=\"Entrez un nombre positif ou négatif\"\r\n                  required\r\n              />\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <label>Raison:</label>\r\n              <input\r\n                  type=\"text\"\r\n                  v-model=\"pointsForm.reason\"\r\n                  placeholder=\"Ex: Participation à un événement\"\r\n              />\r\n            </div>\r\n            <div class=\"modal-actions\">\r\n              <button type=\"submit\" class=\"save-btn\" :disabled=\"loading\">\r\n                <span v-if=\"loading\">Traitement...</span>\r\n                <span v-else>Confirmer</span>\r\n              </button>\r\n              <button type=\"button\" @click=\"closePointsAdjustModal\" class=\"cancel-btn\">Annuler</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal de notification pour changement de niveau/rôle -->\r\n    <div v-if=\"showLevelChangeModal\" class=\"modal\">\r\n      <div class=\"modal-content level-change-modal\">\r\n        <div class=\"modal-header\">\r\n          <h2>Évolution de l'utilisateur</h2>\r\n          <button class=\"close-btn\" @click=\"closeLevelChangeModal\">\r\n            <i class=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"level-change-content\">\r\n            <div class=\"user-info-header\">\r\n              <span class=\"user-login\">{{ selectedUser?.login }}</span>\r\n            </div>\r\n\r\n            <div v-if=\"levelChangeData.niveauChanged\" class=\"change-item\">\r\n              <div class=\"change-label\">Changement de niveau</div>\r\n              <div class=\"change-details\">\r\n                <div class=\"before-change\">\r\n                  <span class=\"label\">Avant:</span>\r\n                  <span class=\"value\">{{ levelChangeData.niveauAvant }}</span>\r\n                </div>\r\n                <div class=\"after-change\">\r\n                  <span class=\"label\">Après:</span>\r\n                  <span class=\"value highlight\">{{ levelChangeData.niveauApres }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div v-if=\"levelChangeData.roleChanged\" class=\"change-item\">\r\n              <div class=\"change-label\">Changement de rôle</div>\r\n              <div class=\"change-details\">\r\n                <div class=\"before-change\">\r\n                  <span class=\"label\">Avant:</span>\r\n                  <span class=\"value\">{{ levelChangeData.roleAvant }}</span>\r\n                </div>\r\n                <div class=\"after-change\">\r\n                  <span class=\"label\">Après:</span>\r\n                  <span class=\"value highlight\">{{ levelChangeData.roleApres }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"points-summary\">\r\n              <div class=\"points-label\">Points actuels:</div>\r\n              <div class=\"points-value\">{{ selectedUser?.points }}</div>\r\n            </div>\r\n\r\n            <div class=\"congratulations-message\">\r\n              <p v-if=\"levelChangeData.niveauChanged || levelChangeData.roleChanged\">\r\n                <template v-if=\"isLevelUpgrade(levelChangeData.niveauAvant, levelChangeData.niveauApres) || isRoleUpgrade(levelChangeData.roleAvant, levelChangeData.roleApres)\">\r\n                  🎉 Félicitations ! L'utilisateur a progressé !\r\n                </template>\r\n                <template v-else>\r\n                  ⚠️ Attention ! L'utilisateur a régressé suite à la perte de points.\r\n                </template>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button class=\"btn primary\" @click=\"closeLevelChangeModal\">Fermer</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </AppLayout>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\r\nimport api from '@/services/api';\r\nimport defaultAvatar from '@/assets/default-avatar.png';\r\nimport { getPhotoUrl } from '@/utils/photo';\r\nimport UserHistoryModal from '@/components/UserHistoryModal.vue';\r\n\r\nexport default {\r\n  name: 'AdminUsers',\r\n  components: {\r\n    AppLayout,\r\n    UserHistoryModal\r\n  },\r\n  setup() {\r\n    const users = ref([]);\r\n    const familles = ref([]);\r\n    const searchQuery = ref('');\r\n    const showModal = ref(false);\r\n    const showFamilleModal = ref(false);\r\n    const editingUser = ref(null);\r\n    const form = ref({\r\n      nom: '',\r\n      prenom: '',\r\n      genre: 'Non spécifié',\r\n      codeFamille: '',\r\n      login: '',\r\n      password: '',\r\n      role: 'simple',\r\n      niveau: 'débutant'\r\n    });\r\n    const familleForm = ref({\r\n      codeFamille: '',\r\n      nom: '',\r\n      description: ''\r\n    });\r\n    const formMessage = ref('');\r\n    const formSuccess = ref(false);\r\n    const showHistoryModal = ref(false);\r\n    const selectedUser = ref(null);\r\n    const loading = ref(false);\r\n\r\n    // Nouvelles variables pour la gestion des points\r\n    const showPointsHistoryModal = ref(false);\r\n    const showPointsAdjustModal = ref(false);\r\n    const pointsHistory = ref([]);\r\n    const pointsForm = ref({\r\n      amount: null,\r\n      reason: ''\r\n    });\r\n\r\n    // Ajout des variables pour gérer le changement de niveau\r\n    const showLevelChangeModal = ref(false);\r\n    const levelChangeData = ref({\r\n      niveauChanged: false,\r\n      roleChanged: false,\r\n      niveauAvant: '',\r\n      niveauApres: '',\r\n      roleAvant: '',\r\n      roleApres: ''\r\n    });\r\n\r\n    const loadFamilles = async () => {\r\n      try {\r\n        const response = await api.get('/familles');\r\n        familles.value = response.data;\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des familles:', error);\r\n      }\r\n    };\r\n\r\n    const loadUsers = async () => {\r\n      try {\r\n        const response = await api.get('/users');\r\n        users.value = response.data.map(user => ({\r\n          _id: user._id,\r\n          nom: user.personne?.nom || 'Non défini',\r\n          prenom: user.personne?.prenom || 'Non défini',\r\n          login: user.login || 'Non défini',\r\n          role: user.role || 'simple',\r\n          niveau: user.niveau || 'débutant',\r\n          photo: user.photo || null,\r\n          points: user.points || 0,\r\n          genre: user.personne?.genre || 'Non spécifié',\r\n          famille: user.famille\r\n        }));\r\n        console.log('Utilisateurs chargés :', users.value);\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des utilisateurs:', error);\r\n      }\r\n    };\r\n\r\n    const filteredUsers = computed(() => {\r\n      if (!searchQuery.value) return users.value;\r\n      const query = searchQuery.value.toLowerCase();\r\n      return users.value.filter(user =>\r\n          user.login?.toLowerCase().includes(query) ||\r\n          user.nom?.toLowerCase().includes(query) ||\r\n          user.prenom?.toLowerCase().includes(query) ||\r\n          user.famille?.codeFamille?.toLowerCase().includes(query)\r\n      );\r\n    });\r\n\r\n    const handleImageError = (event) => {\r\n      event.target.src = defaultAvatar;\r\n    };\r\n\r\n    const getRoleBadgeClass = (role) => {\r\n      return `role-badge role-${role}`;\r\n    };\r\n\r\n    const editUser = (user) => {\r\n      editingUser.value = user;\r\n      form.value = {\r\n        nom: user.nom,\r\n        prenom: user.prenom,\r\n        codeFamille: user.famille?.codeFamille || '',\r\n        login: user.login,\r\n        role: user.role,\r\n        niveau: user.niveau,\r\n        genre: user.genre || 'Non spécifié',\r\n        password: ''\r\n      };\r\n      formMessage.value = '';\r\n      showModal.value = true;\r\n    };\r\n\r\n    const openAddUserModal = () => {\r\n      editingUser.value = null;\r\n      showModal.value = true;\r\n      form.value = {\r\n        nom: '',\r\n        prenom: '',\r\n        genre: 'Non spécifié',\r\n        codeFamille: '',\r\n        login: '',\r\n        password: '',\r\n        role: 'simple',\r\n        niveau: 'débutant'\r\n      };\r\n      formMessage.value = '';\r\n    };\r\n\r\n    const openAddFamilleModal = () => {\r\n      showFamilleModal.value = true;\r\n      familleForm.value = {\r\n        codeFamille: '',\r\n        nom: '',\r\n        description: ''\r\n      };\r\n    };\r\n\r\n    const closeFamilleModal = () => {\r\n      showFamilleModal.value = false;\r\n    };\r\n\r\n    const saveFamille = async () => {\r\n      try {\r\n        await api.post('/familles', familleForm.value);\r\n        await loadFamilles();\r\n        closeFamilleModal();\r\n      } catch (error) {\r\n        console.error('Erreur lors de la création de la famille:', error);\r\n      }\r\n    };\r\n\r\n    const deleteMessage = ref('');\r\n    const deleteSuccess = ref(false);\r\n\r\n    const closeModal = () => {\r\n      showModal.value = false;\r\n      editingUser.value = null;\r\n    };\r\n\r\n    const confirmDelete = async (user) => {\r\n      if (confirm(`Êtes-vous sûr de vouloir supprimer l'utilisateur ${user.login} ?`)) {\r\n        try {\r\n          await api.delete(`/users/${user._id}`);\r\n          deleteMessage.value = 'Utilisateur supprimé avec succès !';\r\n          deleteSuccess.value = true;\r\n          await loadUsers();\r\n          setTimeout(() => {\r\n            deleteMessage.value = '';\r\n          }, 2000);\r\n        } catch (error) {\r\n          deleteMessage.value = error.response?.data?.message || \"Erreur lors de la suppression de l'utilisateur.\";\r\n          deleteSuccess.value = false;\r\n        }\r\n      }\r\n    };\r\n\r\n    const saveUser = async () => {\r\n      try {\r\n        formMessage.value = '';\r\n\r\n        if (!form.value.password && !editingUser.value) {\r\n          formMessage.value = 'Le mot de passe est requis pour un nouvel utilisateur';\r\n          formSuccess.value = false;\r\n          return;\r\n        }\r\n\r\n        const userData = {\r\n          nom: form.value.nom.trim(),\r\n          prenom: form.value.prenom.trim(),\r\n          codeFamille: form.value.codeFamille,\r\n          login: form.value.login.trim(),\r\n          role: form.value.role,\r\n          niveau: form.value.niveau,\r\n          personne: {\r\n            nom: form.value.nom.trim(),\r\n            prenom: form.value.prenom.trim(),\r\n            genre: form.value.genre\r\n          }\r\n        };\r\n\r\n        if (!editingUser.value) {\r\n          userData.password = form.value.password;\r\n        }\r\n\r\n        let response;\r\n        if (editingUser.value) {\r\n          response = await api.put(`/users/${editingUser.value._id}`, userData);\r\n        } else {\r\n          response = await api.post('/users', userData);\r\n        }\r\n\r\n        if (response.data) {\r\n          formMessage.value = editingUser.value ?\r\n              'Utilisateur modifié avec succès !' :\r\n              'Utilisateur ajouté avec succès !';\r\n          formSuccess.value = true;\r\n          await loadUsers();\r\n          setTimeout(() => closeModal(), 1500);\r\n        }\r\n      } catch (err) {\r\n        let errorMessage = editingUser.value ?\r\n            'Erreur lors de la modification de l\\'utilisateur' :\r\n            'Erreur lors de la création de l\\'utilisateur';\r\n\r\n        if (err.response?.status === 404) {\r\n          errorMessage = 'Erreur de connexion au serveur. Vérifiez que le serveur backend est démarré.';\r\n        } else if (err.response?.status === 403) {\r\n          errorMessage = 'Vous n\\'avez pas les droits nécessaires.';\r\n        } else if (err.response?.data?.message) {\r\n          errorMessage = err.response.data.message;\r\n        }\r\n\r\n        formMessage.value = errorMessage;\r\n        formSuccess.value = false;\r\n      }\r\n    };\r\n\r\n    const showHistory = (user) => {\r\n      selectedUser.value = user;\r\n      showHistoryModal.value = true;\r\n    };\r\n\r\n    const closeHistoryModal = () => {\r\n      showHistoryModal.value = false;\r\n    };\r\n\r\n    // Nouvelle fonction pour afficher l'historique des points\r\n    const fetchPointsHistory = async (userId) => {\r\n      try {\r\n        loading.value = true;\r\n        const response = await api.get(`/history?search=${userId}`);\r\n        // Filtrer pour ne garder que les actions liées aux points\r\n        pointsHistory.value = response.data.histories.filter(\r\n            entry => entry.action === 'ajout_points' &&\r\n                entry.details.userId === userId\r\n        );\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement de l\\'historique des points:', error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // Fonctions pour gérer l'affichage de l'historique des points\r\n    const viewPointsHistory = async (user) => {\r\n      selectedUser.value = user;\r\n      await fetchPointsHistory(user._id);\r\n      showPointsHistoryModal.value = true;\r\n    };\r\n\r\n    const closePointsHistoryModal = () => {\r\n      showPointsHistoryModal.value = false;\r\n      pointsHistory.value = [];\r\n    };\r\n\r\n    // Fonctions pour gérer l'ajustement des points\r\n    const adjustPoints = (user) => {\r\n      selectedUser.value = user;\r\n      pointsForm.value = {\r\n        amount: null,\r\n        reason: ''\r\n      };\r\n      showPointsAdjustModal.value = true;\r\n    };\r\n\r\n    const closePointsAdjustModal = () => {\r\n      showPointsAdjustModal.value = false;\r\n    };\r\n\r\n    const savePointsAdjustment = async () => {\r\n      if (!pointsForm.value.amount) return;\r\n\r\n      try {\r\n        loading.value = true;\r\n\r\n        const response = await api.post(`/users/${selectedUser.value._id}/points`, {\r\n          amount: parseFloat(pointsForm.value.amount),\r\n          reason: pointsForm.value.reason\r\n        });\r\n\r\n        // Mettre à jour les points de l'utilisateur dans la liste\r\n        const userIndex = users.value.findIndex(u => u._id === selectedUser.value._id);\r\n        if (userIndex !== -1) {\r\n          const oldNiveau = users.value[userIndex].niveau;\r\n          const oldRole = users.value[userIndex].role;\r\n\r\n          // Mettre à jour les points\r\n          users.value[userIndex].points = response.data.points;\r\n          selectedUser.value.points = response.data.points;\r\n\r\n          // Vérifier s'il y a eu changement de niveau ou de rôle\r\n          if (response.data.niveauChanged || response.data.roleChanged) {\r\n            // Mettre à jour le niveau et le rôle\r\n            users.value[userIndex].niveau = response.data.niveau;\r\n            users.value[userIndex].role = response.data.role;\r\n            selectedUser.value.niveau = response.data.niveau;\r\n            selectedUser.value.role = response.data.role;\r\n\r\n            // Préparer les données pour le modal de notification\r\n            levelChangeData.value = {\r\n              niveauChanged: response.data.niveauChanged,\r\n              roleChanged: response.data.roleChanged,\r\n              niveauAvant: oldNiveau,\r\n              niveauApres: response.data.niveau,\r\n              roleAvant: oldRole,\r\n              roleApres: response.data.role\r\n            };\r\n\r\n            // Fermer le modal d'ajustement et afficher celui de notification\r\n            showPointsAdjustModal.value = false;\r\n            showLevelChangeModal.value = true;\r\n          } else {\r\n            // Rafraîchir l'historique des points et afficher\r\n            await fetchPointsHistory(selectedUser.value._id);\r\n            showPointsAdjustModal.value = false;\r\n            showPointsHistoryModal.value = true;\r\n          }\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Erreur lors de l\\'ajustement des points:', error);\r\n        alert('Une erreur est survenue lors de l\\'ajustement des points.');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // Fonctions d'aide pour l'affichage\r\n    const formatDate = (dateString) => {\r\n      return new Date(dateString).toLocaleString('fr-FR');\r\n    };\r\n\r\n    const formatAction = (action) => {\r\n      const actions = {\r\n        'ajout_points': 'Ajustement de points',\r\n        'upgrade_niveau': 'Changement de niveau'\r\n      };\r\n      return actions[action] || action;\r\n    };\r\n\r\n    const formatPointsChange = (amount) => {\r\n      if (amount > 0) return `+${amount}`;\r\n      return amount;\r\n    };\r\n\r\n    const getPointsClass = (amount) => {\r\n      if (amount > 0) return 'points-positive';\r\n      if (amount < 0) return 'points-negative';\r\n      return '';\r\n    };\r\n\r\n    // Fonction pour déterminer si un changement de niveau est une progression ou une régression\r\n    const isLevelUpgrade = (before, after) => {\r\n      const niveauxOrder = {\r\n        'débutant': 1,\r\n        'intermédiaire': 2,\r\n        'avancé': 3,\r\n        'expert': 4\r\n      };\r\n      return niveauxOrder[after] > niveauxOrder[before];\r\n    };\r\n\r\n    // Fonction pour déterminer si un changement de rôle est une progression ou une régression\r\n    const isRoleUpgrade = (before, after) => {\r\n      const rolesOrder = {\r\n        'visiteur': 1,\r\n        'simple': 2,\r\n        'complexe': 3,\r\n        'admin': 4\r\n      };\r\n      return rolesOrder[after] > rolesOrder[before];\r\n    };\r\n\r\n    // Fonction pour fermer le modal de changement de niveau\r\n    const closeLevelChangeModal = () => {\r\n      showLevelChangeModal.value = false;\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadUsers();\r\n      loadFamilles();\r\n    });\r\n\r\n    return {\r\n      users,\r\n      familles,\r\n      searchQuery,\r\n      filteredUsers,\r\n      showModal,\r\n      showFamilleModal,\r\n      editingUser,\r\n      defaultAvatar,\r\n      getPhotoUrl,\r\n      handleImageError,\r\n      editUser,\r\n      openAddUserModal,\r\n      openAddFamilleModal,\r\n      closeModal,\r\n      closeFamilleModal,\r\n      confirmDelete,\r\n      saveUser,\r\n      saveFamille,\r\n      getRoleBadgeClass,\r\n      form,\r\n      familleForm,\r\n      formMessage,\r\n      formSuccess,\r\n      showHistoryModal,\r\n      selectedUser,\r\n      showHistory,\r\n      closeHistoryModal,\r\n\r\n      // Nouvelles variables pour les points\r\n      showPointsHistoryModal,\r\n      showPointsAdjustModal,\r\n      pointsHistory,\r\n      pointsForm,\r\n      loading,\r\n\r\n      // Nouvelles variables pour le changement de niveau\r\n      showLevelChangeModal,\r\n      levelChangeData,\r\n      closeLevelChangeModal,\r\n\r\n      // Nouvelles fonctions pour la comparaison\r\n      isLevelUpgrade,\r\n      isRoleUpgrade,\r\n\r\n      // Fonctions pour les points\r\n      viewPointsHistory,\r\n      closePointsHistoryModal,\r\n      adjustPoints,\r\n      closePointsAdjustModal,\r\n      savePointsAdjustment,\r\n      formatDate,\r\n      formatAction,\r\n      formatPointsChange,\r\n      getPointsClass\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-users-container {\r\n  padding: 15px;\r\n}\r\n\r\n.page-title {\r\n  color: #2c5038;\r\n  margin-bottom: 20px;\r\n  font-size: 1.8rem;\r\n}\r\n\r\n.actions-bar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.search-input {\r\n  padding: 6px 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  width: 250px;\r\n}\r\n\r\n.add-user-btn {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  padding: 6px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.users-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  margin-top: 20px;\r\n}\r\n\r\n.users-table table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  table-layout: fixed;\r\n}\r\n\r\n.users-table th, .users-table td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.users-table th {\r\n  background-color: #f8fafc;\r\n  font-weight: 600;\r\n  color: #2c5038;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n}\r\n\r\n.users-table tbody tr:hover {\r\n  background-color: #f1f5f9;\r\n}\r\n\r\n.user-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 2px solid #4a7c59;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* Ajustement des largeurs de colonnes */\r\n.users-table th:nth-child(1), .users-table td:nth-child(1) { width: 60px; }  /* Photo */\r\n.users-table th:nth-child(2), .users-table td:nth-child(2) { width: 12%; }   /* Nom */\r\n.users-table th:nth-child(3), .users-table td:nth-child(3) { width: 12%; }   /* Prénom */\r\n.users-table th:nth-child(4), .users-table td:nth-child(4) { width: 10%; }   /* Famille */\r\n.users-table th:nth-child(5), .users-table td:nth-child(5) { width: 12%; }   /* Login */\r\n.users-table th:nth-child(6), .users-table td:nth-child(6) { width: 8%; }    /* Rôle */\r\n.users-table th:nth-child(7), .users-table td:nth-child(7) { width: 12%; }   /* Niveau */\r\n.users-table th:nth-child(8), .users-table td:nth-child(8) { width: 8%; }    /* Points */\r\n.users-table th:nth-child(9), .users-table td:nth-child(9) { width: 16%; }   /* Actions */\r\n\r\n/* Style des badges de rôle */\r\n.role-badge {\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 0.8rem;\r\n  font-weight: 500;\r\n  text-transform: capitalize;\r\n  display: inline-block;\r\n}\r\n\r\n.role-admin {\r\n  background-color: #fee2e2;\r\n  color: #b91c1c;\r\n}\r\n\r\n.role-simple {\r\n  background-color: #e0f2fe;\r\n  color: #0369a1;\r\n}\r\n\r\n.role-complexe {\r\n  background-color: #dcfce7;\r\n  color: #166534;\r\n}\r\n\r\n.role-visiteur {\r\n  background-color: #fef3c7;\r\n  color: #92400e;\r\n}\r\n\r\n/* Messages de succès et d'erreur */\r\n.success-msg, .error-msg {\r\n  padding: 10px 15px;\r\n  margin: 10px 0;\r\n  border-radius: 5px;\r\n  font-weight: 500;\r\n}\r\n\r\n.success-msg {\r\n  background-color: #dcfce7;\r\n  color: #166534;\r\n  border: 1px solid #86efac;\r\n}\r\n\r\n.error-msg {\r\n  background-color: #fee2e2;\r\n  color: #b91c1c;\r\n  border: 1px solid #fca5a5;\r\n}\r\n\r\n.actions-cell {\r\n  display: flex;\r\n  gap: 8px;\r\n  justify-content: flex-start;\r\n  padding: 4px !important;\r\n}\r\n\r\n.action-btn {\r\n  width: 28px;\r\n  height: 28px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.action-btn i {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.action-btn.edit {\r\n  background-color: #2c5038;\r\n  color: white;\r\n}\r\n\r\n.action-btn.delete {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.action-btn.edit:hover {\r\n  background-color: #1e3725;\r\n}\r\n\r\n.action-btn.delete:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.action-btn .tooltip {\r\n  position: absolute;\r\n  bottom: -30px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: #333;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 0.8rem;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transition: all 0.3s ease;\r\n  white-space: nowrap;\r\n  z-index: 1000;\r\n}\r\n\r\n.action-btn:hover .tooltip {\r\n  opacity: 1;\r\n  visibility: visible;\r\n  bottom: -35px;\r\n}\r\n\r\n/* Ajout d'une petite flèche au tooltip */\r\n.action-btn .tooltip::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -4px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border-width: 0 4px 4px 4px;\r\n  border-style: solid;\r\n  border-color: transparent transparent #333 transparent;\r\n}\r\n\r\n/* Style pour la colonne Actions dans le header */\r\nth:last-child {\r\n  text-align: center !important;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  min-width: 400px;\r\n}\r\n\r\n.modal-actions {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #9e9e9e;\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 12px;\r\n}\r\n.form-row label {\r\n  font-weight: 500;\r\n  margin-bottom: 4px;\r\n  color: #2c5038;\r\n}\r\n.form-row input, .form-row select {\r\n  padding: 7px 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n.avatar-homme {\r\n  border: 3px solid #007bff; /* Bleu */\r\n  padding: 2px;\r\n}\r\n\r\n.avatar-femme {\r\n  border: 3px solid #ff9800; /* Orange */\r\n  padding: 2px;\r\n}\r\n\r\n.avatar-neutre {\r\n  border: 3px solid #ccc; /* Gris */\r\n  padding: 2px;\r\n}\r\n\r\n.btn-history {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  transition: background-color 0.3s;\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.btn-history:hover {\r\n  background-color: #1a3022;\r\n}\r\n\r\n.btn-history i {\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.add-famille-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 5px;\r\n  font-size: 0.9rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n}\r\n\r\n.add-famille-btn i {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.add-famille-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.points-cell {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.points-badge {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  min-width: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.points-adjust-btn {\r\n  background: none;\r\n  border: none;\r\n  color: #2c5038;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  padding: 2px;\r\n  opacity: 0.7;\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.points-adjust-btn:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.points-history-modal {\r\n  max-width: 800px;\r\n  width: 90%;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border-radius: 8px 8px 0 0;\r\n}\r\n\r\n.modal-header h2 {\r\n  margin: 0;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.user-points-summary {\r\n  background-color: #f8f9fa;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.total-points {\r\n  font-size: 1.1rem;\r\n  margin: 0;\r\n}\r\n\r\n.points-value {\r\n  font-weight: bold;\r\n  color: #2c5038;\r\n}\r\n\r\n.points-history-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n.points-history-table table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.points-history-table th,\r\n.points-history-table td {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  text-align: left;\r\n}\r\n\r\n.points-history-table th {\r\n  background-color: #f8f9fa;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.points-positive {\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n\r\n.points-negative {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n\r\n.no-history {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.level-change-modal {\r\n  max-width: 400px;\r\n  width: 90%;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border-radius: 8px 8px 0 0;\r\n}\r\n\r\n.modal-header h2 {\r\n  margin: 0;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.level-change-content {\r\n  padding: 20px;\r\n}\r\n\r\n.user-info-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-login {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.change-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.change-label {\r\n  font-weight: bold;\r\n}\r\n\r\n.change-details {\r\n  margin-top: 5px;\r\n}\r\n\r\n.before-change {\r\n  margin-right: 10px;\r\n}\r\n\r\n.after-change {\r\n  font-weight: bold;\r\n}\r\n\r\n.highlight {\r\n  font-weight: bold;\r\n  color: #2c5038;\r\n}\r\n\r\n.points-summary {\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.points-label {\r\n  font-weight: bold;\r\n}\r\n\r\n.congratulations-message {\r\n  text-align: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.modal-footer {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.btn {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn:hover {\r\n  background-color: #1a3022;\r\n}\r\n\r\n.primary {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.primary:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}