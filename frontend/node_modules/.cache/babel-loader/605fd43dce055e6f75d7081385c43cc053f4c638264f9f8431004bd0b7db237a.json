{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\nimport api from '@/services/api';\nexport default {\n  name: 'AdminFamilies',\n  components: {\n    AppLayout\n  },\n  setup() {\n    const families = ref([]);\n    const searchQuery = ref('');\n    const showModal = ref(false);\n    const editingFamille = ref(null);\n    const form = ref({\n      codeFamille: '',\n      nom: '',\n      description: ''\n    });\n    const formMessage = ref('');\n    const formSuccess = ref(false);\n    const message = ref('');\n    const messageSuccess = ref(false);\n    const showMembersModal = ref(false);\n    const selectedFamille = ref(null);\n    const familyMembers = ref([]);\n\n    // Compteur de membres valides par famille\n    const membresValidesCount = ref({});\n\n    // Nouveaux états pour l'ajout de membres\n    const showAddMemberModal = ref(false);\n    const memberSearchQuery = ref('');\n    const searchResults = ref([]);\n    const selectedUser = ref(null);\n    const newPersonForm = ref({\n      nom: '',\n      prenom: '',\n      genre: 'Non spécifié'\n    });\n    const memberMessage = ref('');\n    const memberSuccess = ref(false);\n\n    // Recherche de membres dans la famille\n    const memberFilterQuery = ref('');\n    const filteredFamilyMembers = computed(() => {\n      if (!memberFilterQuery.value.trim()) {\n        return familyMembers.value;\n      }\n      const query = memberFilterQuery.value.toLowerCase().trim();\n      return familyMembers.value.filter(member => member.nom?.toLowerCase().includes(query) || member.prenom?.toLowerCase().includes(query) || member.login?.toLowerCase().includes(query) || member.role?.toLowerCase().includes(query) || member.niveau?.toLowerCase().includes(query));\n    });\n\n    // Notifications\n    const showNotification = ref(false);\n    const notificationMessage = ref('');\n    const notificationType = ref('info'); // 'success', 'error', 'warning', 'info'\n    const notificationDuration = ref(3000);\n    const notificationHtmlContent = ref('');\n    const notificationActions = ref([]);\n    const displayNotification = (message, type = 'info', duration = 3000, htmlContent = '', actions = null) => {\n      notificationMessage.value = message;\n      notificationType.value = type;\n      notificationDuration.value = duration;\n      notificationHtmlContent.value = htmlContent;\n      notificationActions.value = actions || [];\n      showNotification.value = true;\n\n      // Fermer automatiquement après la durée spécifiée\n      if (duration > 0) {\n        setTimeout(() => {\n          showNotification.value = false;\n        }, duration);\n      }\n    };\n    const loadFamilies = async () => {\n      try {\n        const response = await api.get('/familles');\n        families.value = response.data;\n\n        // Charger les compteurs de membres valides\n        await loadMembresValidesCount();\n      } catch (error) {\n        console.error('Erreur lors du chargement des familles:', error);\n        message.value = 'Erreur lors du chargement des familles';\n        messageSuccess.value = false;\n      }\n    };\n    const loadMembresValidesCount = async () => {\n      try {\n        const response = await api.get('/familles/membres-count');\n        membresValidesCount.value = response.data;\n      } catch (error) {\n        console.error('Erreur lors du chargement des compteurs de membres:', error);\n      }\n    };\n    const filteredFamilies = computed(() => {\n      if (!searchQuery.value) return families.value;\n      const query = searchQuery.value.toLowerCase();\n      return families.value.filter(famille => famille.codeFamille?.toLowerCase().includes(query) || famille.nom?.toLowerCase().includes(query) || famille.description?.toLowerCase().includes(query));\n    });\n    const formatDate = dateString => {\n      if (!dateString) return '-';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('fr-FR');\n    };\n    const getGenderIcon = genre => {\n      switch (genre) {\n        case 'Homme':\n          return 'fas fa-male';\n        case 'Femme':\n          return 'fas fa-female';\n        default:\n          return 'fas fa-user';\n      }\n    };\n    const editFamille = famille => {\n      editingFamille.value = famille;\n      form.value = {\n        codeFamille: famille.codeFamille,\n        nom: famille.nom || '',\n        description: famille.description || ''\n      };\n      formMessage.value = '';\n      showModal.value = true;\n    };\n    const openAddFamilleModal = () => {\n      editingFamille.value = null;\n      showModal.value = true;\n      form.value = {\n        codeFamille: '',\n        nom: '',\n        description: ''\n      };\n      formMessage.value = '';\n    };\n    const closeModal = () => {\n      showModal.value = false;\n      editingFamille.value = null;\n    };\n    const saveFamille = async () => {\n      try {\n        formMessage.value = '';\n        const familleData = {\n          codeFamille: form.value.codeFamille.trim(),\n          nom: form.value.nom.trim(),\n          description: form.value.description?.trim() || ''\n        };\n        let response;\n        if (editingFamille.value) {\n          response = await api.put(`/familles/${editingFamille.value._id}`, familleData);\n        } else {\n          response = await api.post('/familles', familleData);\n        }\n        if (response.data) {\n          formMessage.value = editingFamille.value ? 'Famille modifiée avec succès !' : 'Famille ajoutée avec succès !';\n          formSuccess.value = true;\n          await loadFamilies();\n          setTimeout(() => closeModal(), 1500);\n        }\n      } catch (err) {\n        let errorMessage = editingFamille.value ? 'Erreur lors de la modification de la famille' : 'Erreur lors de la création de la famille';\n        if (err.response?.data?.message) {\n          errorMessage = err.response.data.message;\n        }\n        formMessage.value = errorMessage;\n        formSuccess.value = false;\n      }\n    };\n    const confirmDelete = async famille => {\n      // Actions pour les boutons\n      const actions = [{\n        text: 'Oui, supprimer',\n        type: 'confirm',\n        handler: async () => {\n          showNotification.value = false;\n          try {\n            // D'abord vérifier si la famille a des membres\n            const response = await api.get(`/familles/${famille._id}/membres`);\n            const membres = response.data;\n\n            // Choix de suppression selon les cas\n            if (membres.length > 0) {\n              // Proposer des options si la famille a des membres\n              const optionsActions = [{\n                text: 'Supprimer tout',\n                type: 'danger',\n                handler: async () => {\n                  showNotification.value = false;\n                  // Supprimer la famille ET les personnes\n                  await deleteFamilleWithOptions(famille, true, false);\n                }\n              }, {\n                text: 'Conserver les personnes',\n                type: 'warning',\n                handler: async () => {\n                  showNotification.value = false;\n                  // Supprimer la famille mais conserver les personnes\n                  await deleteFamilleWithOptions(famille, true, true);\n                }\n              }, {\n                text: 'Annuler',\n                type: 'cancel',\n                handler: () => {\n                  showNotification.value = false;\n                }\n              }];\n              displayNotification(`La famille ${famille.codeFamille} contient ${membres.length} membre(s). Souhaitez-vous supprimer également les personnes associées?`, 'warning', 0, '', optionsActions);\n            } else {\n              // Pas de membres, supprimer directement\n              await deleteFamilleWithOptions(famille, false, true);\n            }\n          } catch (error) {\n            console.error('Erreur lors de la suppression:', error);\n            if (error.response?.data?.hasUsers) {\n              // Si la famille a des utilisateurs, proposer la suppression forcée\n              const forceActions = [{\n                text: 'Forcer la suppression',\n                type: 'warning',\n                handler: async () => {\n                  showNotification.value = false;\n                  // Suppression forcée\n                  await deleteFamilleWithOptions(famille, true, true);\n                }\n              }, {\n                text: 'Annuler',\n                type: 'cancel',\n                handler: () => {\n                  showNotification.value = false;\n                }\n              }];\n              displayNotification(`La famille ne peut pas être supprimée car elle contient des utilisateurs associés (${error.response.data.count}). Voulez-vous tout de même forcer la suppression ? Les utilisateurs seront dissociés de cette famille.`, 'error', 0, '', forceActions);\n            } else {\n              displayNotification(error.response?.data?.message || \"Erreur lors de la suppression de la famille.\", 'error', 3000);\n            }\n          }\n        }\n      }, {\n        text: 'Annuler',\n        type: 'cancel',\n        handler: () => {\n          showNotification.value = false;\n        }\n      }];\n\n      // Affichage du choix de confirmation modal personnalisé\n      displayNotification(`Êtes-vous sûr de vouloir supprimer la famille ${famille.codeFamille} ?`, 'warning', 0,\n      // 0 = ne pas fermer automatiquement\n      '', actions);\n    };\n    const deleteFamilleWithOptions = async (famille, forcerSuppression, conserverPersonnes) => {\n      try {\n        // Construire l'URL avec les paramètres\n        let deleteUrl = `/familles/${famille._id}`;\n        if (forcerSuppression) {\n          deleteUrl += `?forcerSuppression=true&conserverPersonnes=${conserverPersonnes}`;\n        }\n\n        // Afficher un message de chargement\n        displayNotification('Suppression en cours...', 'info', 0);\n\n        // Appeler l'API de suppression\n        const deleteResponse = await api.delete(deleteUrl);\n\n        // Fermer la notification de chargement\n        showNotification.value = false;\n\n        // Traiter la réponse\n        if (deleteResponse.data) {\n          let successMessage = 'Famille supprimée avec succès !';\n\n          // Ajouter des détails à la confirmation\n          if (deleteResponse.data.membresCount > 0) {\n            successMessage += deleteResponse.data.personnesConservees ? ' Les personnes ont été conservées.' : ` ${deleteResponse.data.membresCount} personne(s) ont également été supprimées.`;\n          }\n\n          // Afficher le message de succès\n          displayNotification(successMessage, 'success', 3000);\n\n          // Recharger la liste des familles\n          await loadFamilies();\n        }\n      } catch (error) {\n        console.error('Erreur lors de la suppression forcée:', error);\n        displayNotification(error.response?.data?.message || \"Erreur lors de la suppression de la famille.\", 'error', 3000);\n      }\n    };\n    const viewMembers = async famille => {\n      selectedFamille.value = famille;\n      showMembersModal.value = true;\n      memberFilterQuery.value = '';\n      await loadFamilyMembers();\n    };\n    const loadFamilyMembers = async () => {\n      if (!selectedFamille.value) return;\n      try {\n        console.log(`Chargement des membres pour la famille: ${selectedFamille.value.codeFamille} (ID: ${selectedFamille.value._id})`);\n        const response = await api.get(`/familles/${selectedFamille.value._id}/membres`);\n        console.log('Réponse API membres:', response.data);\n        familyMembers.value = response.data;\n        console.log(`Nombre de membres chargés: ${familyMembers.value.length}`);\n      } catch (error) {\n        console.error('Erreur lors du chargement des membres:', error);\n        familyMembers.value = [];\n      }\n    };\n    const closeMembersModal = () => {\n      showMembersModal.value = false;\n      selectedFamille.value = null;\n      familyMembers.value = [];\n      memberFilterQuery.value = '';\n    };\n\n    // Nouveaux méthodes pour la gestion des membres\n    const openAddMemberModal = () => {\n      showAddMemberModal.value = true;\n      memberSearchQuery.value = '';\n      searchResults.value = [];\n      selectedUser.value = null;\n      newPersonForm.value = {\n        nom: '',\n        prenom: '',\n        genre: 'Non spécifié'\n      };\n      memberMessage.value = '';\n    };\n    const closeAddMemberModal = () => {\n      showAddMemberModal.value = false;\n      memberSearchQuery.value = '';\n      searchResults.value = [];\n      selectedUser.value = null;\n    };\n    const searchUsers = async () => {\n      if (!memberSearchQuery.value.trim()) return;\n      try {\n        const response = await api.get(`/users/search?query=${memberSearchQuery.value}`);\n        searchResults.value = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la recherche d\\'utilisateurs:', error);\n        searchResults.value = [];\n      }\n    };\n    const selectUser = user => {\n      selectedUser.value = user;\n    };\n    const addMemberToFamily = async () => {\n      if (!selectedFamille.value) return;\n      try {\n        memberMessage.value = '';\n        let personneId;\n        if (selectedUser.value) {\n          // Ajouter un utilisateur existant\n          personneId = selectedUser.value.personne;\n        } else {\n          // Créer une nouvelle personne\n          const newPersonne = {\n            nom: newPersonForm.value.nom.trim(),\n            prenom: newPersonForm.value.prenom.trim(),\n            genre: newPersonForm.value.genre\n          };\n          const response = await api.post('/personnes', newPersonne);\n          personneId = response.data._id;\n        }\n\n        // Ajouter la personne à la famille\n        try {\n          await api.put(`/familles/${selectedFamille.value._id}/membres`, {\n            personneId\n          });\n          memberMessage.value = 'Membre ajouté avec succès !';\n          memberSuccess.value = true;\n\n          // Recharger les membres\n          await loadFamilyMembers();\n\n          // Mettre à jour le compteur de membres valides\n          await loadMembresValidesCount();\n\n          // Fermer la modal après un court délai\n          setTimeout(() => {\n            closeAddMemberModal();\n          }, 1500);\n        } catch (error) {\n          if (error.response?.data?.message.includes(\"appartient déjà à une autre famille\")) {\n            const autreFamille = error.response.data.famille;\n            memberMessage.value = `Cette personne appartient déjà à la famille ${autreFamille.codeFamille} (${autreFamille.nom})`;\n          } else {\n            memberMessage.value = error.response?.data?.message || \"Erreur lors de l'ajout du membre\";\n          }\n          memberSuccess.value = false;\n        }\n      } catch (error) {\n        let errorMessage = \"Erreur lors de l'ajout du membre\";\n        if (error.response?.data?.message) {\n          errorMessage = error.response.data.message;\n        }\n        memberMessage.value = errorMessage;\n        memberSuccess.value = false;\n      }\n    };\n    const removeMember = async member => {\n      console.log('Removing member:', member);\n\n      // Préparer les options en fonction du type d'utilisateur\n      const hasUserAccount = member.login && member.role;\n      const confirmationText = `Souhaitez-vous retirer ${member.prenom} ${member.nom} de cette famille ?`;\n      const modalContent = `\n        <div class=\"confirmation-details\">\n          <div class=\"member-info\">\n            <div class=\"member-info-item\"><strong>Nom:</strong> ${member.nom} ${member.prenom}</div>\n            ${hasUserAccount ? `<div class=\"member-info-item\"><strong>Login:</strong> ${member.login}</div>` : ''}\n            ${hasUserAccount ? `<div class=\"member-info-item\"><strong>Rôle:</strong> ${member.role}</div>` : ''}\n            ${hasUserAccount ? `<div class=\"member-info-item\"><strong>Niveau:</strong> ${member.niveau}</div>` : ''}\n            ${hasUserAccount ? `\n            <div class=\"member-warning\">\n              <i class=\"fas fa-exclamation-triangle\"></i> Cette personne possède un compte utilisateur. Le retirer de la famille pourrait affecter son accès à certaines fonctionnalités.\n            </div>` : ''}\n          </div>\n        </div>\n      `;\n\n      // Actions pour les boutons\n      const actions = [{\n        text: 'Retirer de la famille',\n        type: 'warning',\n        handler: async () => {\n          showNotification.value = false;\n          try {\n            // Afficher une indication de chargement\n            displayNotification(`Retrait de ${member.prenom} ${member.nom} en cours...`, 'info', 0);\n\n            // Appel API avec paramètre pour conserver la personne\n            const response = await api.delete(`familles/${selectedFamille.value._id}/membres/${member._id}?conserverPersonne=true`);\n\n            // Fermer la notification de chargement\n            showNotification.value = false;\n            if (response.data.familleDeleted) {\n              displayNotification(`${member.prenom} ${member.nom} a été retiré. La famille a été supprimée car elle n'avait plus de membres.`, 'success', 5000);\n              loadFamilies();\n              closeMembersModal();\n            } else {\n              displayNotification(`${member.prenom} ${member.nom} a été retiré de la famille. ${response.data.remainingMembers} membre(s) restant(s).`, 'success', 5000);\n              loadFamilyMembers();\n\n              // Mettre à jour le compteur de membres valides\n              await loadMembresValidesCount();\n            }\n          } catch (error) {\n            console.error('Error removing member:', error);\n            displayNotification(`Erreur lors du retrait du membre: ${error.response?.data?.message || error.message}`, 'error', 5000);\n          }\n        }\n      }, {\n        text: 'Annuler',\n        type: 'cancel',\n        handler: () => {\n          showNotification.value = false;\n        }\n      }];\n\n      // Utiliser la notification avancée avec les actions\n      displayNotification(confirmationText, 'warning', 0,\n      // Ne pas fermer automatiquement\n      modalContent, actions);\n    };\n    const getNotificationIcon = () => {\n      switch (notificationType.value) {\n        case 'success':\n          return 'fas fa-check-circle';\n        case 'error':\n          return 'fas fa-exclamation-circle';\n        case 'warning':\n          return 'fas fa-exclamation-triangle';\n        default:\n          return 'fas fa-info-circle';\n      }\n    };\n    const getMembresValidesCount = famille => {\n      if (!famille || !famille._id) return 0;\n\n      // Utiliser le compteur exact provenant de l'API\n      if (membresValidesCount.value && membresValidesCount.value[famille._id]) {\n        return membresValidesCount.value[famille._id];\n      }\n\n      // Fallback : filtrer les membres qui ont une référence personne valide\n      if (famille.membres) {\n        return famille.membres.filter(membre => membre.personne && membre.personne._id).length;\n      }\n      return 0;\n    };\n    onMounted(() => {\n      loadFamilies();\n    });\n    return {\n      families,\n      searchQuery,\n      filteredFamilies,\n      showModal,\n      editingFamille,\n      editFamille,\n      openAddFamilleModal,\n      closeModal,\n      confirmDelete,\n      saveFamille,\n      form,\n      formMessage,\n      formSuccess,\n      message,\n      messageSuccess,\n      showMembersModal,\n      selectedFamille,\n      familyMembers,\n      viewMembers,\n      closeMembersModal,\n      formatDate,\n      getGenderIcon,\n      // Nouvelles propriétés et méthodes\n      showAddMemberModal,\n      memberSearchQuery,\n      searchResults,\n      selectedUser,\n      newPersonForm,\n      memberMessage,\n      memberSuccess,\n      openAddMemberModal,\n      closeAddMemberModal,\n      searchUsers,\n      selectUser,\n      addMemberToFamily,\n      removeMember,\n      // Notifications\n      showNotification,\n      notificationMessage,\n      notificationType,\n      displayNotification,\n      getNotificationIcon,\n      notificationHtmlContent,\n      notificationActions,\n      memberFilterQuery,\n      filteredFamilyMembers,\n      getMembresValidesCount,\n      membresValidesCount\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","AppLayout","api","name","components","setup","families","searchQuery","showModal","editingFamille","form","codeFamille","nom","description","formMessage","formSuccess","message","messageSuccess","showMembersModal","selectedFamille","familyMembers","membresValidesCount","showAddMemberModal","memberSearchQuery","searchResults","selectedUser","newPersonForm","prenom","genre","memberMessage","memberSuccess","memberFilterQuery","filteredFamilyMembers","value","trim","query","toLowerCase","filter","member","includes","login","role","niveau","showNotification","notificationMessage","notificationType","notificationDuration","notificationHtmlContent","notificationActions","displayNotification","type","duration","htmlContent","actions","setTimeout","loadFamilies","response","get","data","loadMembresValidesCount","error","console","filteredFamilies","famille","formatDate","dateString","date","Date","toLocaleDateString","getGenderIcon","editFamille","openAddFamilleModal","closeModal","saveFamille","familleData","put","_id","post","err","errorMessage","confirmDelete","text","handler","membres","length","optionsActions","deleteFamilleWithOptions","hasUsers","forceActions","count","forcerSuppression","conserverPersonnes","deleteUrl","deleteResponse","delete","successMessage","membresCount","personnesConservees","viewMembers","loadFamilyMembers","log","closeMembersModal","openAddMemberModal","closeAddMemberModal","searchUsers","selectUser","user","addMemberToFamily","personneId","personne","newPersonne","autreFamille","removeMember","hasUserAccount","confirmationText","modalContent","familleDeleted","remainingMembers","getNotificationIcon","getMembresValidesCount","membre"],"sources":["C:\\Users\\benab\\Desktop\\COURS 24_25\\S2\\WEB\\V4\\Projet_WEB_ING1\\frontend\\src\\views\\AdminFamilies.vue"],"sourcesContent":["<template>\r\n  <AppLayout>\r\n    <div class=\"admin-families-container\">\r\n      <h1 class=\"page-title\">Gestion des familles</h1>\r\n\r\n      <div class=\"actions-bar\">\r\n        <div class=\"search-box\">\r\n          <input\r\n              type=\"text\"\r\n              v-model=\"searchQuery\"\r\n              placeholder=\"Rechercher...\"\r\n              class=\"search-input\"\r\n          />\r\n        </div>\r\n        <button @click=\"openAddFamilleModal\" class=\"add-famille-btn\">\r\n          <i class=\"fas fa-plus\"></i> Ajouter une famille\r\n        </button>\r\n      </div>\r\n      <div v-if=\"message\" :class=\"{'success-msg': messageSuccess, 'error-msg': !messageSuccess}\">\r\n        {{ message }}\r\n      </div>\r\n\r\n      <div class=\"families-table\">\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>Code Famille</th>\r\n            <th>Nom</th>\r\n            <th>Description</th>\r\n            <th>Membres</th>\r\n            <th>Créée le</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"famille in filteredFamilies\" :key=\"famille._id\">\r\n            <td><strong>{{ famille.codeFamille }}</strong></td>\r\n            <td>{{ famille.nom || '-' }}</td>\r\n            <td>{{ famille.description || '-' }}</td>\r\n            <td>\r\n              <span class=\"badge-members\">{{ getMembresValidesCount(famille) }}</span>\r\n            </td>\r\n            <td>{{ formatDate(famille.createdAt) }}</td>\r\n            <td class=\"actions-cell\">\r\n              <button @click=\"editFamille(famille)\" class=\"action-btn edit\" title=\"Modifier\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </button>\r\n              <button @click=\"viewMembers(famille)\" class=\"action-btn view\" title=\"Voir les membres\">\r\n                <i class=\"fas fa-users\"></i>\r\n              </button>\r\n              <button @click=\"confirmDelete(famille)\" class=\"action-btn delete\" title=\"Supprimer\">\r\n                <i class=\"fas fa-trash\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal pour éditer/ajouter une famille -->\r\n    <div v-if=\"showModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>{{ editingFamille ? 'Modifier' : 'Ajouter' }} une famille</h2>\r\n        <form @submit.prevent=\"saveFamille\">\r\n          <div class=\"form-row\">\r\n            <label>Code Famille :</label>\r\n            <input v-model=\"form.codeFamille\" type=\"text\" required :disabled=\"editingFamille\" />\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Nom de la famille :</label>\r\n            <input v-model=\"form.nom\" type=\"text\" required placeholder=\"Ex: Famille Dupont\" />\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <label>Description :</label>\r\n            <textarea v-model=\"form.description\" placeholder=\"Description de la famille (optionnelle)\"></textarea>\r\n          </div>\r\n          <div class=\"modal-actions\">\r\n            <button type=\"submit\" class=\"save-btn\">Enregistrer</button>\r\n            <button type=\"button\" @click=\"closeModal\" class=\"cancel-btn\">Annuler</button>\r\n          </div>\r\n        </form>\r\n        <div v-if=\"formMessage\" :class=\"{'success-msg': formSuccess, 'error-msg': !formSuccess}\">{{ formMessage }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal pour voir les membres -->\r\n    <div v-if=\"showMembersModal\" class=\"modal\">\r\n      <div class=\"modal-content members-modal\">\r\n        <div class=\"modal-header\">\r\n          <h2>Membres de la famille {{ selectedFamille?.nom || selectedFamille?.codeFamille }}</h2>\r\n          <button type=\"button\" @click=\"openAddMemberModal\" class=\"add-member-btn\">\r\n            <i class=\"fas fa-user-plus\"></i> Ajouter un membre\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Barre de recherche pour filtrer les membres -->\r\n        <div class=\"members-search-bar\">\r\n          <div class=\"search-container\">\r\n            <input\r\n                type=\"text\"\r\n                v-model=\"memberFilterQuery\"\r\n                placeholder=\"Rechercher un membre...\"\r\n                class=\"search-input\"\r\n            />\r\n            <span class=\"search-icon\">\r\n              <i class=\"fas fa-search\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"selectedFamille\">\r\n          <div v-if=\"filteredFamilyMembers.length > 0\">\r\n            <table class=\"members-table\">\r\n              <thead>\r\n              <tr>\r\n                <th>Photo</th>\r\n                <th>Nom</th>\r\n                <th>Prénom</th>\r\n                <th>Login</th>\r\n                <th>Niveau</th>\r\n                <th>Rôle</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"member in filteredFamilyMembers\" :key=\"member._id\">\r\n                <td>\r\n                  <div class=\"member-avatar\">\r\n                    <i :class=\"getGenderIcon(member.genre)\"></i>\r\n                  </div>\r\n                </td>\r\n                <td>{{ member.nom }}</td>\r\n                <td>{{ member.prenom }}</td>\r\n                <td>{{ member.login || '-' }}</td>\r\n                <td>{{ member.niveau || '-' }}</td>\r\n                <td>{{ member.role || '-' }}</td>\r\n                <td>\r\n                  <button @click=\"removeMember(member)\" class=\"action-btn delete\" title=\"Retirer de la famille\">\r\n                    <i class=\"fas fa-user-minus\"></i>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div v-else-if=\"familyMembers.length > 0 && filteredFamilyMembers.length === 0\" class=\"no-results\">\r\n            <i class=\"fas fa-search\"></i>\r\n            <p>Aucun membre ne correspond à votre recherche</p>\r\n            <button @click=\"memberFilterQuery = ''\" class=\"reset-search-btn\">\r\n              Réinitialiser la recherche\r\n            </button>\r\n          </div>\r\n          <div v-else class=\"no-members\">\r\n            <i class=\"fas fa-users-slash\"></i>\r\n            <p>Aucun membre dans cette famille</p>\r\n            <button @click=\"openAddMemberModal\" class=\"add-member-btn-empty\">\r\n              <i class=\"fas fa-user-plus\"></i> Ajouter un membre\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-actions\">\r\n          <button type=\"button\" @click=\"closeMembersModal\" class=\"cancel-btn\">Fermer</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal pour ajouter un membre à la famille -->\r\n    <div v-if=\"showAddMemberModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>Ajouter un membre à la famille {{ selectedFamille?.codeFamille }}</h2>\r\n        <form @submit.prevent=\"addMemberToFamily\">\r\n          <div class=\"form-row\">\r\n            <label>Rechercher un utilisateur existant :</label>\r\n            <div class=\"search-container\">\r\n              <input\r\n                  type=\"text\"\r\n                  v-model=\"memberSearchQuery\"\r\n                  placeholder=\"Rechercher par nom, prénom ou login...\"\r\n                  class=\"search-input\"\r\n              />\r\n              <button type=\"button\" @click=\"searchUsers\" class=\"search-btn\">\r\n                <i class=\"fas fa-search\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"searchResults.length > 0\" class=\"search-results\">\r\n            <h3>Résultats de recherche</h3>\r\n            <div class=\"users-list\">\r\n              <div\r\n                  v-for=\"user in searchResults\"\r\n                  :key=\"user._id\"\r\n                  class=\"user-item\"\r\n                  @click=\"selectUser(user)\"\r\n                  :class=\"{'selected': selectedUser && selectedUser._id === user._id}\"\r\n              >\r\n                <div class=\"user-icon\">\r\n                  <i :class=\"getGenderIcon(user.genre)\"></i>\r\n                </div>\r\n                <div class=\"user-info\">\r\n                  <div class=\"user-name\">{{ user.nom }} {{ user.prenom }}</div>\r\n                  <div class=\"user-login\">{{ user.login }}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-row\" v-if=\"!selectedUser\">\r\n            <div class=\"separator\">\r\n              <span>ou créer une nouvelle personne</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"!selectedUser\">\r\n            <div class=\"form-row\">\r\n              <label>Nom :</label>\r\n              <input v-model=\"newPersonForm.nom\" type=\"text\" required />\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <label>Prénom :</label>\r\n              <input v-model=\"newPersonForm.prenom\" type=\"text\" required />\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <label>Genre :</label>\r\n              <select v-model=\"newPersonForm.genre\">\r\n                <option value=\"Homme\">Homme</option>\r\n                <option value=\"Femme\">Femme</option>\r\n                <option value=\"Non spécifié\">Non spécifié</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"modal-actions\">\r\n            <button\r\n                type=\"submit\"\r\n                class=\"save-btn\"\r\n                :disabled=\"!selectedUser && (!newPersonForm.nom || !newPersonForm.prenom)\"\r\n            >\r\n              Ajouter à la famille\r\n            </button>\r\n            <button type=\"button\" @click=\"closeAddMemberModal\" class=\"cancel-btn\">Annuler</button>\r\n          </div>\r\n        </form>\r\n        <div v-if=\"memberMessage\" :class=\"{'success-msg': memberSuccess, 'error-msg': !memberSuccess}\">\r\n          {{ memberMessage }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Notification -->\r\n    <div v-if=\"showNotification\" class=\"notification\" @click=\"showNotification = false\">\r\n      <div class=\"notification-content\" :class=\"[`notification-${notificationType}`]\" @click.stop>\r\n        <div class=\"notification-icon\">\r\n          <i :class=\"getNotificationIcon()\"></i>\r\n        </div>\r\n        <div class=\"notification-text\">\r\n          <p>{{ notificationMessage }}</p>\r\n          <div v-if=\"notificationHtmlContent\" v-html=\"notificationHtmlContent\"></div>\r\n        </div>\r\n        <div v-if=\"notificationActions\" class=\"notification-actions\">\r\n          <button v-for=\"(action, index) in notificationActions\" :key=\"index\"\r\n                  :class=\"['notification-btn', action.type]\"\r\n                  @click=\"action.handler\">\r\n            {{ action.text }}\r\n          </button>\r\n        </div>\r\n        <div v-else class=\"notification-actions\">\r\n          <button @click=\"showNotification = false\" class=\"notification-close\">Fermer</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </AppLayout>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport AppLayout from '@/layout/AppLayoutGlobal.vue';\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  name: 'AdminFamilies',\r\n  components: {\r\n    AppLayout\r\n  },\r\n  setup() {\r\n    const families = ref([]);\r\n    const searchQuery = ref('');\r\n    const showModal = ref(false);\r\n    const editingFamille = ref(null);\r\n    const form = ref({\r\n      codeFamille: '',\r\n      nom: '',\r\n      description: ''\r\n    });\r\n    const formMessage = ref('');\r\n    const formSuccess = ref(false);\r\n    const message = ref('');\r\n    const messageSuccess = ref(false);\r\n    const showMembersModal = ref(false);\r\n    const selectedFamille = ref(null);\r\n    const familyMembers = ref([]);\r\n\r\n    // Compteur de membres valides par famille\r\n    const membresValidesCount = ref({});\r\n\r\n    // Nouveaux états pour l'ajout de membres\r\n    const showAddMemberModal = ref(false);\r\n    const memberSearchQuery = ref('');\r\n    const searchResults = ref([]);\r\n    const selectedUser = ref(null);\r\n    const newPersonForm = ref({\r\n      nom: '',\r\n      prenom: '',\r\n      genre: 'Non spécifié'\r\n    });\r\n    const memberMessage = ref('');\r\n    const memberSuccess = ref(false);\r\n\r\n    // Recherche de membres dans la famille\r\n    const memberFilterQuery = ref('');\r\n    const filteredFamilyMembers = computed(() => {\r\n      if (!memberFilterQuery.value.trim()) {\r\n        return familyMembers.value;\r\n      }\r\n\r\n      const query = memberFilterQuery.value.toLowerCase().trim();\r\n      return familyMembers.value.filter(member =>\r\n          member.nom?.toLowerCase().includes(query) ||\r\n          member.prenom?.toLowerCase().includes(query) ||\r\n          member.login?.toLowerCase().includes(query) ||\r\n          (member.role?.toLowerCase().includes(query)) ||\r\n          (member.niveau?.toLowerCase().includes(query))\r\n      );\r\n    });\r\n\r\n    // Notifications\r\n    const showNotification = ref(false);\r\n    const notificationMessage = ref('');\r\n    const notificationType = ref('info'); // 'success', 'error', 'warning', 'info'\r\n    const notificationDuration = ref(3000);\r\n    const notificationHtmlContent = ref('');\r\n    const notificationActions = ref([]);\r\n\r\n    const displayNotification = (message, type = 'info', duration = 3000, htmlContent = '', actions = null) => {\r\n      notificationMessage.value = message;\r\n      notificationType.value = type;\r\n      notificationDuration.value = duration;\r\n      notificationHtmlContent.value = htmlContent;\r\n      notificationActions.value = actions || [];\r\n      showNotification.value = true;\r\n\r\n      // Fermer automatiquement après la durée spécifiée\r\n      if (duration > 0) {\r\n        setTimeout(() => {\r\n          showNotification.value = false;\r\n        }, duration);\r\n      }\r\n    };\r\n\r\n    const loadFamilies = async () => {\r\n      try {\r\n        const response = await api.get('/familles');\r\n        families.value = response.data;\r\n\r\n        // Charger les compteurs de membres valides\r\n        await loadMembresValidesCount();\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des familles:', error);\r\n        message.value = 'Erreur lors du chargement des familles';\r\n        messageSuccess.value = false;\r\n      }\r\n    };\r\n\r\n    const loadMembresValidesCount = async () => {\r\n      try {\r\n        const response = await api.get('/familles/membres-count');\r\n        membresValidesCount.value = response.data;\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des compteurs de membres:', error);\r\n      }\r\n    };\r\n\r\n    const filteredFamilies = computed(() => {\r\n      if (!searchQuery.value) return families.value;\r\n      const query = searchQuery.value.toLowerCase();\r\n      return families.value.filter(famille =>\r\n          famille.codeFamille?.toLowerCase().includes(query) ||\r\n          famille.nom?.toLowerCase().includes(query) ||\r\n          famille.description?.toLowerCase().includes(query)\r\n      );\r\n    });\r\n\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '-';\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('fr-FR');\r\n    };\r\n\r\n    const getGenderIcon = (genre) => {\r\n      switch (genre) {\r\n        case 'Homme':\r\n          return 'fas fa-male';\r\n        case 'Femme':\r\n          return 'fas fa-female';\r\n        default:\r\n          return 'fas fa-user';\r\n      }\r\n    };\r\n\r\n    const editFamille = (famille) => {\r\n      editingFamille.value = famille;\r\n      form.value = {\r\n        codeFamille: famille.codeFamille,\r\n        nom: famille.nom || '',\r\n        description: famille.description || ''\r\n      };\r\n      formMessage.value = '';\r\n      showModal.value = true;\r\n    };\r\n\r\n    const openAddFamilleModal = () => {\r\n      editingFamille.value = null;\r\n      showModal.value = true;\r\n      form.value = {\r\n        codeFamille: '',\r\n        nom: '',\r\n        description: ''\r\n      };\r\n      formMessage.value = '';\r\n    };\r\n\r\n    const closeModal = () => {\r\n      showModal.value = false;\r\n      editingFamille.value = null;\r\n    };\r\n\r\n    const saveFamille = async () => {\r\n      try {\r\n        formMessage.value = '';\r\n\r\n        const familleData = {\r\n          codeFamille: form.value.codeFamille.trim(),\r\n          nom: form.value.nom.trim(),\r\n          description: form.value.description?.trim() || ''\r\n        };\r\n\r\n        let response;\r\n        if (editingFamille.value) {\r\n          response = await api.put(`/familles/${editingFamille.value._id}`, familleData);\r\n        } else {\r\n          response = await api.post('/familles', familleData);\r\n        }\r\n\r\n        if (response.data) {\r\n          formMessage.value = editingFamille.value ?\r\n              'Famille modifiée avec succès !' :\r\n              'Famille ajoutée avec succès !';\r\n          formSuccess.value = true;\r\n          await loadFamilies();\r\n          setTimeout(() => closeModal(), 1500);\r\n        }\r\n      } catch (err) {\r\n        let errorMessage = editingFamille.value ?\r\n            'Erreur lors de la modification de la famille' :\r\n            'Erreur lors de la création de la famille';\r\n\r\n        if (err.response?.data?.message) {\r\n          errorMessage = err.response.data.message;\r\n        }\r\n\r\n        formMessage.value = errorMessage;\r\n        formSuccess.value = false;\r\n      }\r\n    };\r\n\r\n    const confirmDelete = async (famille) => {\r\n      // Actions pour les boutons\r\n      const actions = [\r\n        {\r\n          text: 'Oui, supprimer',\r\n          type: 'confirm',\r\n          handler: async () => {\r\n            showNotification.value = false;\r\n\r\n            try {\r\n              // D'abord vérifier si la famille a des membres\r\n              const response = await api.get(`/familles/${famille._id}/membres`);\r\n              const membres = response.data;\r\n\r\n              // Choix de suppression selon les cas\r\n              if (membres.length > 0) {\r\n                // Proposer des options si la famille a des membres\r\n                const optionsActions = [\r\n                  {\r\n                    text: 'Supprimer tout',\r\n                    type: 'danger',\r\n                    handler: async () => {\r\n                      showNotification.value = false;\r\n                      // Supprimer la famille ET les personnes\r\n                      await deleteFamilleWithOptions(famille, true, false);\r\n                    }\r\n                  },\r\n                  {\r\n                    text: 'Conserver les personnes',\r\n                    type: 'warning',\r\n                    handler: async () => {\r\n                      showNotification.value = false;\r\n                      // Supprimer la famille mais conserver les personnes\r\n                      await deleteFamilleWithOptions(famille, true, true);\r\n                    }\r\n                  },\r\n                  {\r\n                    text: 'Annuler',\r\n                    type: 'cancel',\r\n                    handler: () => {\r\n                      showNotification.value = false;\r\n                    }\r\n                  }\r\n                ];\r\n\r\n                displayNotification(\r\n                    `La famille ${famille.codeFamille} contient ${membres.length} membre(s). Souhaitez-vous supprimer également les personnes associées?`,\r\n                    'warning',\r\n                    0,\r\n                    '',\r\n                    optionsActions\r\n                );\r\n              } else {\r\n                // Pas de membres, supprimer directement\r\n                await deleteFamilleWithOptions(famille, false, true);\r\n              }\r\n            } catch (error) {\r\n              console.error('Erreur lors de la suppression:', error);\r\n              if (error.response?.data?.hasUsers) {\r\n                // Si la famille a des utilisateurs, proposer la suppression forcée\r\n                const forceActions = [\r\n                  {\r\n                    text: 'Forcer la suppression',\r\n                    type: 'warning',\r\n                    handler: async () => {\r\n                      showNotification.value = false;\r\n                      // Suppression forcée\r\n                      await deleteFamilleWithOptions(famille, true, true);\r\n                    }\r\n                  },\r\n                  {\r\n                    text: 'Annuler',\r\n                    type: 'cancel',\r\n                    handler: () => {\r\n                      showNotification.value = false;\r\n                    }\r\n                  }\r\n                ];\r\n\r\n                displayNotification(\r\n                    `La famille ne peut pas être supprimée car elle contient des utilisateurs associés (${error.response.data.count}). Voulez-vous tout de même forcer la suppression ? Les utilisateurs seront dissociés de cette famille.`,\r\n                    'error',\r\n                    0,\r\n                    '',\r\n                    forceActions\r\n                );\r\n              } else {\r\n                displayNotification(\r\n                    error.response?.data?.message || \"Erreur lors de la suppression de la famille.\",\r\n                    'error',\r\n                    3000\r\n                );\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          text: 'Annuler',\r\n          type: 'cancel',\r\n          handler: () => {\r\n            showNotification.value = false;\r\n          }\r\n        }\r\n      ];\r\n\r\n      // Affichage du choix de confirmation modal personnalisé\r\n      displayNotification(\r\n          `Êtes-vous sûr de vouloir supprimer la famille ${famille.codeFamille} ?`,\r\n          'warning',\r\n          0, // 0 = ne pas fermer automatiquement\r\n          '',\r\n          actions\r\n      );\r\n    };\r\n\r\n    const deleteFamilleWithOptions = async (famille, forcerSuppression, conserverPersonnes) => {\r\n      try {\r\n        // Construire l'URL avec les paramètres\r\n        let deleteUrl = `/familles/${famille._id}`;\r\n        if (forcerSuppression) {\r\n          deleteUrl += `?forcerSuppression=true&conserverPersonnes=${conserverPersonnes}`;\r\n        }\r\n\r\n        // Afficher un message de chargement\r\n        displayNotification('Suppression en cours...', 'info', 0);\r\n\r\n        // Appeler l'API de suppression\r\n        const deleteResponse = await api.delete(deleteUrl);\r\n\r\n        // Fermer la notification de chargement\r\n        showNotification.value = false;\r\n\r\n        // Traiter la réponse\r\n        if (deleteResponse.data) {\r\n          let successMessage = 'Famille supprimée avec succès !';\r\n\r\n          // Ajouter des détails à la confirmation\r\n          if (deleteResponse.data.membresCount > 0) {\r\n            successMessage += deleteResponse.data.personnesConservees ?\r\n                ' Les personnes ont été conservées.' :\r\n                ` ${deleteResponse.data.membresCount} personne(s) ont également été supprimées.`;\r\n          }\r\n\r\n          // Afficher le message de succès\r\n          displayNotification(successMessage, 'success', 3000);\r\n\r\n          // Recharger la liste des familles\r\n          await loadFamilies();\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de la suppression forcée:', error);\r\n        displayNotification(\r\n            error.response?.data?.message || \"Erreur lors de la suppression de la famille.\",\r\n            'error',\r\n            3000\r\n        );\r\n      }\r\n    };\r\n\r\n    const viewMembers = async (famille) => {\r\n      selectedFamille.value = famille;\r\n      showMembersModal.value = true;\r\n      memberFilterQuery.value = '';\r\n      await loadFamilyMembers();\r\n    };\r\n\r\n    const loadFamilyMembers = async () => {\r\n      if (!selectedFamille.value) return;\r\n\r\n      try {\r\n        console.log(`Chargement des membres pour la famille: ${selectedFamille.value.codeFamille} (ID: ${selectedFamille.value._id})`);\r\n        const response = await api.get(`/familles/${selectedFamille.value._id}/membres`);\r\n        console.log('Réponse API membres:', response.data);\r\n        familyMembers.value = response.data;\r\n        console.log(`Nombre de membres chargés: ${familyMembers.value.length}`);\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des membres:', error);\r\n        familyMembers.value = [];\r\n      }\r\n    };\r\n\r\n    const closeMembersModal = () => {\r\n      showMembersModal.value = false;\r\n      selectedFamille.value = null;\r\n      familyMembers.value = [];\r\n      memberFilterQuery.value = '';\r\n    };\r\n\r\n    // Nouveaux méthodes pour la gestion des membres\r\n    const openAddMemberModal = () => {\r\n      showAddMemberModal.value = true;\r\n      memberSearchQuery.value = '';\r\n      searchResults.value = [];\r\n      selectedUser.value = null;\r\n      newPersonForm.value = {\r\n        nom: '',\r\n        prenom: '',\r\n        genre: 'Non spécifié'\r\n      };\r\n      memberMessage.value = '';\r\n    };\r\n\r\n    const closeAddMemberModal = () => {\r\n      showAddMemberModal.value = false;\r\n      memberSearchQuery.value = '';\r\n      searchResults.value = [];\r\n      selectedUser.value = null;\r\n    };\r\n\r\n    const searchUsers = async () => {\r\n      if (!memberSearchQuery.value.trim()) return;\r\n\r\n      try {\r\n        const response = await api.get(`/users/search?query=${memberSearchQuery.value}`);\r\n        searchResults.value = response.data;\r\n      } catch (error) {\r\n        console.error('Erreur lors de la recherche d\\'utilisateurs:', error);\r\n        searchResults.value = [];\r\n      }\r\n    };\r\n\r\n    const selectUser = (user) => {\r\n      selectedUser.value = user;\r\n    };\r\n\r\n    const addMemberToFamily = async () => {\r\n      if (!selectedFamille.value) return;\r\n\r\n      try {\r\n        memberMessage.value = '';\r\n\r\n        let personneId;\r\n\r\n        if (selectedUser.value) {\r\n          // Ajouter un utilisateur existant\r\n          personneId = selectedUser.value.personne;\r\n        } else {\r\n          // Créer une nouvelle personne\r\n          const newPersonne = {\r\n            nom: newPersonForm.value.nom.trim(),\r\n            prenom: newPersonForm.value.prenom.trim(),\r\n            genre: newPersonForm.value.genre\r\n          };\r\n\r\n          const response = await api.post('/personnes', newPersonne);\r\n          personneId = response.data._id;\r\n        }\r\n\r\n        // Ajouter la personne à la famille\r\n        try {\r\n          await api.put(`/familles/${selectedFamille.value._id}/membres`, {\r\n            personneId\r\n          });\r\n\r\n          memberMessage.value = 'Membre ajouté avec succès !';\r\n          memberSuccess.value = true;\r\n\r\n          // Recharger les membres\r\n          await loadFamilyMembers();\r\n\r\n          // Mettre à jour le compteur de membres valides\r\n          await loadMembresValidesCount();\r\n\r\n          // Fermer la modal après un court délai\r\n          setTimeout(() => {\r\n            closeAddMemberModal();\r\n          }, 1500);\r\n        } catch (error) {\r\n          if (error.response?.data?.message.includes(\"appartient déjà à une autre famille\")) {\r\n            const autreFamille = error.response.data.famille;\r\n            memberMessage.value = `Cette personne appartient déjà à la famille ${autreFamille.codeFamille} (${autreFamille.nom})`;\r\n          } else {\r\n            memberMessage.value = error.response?.data?.message || \"Erreur lors de l'ajout du membre\";\r\n          }\r\n          memberSuccess.value = false;\r\n        }\r\n\r\n      } catch (error) {\r\n        let errorMessage = \"Erreur lors de l'ajout du membre\";\r\n\r\n        if (error.response?.data?.message) {\r\n          errorMessage = error.response.data.message;\r\n        }\r\n\r\n        memberMessage.value = errorMessage;\r\n        memberSuccess.value = false;\r\n      }\r\n    };\r\n\r\n    const removeMember = async (member) => {\r\n      console.log('Removing member:', member);\r\n\r\n      // Préparer les options en fonction du type d'utilisateur\r\n      const hasUserAccount = member.login && member.role;\r\n      const confirmationText = `Souhaitez-vous retirer ${member.prenom} ${member.nom} de cette famille ?`;\r\n\r\n      const modalContent = `\r\n        <div class=\"confirmation-details\">\r\n          <div class=\"member-info\">\r\n            <div class=\"member-info-item\"><strong>Nom:</strong> ${member.nom} ${member.prenom}</div>\r\n            ${hasUserAccount ? `<div class=\"member-info-item\"><strong>Login:</strong> ${member.login}</div>` : ''}\r\n            ${hasUserAccount ? `<div class=\"member-info-item\"><strong>Rôle:</strong> ${member.role}</div>` : ''}\r\n            ${hasUserAccount ? `<div class=\"member-info-item\"><strong>Niveau:</strong> ${member.niveau}</div>` : ''}\r\n            ${hasUserAccount ? `\r\n            <div class=\"member-warning\">\r\n              <i class=\"fas fa-exclamation-triangle\"></i> Cette personne possède un compte utilisateur. Le retirer de la famille pourrait affecter son accès à certaines fonctionnalités.\r\n            </div>` : ''}\r\n          </div>\r\n        </div>\r\n      `;\r\n\r\n      // Actions pour les boutons\r\n      const actions = [\r\n        {\r\n          text: 'Retirer de la famille',\r\n          type: 'warning',\r\n          handler: async () => {\r\n            showNotification.value = false;\r\n\r\n            try {\r\n              // Afficher une indication de chargement\r\n              displayNotification(\r\n                  `Retrait de ${member.prenom} ${member.nom} en cours...`,\r\n                  'info',\r\n                  0\r\n              );\r\n\r\n              // Appel API avec paramètre pour conserver la personne\r\n              const response = await api.delete(\r\n                  `familles/${selectedFamille.value._id}/membres/${member._id}?conserverPersonne=true`\r\n              );\r\n\r\n              // Fermer la notification de chargement\r\n              showNotification.value = false;\r\n\r\n              if (response.data.familleDeleted) {\r\n                displayNotification(\r\n                    `${member.prenom} ${member.nom} a été retiré. La famille a été supprimée car elle n'avait plus de membres.`,\r\n                    'success',\r\n                    5000\r\n                );\r\n                loadFamilies();\r\n                closeMembersModal();\r\n              } else {\r\n                displayNotification(\r\n                    `${member.prenom} ${member.nom} a été retiré de la famille. ${response.data.remainingMembers} membre(s) restant(s).`,\r\n                    'success',\r\n                    5000\r\n                );\r\n                loadFamilyMembers();\r\n\r\n                // Mettre à jour le compteur de membres valides\r\n                await loadMembresValidesCount();\r\n              }\r\n            } catch (error) {\r\n              console.error('Error removing member:', error);\r\n              displayNotification(\r\n                  `Erreur lors du retrait du membre: ${error.response?.data?.message || error.message}`,\r\n                  'error',\r\n                  5000\r\n              );\r\n            }\r\n          }\r\n        },\r\n        {\r\n          text: 'Annuler',\r\n          type: 'cancel',\r\n          handler: () => {\r\n            showNotification.value = false;\r\n          }\r\n        }\r\n      ];\r\n\r\n      // Utiliser la notification avancée avec les actions\r\n      displayNotification(\r\n          confirmationText,\r\n          'warning',\r\n          0, // Ne pas fermer automatiquement\r\n          modalContent,\r\n          actions\r\n      );\r\n    };\r\n\r\n    const getNotificationIcon = () => {\r\n      switch (notificationType.value) {\r\n        case 'success':\r\n          return 'fas fa-check-circle';\r\n        case 'error':\r\n          return 'fas fa-exclamation-circle';\r\n        case 'warning':\r\n          return 'fas fa-exclamation-triangle';\r\n        default:\r\n          return 'fas fa-info-circle';\r\n      }\r\n    };\r\n\r\n    const getMembresValidesCount = (famille) => {\r\n      if (!famille || !famille._id) return 0;\r\n\r\n      // Utiliser le compteur exact provenant de l'API\r\n      if (membresValidesCount.value && membresValidesCount.value[famille._id]) {\r\n        return membresValidesCount.value[famille._id];\r\n      }\r\n\r\n      // Fallback : filtrer les membres qui ont une référence personne valide\r\n      if (famille.membres) {\r\n        return famille.membres.filter(membre => membre.personne && membre.personne._id).length;\r\n      }\r\n\r\n      return 0;\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadFamilies();\r\n    });\r\n\r\n    return {\r\n      families,\r\n      searchQuery,\r\n      filteredFamilies,\r\n      showModal,\r\n      editingFamille,\r\n      editFamille,\r\n      openAddFamilleModal,\r\n      closeModal,\r\n      confirmDelete,\r\n      saveFamille,\r\n      form,\r\n      formMessage,\r\n      formSuccess,\r\n      message,\r\n      messageSuccess,\r\n      showMembersModal,\r\n      selectedFamille,\r\n      familyMembers,\r\n      viewMembers,\r\n      closeMembersModal,\r\n      formatDate,\r\n      getGenderIcon,\r\n      // Nouvelles propriétés et méthodes\r\n      showAddMemberModal,\r\n      memberSearchQuery,\r\n      searchResults,\r\n      selectedUser,\r\n      newPersonForm,\r\n      memberMessage,\r\n      memberSuccess,\r\n      openAddMemberModal,\r\n      closeAddMemberModal,\r\n      searchUsers,\r\n      selectUser,\r\n      addMemberToFamily,\r\n      removeMember,\r\n      // Notifications\r\n      showNotification,\r\n      notificationMessage,\r\n      notificationType,\r\n      displayNotification,\r\n      getNotificationIcon,\r\n      notificationHtmlContent,\r\n      notificationActions,\r\n      memberFilterQuery,\r\n      filteredFamilyMembers,\r\n      getMembresValidesCount,\r\n      membresValidesCount\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-families-container {\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  min-height: calc(100vh - 40px);\r\n}\r\n\r\n.page-title {\r\n  color: #2c5038;\r\n  margin-bottom: 25px;\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.actions-bar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  max-width: 300px;\r\n  position: relative;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.search-input:focus {\r\n  border-color: #2c5038;\r\n  outline: none;\r\n}\r\n\r\n.add-famille-btn {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.add-famille-btn:hover {\r\n  background-color: #1e3725;\r\n}\r\n\r\n.families-table {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.05);\r\n  overflow: hidden;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\nth {\r\n  background-color: #f4f6f8;\r\n  color: #2c5038;\r\n  font-weight: 600;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.badge-members {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 0.8rem;\r\n  display: inline-block;\r\n  min-width: 25px;\r\n  text-align: center;\r\n}\r\n\r\n.actions-cell {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.action-btn {\r\n  width: 32px;\r\n  height: 32px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s, background-color 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.action-btn.edit {\r\n  background-color: #2c5038;\r\n  color: white;\r\n}\r\n\r\n.action-btn.view {\r\n  background-color: #4a6fa5;\r\n  color: white;\r\n}\r\n\r\n.action-btn.delete {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.action-btn.edit:hover {\r\n  background-color: #1e3725;\r\n}\r\n\r\n.action-btn.view:hover {\r\n  background-color: #3a5a84;\r\n}\r\n\r\n.action-btn.delete:hover {\r\n  background-color: #bd2130;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 25px;\r\n  border-radius: 8px;\r\n  width: 500px;\r\n  max-width: 90%;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.members-modal {\r\n  width: 800px;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #2c5038;\r\n}\r\n\r\ninput, select, textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\ninput:focus, select:focus, textarea:focus {\r\n  border-color: #2c5038;\r\n  outline: none;\r\n}\r\n\r\ntextarea {\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  margin-top: 25px;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #1e3725;\r\n}\r\n\r\n.save-btn:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.success-msg {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  margin-top: 15px;\r\n}\r\n\r\n.error-msg {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  margin-top: 15px;\r\n}\r\n\r\n.members-table {\r\n  width: 100%;\r\n  margin-top: 15px;\r\n}\r\n\r\n.member-avatar {\r\n  width: 32px;\r\n  height: 32px;\r\n  background-color: #e9ecef;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #2c5038;\r\n}\r\n\r\n.no-members {\r\n  padding: 40px 20px;\r\n  text-align: center;\r\n  color: #6c757d;\r\n}\r\n\r\n.no-members i {\r\n  font-size: 48px;\r\n  margin-bottom: 15px;\r\n  color: #dee2e6;\r\n}\r\n\r\n.no-members p {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-member-btn {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  font-size: 14px;\r\n}\r\n\r\n.add-member-btn:hover {\r\n  background-color: #1e3725;\r\n}\r\n\r\n.add-member-btn-empty {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.search-container {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.search-btn {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.search-results {\r\n  margin-top: 20px;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n}\r\n\r\n.search-results h3 {\r\n  margin-bottom: 15px;\r\n  color: #2c5038;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n}\r\n\r\n.users-list {\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.user-item:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.user-item.selected {\r\n  background-color: #e8f4ea;\r\n  border: 1px solid #2c5038;\r\n}\r\n\r\n.user-icon {\r\n  width: 32px;\r\n  height: 32px;\r\n  background-color: #e9ecef;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 10px;\r\n  color: #2c5038;\r\n}\r\n\r\n.user-info {\r\n  flex: 1;\r\n}\r\n\r\n.user-name {\r\n  font-weight: 500;\r\n}\r\n\r\n.user-login {\r\n  font-size: 12px;\r\n  color: #6c757d;\r\n}\r\n\r\n.separator {\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  margin: 20px 0;\r\n}\r\n\r\n.separator::before,\r\n.separator::after {\r\n  content: '';\r\n  flex: 1;\r\n  border-bottom: 1px solid #dee2e6;\r\n}\r\n\r\n.separator span {\r\n  padding: 0 10px;\r\n  color: #6c757d;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Notification */\r\n.notification {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  animation: fadeIn 0.3s ease;\r\n}\r\n\r\n.notification-content {\r\n  background-color: white;\r\n  padding: 25px;\r\n  border-radius: 12px;\r\n  width: 500px;\r\n  max-width: 90%;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  animation: slideDown 0.3s ease-out;\r\n}\r\n\r\n.notification-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.notification-success .notification-icon {\r\n  color: #28a745;\r\n}\r\n\r\n.notification-error .notification-icon {\r\n  color: #dc3545;\r\n}\r\n\r\n.notification-warning .notification-icon {\r\n  color: #ffc107;\r\n}\r\n\r\n.notification-info .notification-icon {\r\n  color: #17a2b8;\r\n}\r\n\r\n.notification-text {\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.notification-text p {\r\n  color: #333;\r\n  font-size: 18px;\r\n  margin: 0;\r\n  line-height: 1.5;\r\n}\r\n\r\n.notification-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.notification-close {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 25px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.notification-close:hover {\r\n  background-color: #1e3725;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n\r\n@keyframes slideDown {\r\n  from { transform: translateY(-50px); opacity: 0; }\r\n  to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n.notification-btn {\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n  border: none;\r\n  margin: 0 5px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.notification-btn:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.notification-btn.confirm {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.notification-btn.confirm:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.notification-btn.cancel {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.notification-btn.cancel:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.notification-btn.danger {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.notification-btn.danger:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.notification-btn.warning {\r\n  background-color: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n.notification-btn.warning:hover {\r\n  background-color: #e0a800;\r\n}\r\n\r\n.notification-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.confirmation-details {\r\n  margin-top: 15px;\r\n  padding: 15px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 6px;\r\n}\r\n\r\n.member-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.member-info-item {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.member-warning {\r\n  margin-top: 10px;\r\n  font-size: 0.85rem;\r\n  color: #721c24;\r\n  background-color: #f8d7da;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.member-warning i {\r\n  color: #dc3545;\r\n}\r\n\r\n.members-search-bar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-container {\r\n  position: relative;\r\n}\r\n\r\n.search-icon {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #6c757d;\r\n}\r\n\r\n.search-input {\r\n  padding-right: 30px;\r\n}\r\n\r\n.no-results {\r\n  padding: 40px 20px;\r\n  text-align: center;\r\n  color: #6c757d;\r\n}\r\n\r\n.reset-search-btn {\r\n  background-color: #2c5038;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.reset-search-btn:hover {\r\n  background-color: #1e3725;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}